{
  "version": 3,
  "sources": ["ns-hugo:/home/runner/work/site/site/assets/js/helper.ts", "ns-hugo:/home/runner/work/site/site/assets/js/components/menu.ts", "ns-hugo:/home/runner/work/site/site/assets/js/components/modal.ts", "ns-hugo:/home/runner/work/site/site/assets/js/components/theme-switcher.ts", "<stdin>"],
  "sourcesContent": ["export const getViewportWidth = function () {\n    return Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n}\n\nexport const debounce = function (callback){\n    let timer;\n    return function(event){\n        if(timer) {\n            clearTimeout(timer);\n        }\n        timer = setTimeout(callback, 100, event);\n    };\n}\n", "import {debounce, getViewportWidth} from '../helper';\n\nexport const menu = function () {\n    const QUERY = {\n        body: 'body',\n        menu: '.menu',\n        menuBtn: '.menu__btn',\n        open: 'open',\n        closed: 'closed',\n        isOpen: 'is-open',\n        isClosed: 'is-closed',\n        isLoading: 'is-loading',\n        hasMenuOpen: 'has-menu-open',\n        menuCookie: 'menu-state'\n    }\n\n    const menuState = sessionStorage.getItem(QUERY.menuCookie);\n\n    const $body = document.querySelector(QUERY.body);\n    const $menu = document.querySelector(QUERY.menu);\n    const $menuBtn = document.querySelector(QUERY.menuBtn);\n\n    const open = function () {\n        $menu.classList.add(QUERY.isOpen);\n        $menu.classList.remove(QUERY.isClosed);\n        $body.classList.add(QUERY.hasMenuOpen);\n        sessionStorage.setItem(QUERY.menuCookie, QUERY.open);\n    }\n\n    const close = function () {\n        $menu.classList.add(QUERY.isClosed);\n        $menu.classList.remove(QUERY.isOpen);\n        $body.classList.remove(QUERY.hasMenuOpen);\n        sessionStorage.setItem(QUERY.menuCookie, QUERY.closed);\n    }\n\n    const onMenuBtnClick = function () {\n        if ($menu.classList.contains(QUERY.isOpen)) {\n            close();\n        } else if ($menu.classList.contains(QUERY.isClosed)) {\n            open();\n        }\n    }\n\n    const bindEvents = function () {\n        $menuBtn.addEventListener('click', onMenuBtnClick.bind(this));\n        window.addEventListener('resize', debounce(function(){\n            if (getViewportWidth() < 670) {\n                close();\n            } else {\n                open();\n            }\n        }));\n    }\n\n    const init = function () {\n        if (getViewportWidth() < 670) {\n            close();\n        } else {\n            if (menuState === null || menuState === QUERY.open) {\n                open();\n            } else {\n                close();\n            }\n        }\n\n        $body.classList.remove(QUERY.isLoading);\n    }\n\n    if ($menu && $menuBtn) {\n        bindEvents();\n        init();\n    }\n};\n", "export const modal = function () {\n    const QUERY = {\n        modal: '.modal',\n        closeBtn: '.modal__close-btn',\n        figure: '.figure',\n        svgFigure: 'figure--svg',\n        svg: 'svg',\n        original: 'original',\n        figcaption: 'figcaption',\n        isHidden: 'is-hidden',\n        link: 'a'\n    }\n\n    const $modal = document.querySelector(QUERY.modal);\n    const $figures = document.querySelectorAll(QUERY.figure);\n    const $closeBtn = $modal.querySelector(QUERY.closeBtn);\n\n    const createFigure = function ($fig) {\n        const imageSrc = $fig.querySelector(QUERY.link).href;\n        const imageOrientation = $fig.dataset.orientation;\n        const style = $fig.classList.contains(QUERY.svgFigure) ? QUERY.svg : QUERY.original;\n\n        const $image = document.createElement('img');\n\n        $image.classList.add(style);\n        $image.src = imageSrc;\n\n        if (imageOrientation) {\n            $image.classList.add(imageOrientation);\n        }\n\n        return $image;\n    }\n\n    const onFigureClicked = function ($figure, event) {\n        event.preventDefault();\n\n        const $figcaptionClone = $figure.querySelector(QUERY.figcaption).cloneNode(true);\n        $modal.querySelector('.modal__figure').replaceChildren(createFigure($figure), $figcaptionClone);\n        $modal.classList.remove(QUERY.isHidden);\n    }\n\n    const init = function () {\n        $figures.forEach($figure => {\n            $figure.addEventListener('click', onFigureClicked.bind(this, $figure));\n        })\n\n        $closeBtn.addEventListener('click', function () {\n            $modal.classList.add(QUERY.isHidden);\n        })\n\n        $modal.addEventListener('click', function (event) {\n            if (event.target === $modal) {\n                $modal.classList.add(QUERY.isHidden);\n            }\n        })\n    }\n\n    if ($modal && $figures && $closeBtn) {\n        init();\n    }\n}", "export const themeSwitcher = function () {\n    const QUERY = {\n        html: 'html',\n        themeBtn: '.header__theme-btn',\n        darkTheme: 'dark',\n        lightTheme: 'light',\n        themeCookie: 'theme-state',\n        prefersDark: '(prefers-color-scheme: dark)'\n    }\n    \n    const $root = document.querySelector(QUERY.html);\n    const $themeSwitcher = document.querySelector(QUERY.themeBtn);\n\n    const systemInitiatedDark = window.matchMedia(QUERY.prefersDark);\n    const themeState = sessionStorage.getItem(QUERY.themeCookie);\n    \n    const activateDarkTheme = function () {\n        $root.classList.add(QUERY.darkTheme);\n        $root.classList.remove(QUERY.lightTheme);\n        sessionStorage.setItem(QUERY.themeCookie, QUERY.darkTheme);\n    }\n\n    const activateLightTheme = function () {\n        $root.classList.add(QUERY.lightTheme);\n        $root.classList.remove(QUERY.darkTheme);\n        sessionStorage.setItem(QUERY.themeCookie, QUERY.lightTheme);\n    }\n\n    const changeMode = function (isDarkModeActivated) {\n        if (isDarkModeActivated) {\n            activateDarkTheme();\n        } else {\n            activateLightTheme();\n        }\n    }\n\n    const bindEvents = function () {\n        if ($themeSwitcher) {\n            $themeSwitcher.addEventListener('click', function () {\n                changeMode(!$root.classList.contains(QUERY.darkTheme));\n            })\n        }\n    }\n\n    const init = function () {\n        if (!!themeState) {\n            changeMode(themeState === QUERY.darkTheme);\n        } else {\n            changeMode(systemInitiatedDark.matches);\n        }\n    }\n\n    init();\n    bindEvents();\n};", "import { menu } from './components/menu';\nimport { modal } from './components/modal'\nimport { themeSwitcher } from './components/theme-switcher';\n\nwindow.addEventListener('load', function () {\n    menu();\n    modal();\n    themeSwitcher();\n});"],
  "mappings": "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",
  "names": ["getViewportWidth", "debounce", "callback", "timer", "event", "menu", "QUERY", "menuState", "$body", "$menu", "$menuBtn", "open", "close", "onMenuBtnClick", "bindEvents", "debounce", "getViewportWidth", "init", "modal", "QUERY", "$modal", "$figures", "$closeBtn", "createFigure", "$fig", "imageSrc", "imageOrientation", "style", "$image", "onFigureClicked", "$figure", "event", "$figcaptionClone", "themeSwitcher", "QUERY", "$root", "$themeSwitcher", "systemInitiatedDark", "themeState", "activateDarkTheme", "activateLightTheme", "changeMode", "isDarkModeActivated", "bindEvents", "menu", "modal", "themeSwitcher"]
}
