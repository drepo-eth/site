{
  "version": 3,
  "sources": ["../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Utils/Vector.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Utils/Utils.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Canvas.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Utils/FrameManager.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Random.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Options.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Particle.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Utils/Point.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Utils/Range.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Utils/Circle.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Particles.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Retina.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Container.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Loader.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/engine.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Utils/HslColorManager.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js", "../../home/runner/work/site/site/node_modules/tsparticles-engine/esm/index.js", "../../home/runner/work/site/site/node_modules/tsparticles-move-base/esm/Utils.js", "../../home/runner/work/site/site/node_modules/tsparticles-move-base/esm/BaseMover.js", "../../home/runner/work/site/site/node_modules/tsparticles-move-base/esm/index.js", "../../home/runner/work/site/site/node_modules/tsparticles-shape-circle/esm/CircleDrawer.js", "../../home/runner/work/site/site/node_modules/tsparticles-shape-circle/esm/index.js", "../../home/runner/work/site/site/node_modules/tsparticles-updater-color/esm/ColorUpdater.js", "../../home/runner/work/site/site/node_modules/tsparticles-updater-color/esm/index.js", "../../home/runner/work/site/site/node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js", "../../home/runner/work/site/site/node_modules/tsparticles-updater-opacity/esm/index.js", "../../home/runner/work/site/site/node_modules/tsparticles-updater-out-modes/esm/Utils.js", "../../home/runner/work/site/site/node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js", "../../home/runner/work/site/site/node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js", "../../home/runner/work/site/site/node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js", "../../home/runner/work/site/site/node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js", "../../home/runner/work/site/site/node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js", "../../home/runner/work/site/site/node_modules/tsparticles-updater-out-modes/esm/index.js", "../../home/runner/work/site/site/node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js", "../../home/runner/work/site/site/node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js", "../../home/runner/work/site/site/node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js", "../../home/runner/work/site/site/node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js", "../../home/runner/work/site/site/node_modules/tsparticles-interaction-particles-links/esm/Linker.js", "../../home/runner/work/site/site/node_modules/tsparticles-interaction-particles-links/esm/interaction.js", "../../home/runner/work/site/site/node_modules/tsparticles-interaction-particles-links/esm/Utils.js", "../../home/runner/work/site/site/node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js", "../../home/runner/work/site/site/node_modules/tsparticles-interaction-particles-links/esm/plugin.js", "../../home/runner/work/site/site/node_modules/tsparticles-interaction-particles-links/esm/index.js", "../../home/runner/work/site/site/node_modules/tsparticles-updater-size/esm/SizeUpdater.js", "../../home/runner/work/site/site/node_modules/tsparticles-updater-size/esm/index.js", "../../home/runner/work/site/site/node_modules/tsparticles-preset-links/esm/options.js", "../../home/runner/work/site/site/node_modules/tsparticles-preset-links/esm/index.js", "<stdin>"],
  "sourcesContent": ["export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        var _a;\n        this.removeEventListener(type, listener);\n        if (!this._listeners.get(type)) {\n            this._listeners.set(type, []);\n        }\n        (_a = this._listeners.get(type)) === null || _a === void 0 ? void 0 : _a.push(listener);\n    }\n    dispatchEvent(type, args) {\n        var _a;\n        (_a = this._listeners.get(type)) === null || _a === void 0 ? void 0 : _a.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n", "export class Vector3d {\n    constructor(xOrCoords, y, z) {\n        if (typeof xOrCoords !== \"number\" && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z !== null && z !== void 0 ? z : 0;\n        }\n        else {\n            throw new Error(\"tsParticles - Vector3d not initialized correctly\");\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this.updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this.updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n    updateFromAngle(angle, length) {\n        this.x = Math.cos(angle) * length;\n        this.y = Math.sin(angle) * length;\n    }\n}\n", "import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n", "import { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (!easings.get(name)) {\n        easings.set(name, easing);\n    }\n}\nexport function getEasing(name) {\n    return easings.get(name) || ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return typeof value === \"number\" ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return typeof value === \"number\" ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return typeof value === \"number\" ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && typeof source === \"number\")) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = typeof random === \"boolean\"\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (typeof direction === \"number\") {\n        return (direction * Math.PI) / 180;\n    }\n    else {\n        switch (direction) {\n            case \"top\":\n                return -Math.PI / 2;\n            case \"top-right\":\n                return -Math.PI / 4;\n            case \"right\":\n                return 0;\n            case \"bottom-right\":\n                return Math.PI / 4;\n            case \"bottom\":\n                return Math.PI / 2;\n            case \"bottom-left\":\n                return (3 * Math.PI) / 4;\n            case \"left\":\n                return Math.PI;\n            case \"top-left\":\n                return (-3 * Math.PI) / 4;\n            case \"inside\":\n                return Math.atan2(center.y - position.y, center.x - position.x);\n            case \"outside\":\n                return Math.atan2(position.y - center.y, position.x - center.x);\n            default:\n                return getRandom() * Math.PI * 2;\n        }\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    var _a, _b, _c, _d;\n    return {\n        x: (((_b = (_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : getRandom() * 100) * data.size.width) / 100,\n        y: (((_d = (_c = data.position) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    var _a, _b;\n    const position = {\n        x: ((_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: ((_b = data.position) === null || _b === void 0 ? void 0 : _b.y) !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    var _a, _b, _c, _d;\n    return {\n        x: (_b = (_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : getRandom() * data.size.width,\n        y: (_d = (_c = data.position) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    var _a, _b;\n    const position = {\n        x: ((_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: ((_b = data.position) === null || _b === void 0 ? void 0 : _b.y) !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n", "import { collisionVelocity, getDistances, getRandom, getValue } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nfunction rectSideBounce(pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor) {\n    const res = { bounced: false };\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return res instanceof Array ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function animate() {\n    return isSsr()\n        ? (callback) => setTimeout(callback)\n        : (callback) => (requestAnimationFrame || setTimeout)(callback);\n}\nexport function cancelAnimation() {\n    return isSsr()\n        ? (handle) => clearTimeout(handle)\n        : (handle) => (cancelAnimationFrame || clearTimeout)(handle);\n}\nexport function isInArray(value, array) {\n    return value === array || (array instanceof Array && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight !== null && weight !== void 0 ? weight : \"400\"} 36px '${font !== null && font !== void 0 ? font : \"Verdana\"}'`);\n    }\n    catch (_a) {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius !== null && radius !== void 0 ? radius : 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (typeof source !== \"object\") {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (typeof destination !== \"object\" || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (typeof destination !== \"object\" || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], isObject = typeof value === \"object\", destDict = destination;\n            destDict[key] =\n                isObject && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        min: bounds.left,\n        max: bounds.right,\n    }, {\n        min: bounds.top,\n        max: bounds.bottom,\n    }, {\n        min: divBounds.left,\n        max: divBounds.right,\n    }, {\n        min: divBounds.top,\n        max: divBounds.bottom,\n    }, particle.velocity.x, getValue(particle.options.bounce.horizontal));\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        min: bounds.top,\n        max: bounds.bottom,\n    }, {\n        min: bounds.left,\n        max: bounds.right,\n    }, {\n        min: divBounds.top,\n        max: divBounds.bottom,\n    }, {\n        min: divBounds.left,\n        max: divBounds.right,\n    }, particle.velocity.y, getValue(particle.options.bounce.vertical));\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return obj instanceof Array ? obj.map((item, index) => callback(item, index)) : callback(obj, 0);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return obj instanceof Array ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return obj instanceof Array ? obj.find((t, index) => callback(t, index)) : callback(obj, 0) ? obj : undefined;\n}\n", "import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = typeof input === \"string\" ? { value: input } : input;\n    if (typeof color.value === \"string\") {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (color.value instanceof Array) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = typeof input === \"string\" ? { value: input } : input;\n    if (typeof color.value === \"string\") {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (color.value instanceof Array) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    var _a;\n    return (_a = stringToRgba(input)) === null || _a === void 0 ? void 0 : _a.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.b = hslPercent.l;\n        result.g = hslPercent.l;\n        result.r = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min !== null && min !== void 0 ? min : 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    var _a, _b;\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = (_a = p1.getFillColor()) !== null && _a !== void 0 ? _a : p1.getStrokeColor(), destColor = (_b = p2 === null || p2 === void 0 ? void 0 : p2.getFillColor()) !== null && _b !== void 0 ? _b : p2 === null || p2 === void 0 ? void 0 : p2.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = typeof optColor === \"string\" ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        colorValue.loops = 0;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n", "import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    var _a, _b, _c, _d, _e;\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * ((_a = transform.a) !== null && _a !== void 0 ? _a : 1),\n        b: rotateData.sin * ((_b = transform.b) !== null && _b !== void 0 ? _b : 1),\n        c: -rotateData.sin * ((_c = transform.c) !== null && _c !== void 0 ? _c : 1),\n        d: rotateData.cos * ((_d = transform.d) !== null && _d !== void 0 ? _d : 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = (_e = particle.strokeWidth) !== null && _e !== void 0 ? _e : 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (strokeWidth > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n", "export const generatedAttribute = \"generated\";\nexport const touchEndEvent = \"touchend\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchMoveEvent = \"touchmove\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\n", "import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, isSsr } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    var _a;\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = ((_a = factor[key]) !== null && _a !== void 0 ? _a : 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n        this._mutationObserver =\n            !isSsr() && typeof MutationObserver !== \"undefined\"\n                ? new MutationObserver((records) => {\n                    for (const record of records) {\n                        if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                            this._repairStyle();\n                        }\n                    }\n                })\n                : undefined;\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        var _a, _b;\n        (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n        if (this._generated) {\n            (_b = this.element) === null || _b === void 0 ? void 0 : _b.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this.stop();\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        if (!this._context) {\n            return;\n        }\n        return cb(this._context);\n    }\n    drawParticle(particle, delta) {\n        var _a;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            var _a, _b, _c, _d;\n            const options = this.container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = (_c = (_a = particle.bubble.opacity) !== null && _a !== void 0 ? _a : (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1, strokeOpacity = (_d = particle.strokeOpacity) !== null && _d !== void 0 ? _d : opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container: this.container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            drawParticlePlugin(ctx, plugin, particle, delta);\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            drawPlugin(ctx, plugin, delta);\n        });\n    }\n    async init() {\n        var _a;\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            console.error(e);\n        }\n        this.initBackground();\n        if (this.element) {\n            (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.element, { attributes: true });\n        }\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element, elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        var _a, _b;\n        if (this._generated) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(this.element, { attributes: true });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return;\n        }\n        const oldSize = Object.assign({}, size);\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    stop() {\n        this.draw((ctx) => {\n            clear(ctx, this.size);\n        });\n    }\n    async windowResize() {\n        if (!this.element) {\n            return;\n        }\n        this.resize();\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n    _applyPostDrawUpdaters(particle) {\n        var _a;\n        for (const updater of this._postDrawUpdaters) {\n            (_a = updater.afterDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    _applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform) {\n        var _a;\n        for (const updater of this._preDrawUpdaters) {\n            if (updater.getColorStyles) {\n                const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                if (fill) {\n                    colorStyles.fill = fill;\n                }\n                if (stroke) {\n                    colorStyles.stroke = stroke;\n                }\n            }\n            if (updater.getTransformValues) {\n                const updaterTransform = updater.getTransformValues(particle);\n                for (const key in updaterTransform) {\n                    setTransformValue(transform, updaterTransform, key);\n                }\n            }\n            (_a = updater.beforeDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    _applyResizePlugins() {\n        for (const plugin of this._resizePlugins) {\n            if (plugin.resize) {\n                plugin.resize();\n            }\n        }\n    }\n    _getPluginParticleColors(particle) {\n        let fColor, sColor;\n        for (const plugin of this._colorPlugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    _initCover() {\n        const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n        if (coverRgb) {\n            const coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n            this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n        }\n    }\n    _initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        if (this._fullScreen) {\n            this._originalStyle = deepExtend({}, element.style);\n            this._setFullScreenStyle();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        for (const key in options.style) {\n            if (!key || !options.style) {\n                continue;\n            }\n            const value = options.style[key];\n            if (!value) {\n                continue;\n            }\n            element.style.setProperty(key, value, \"important\");\n        }\n    }\n    async _initTrail() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n        if (!trail.enable) {\n            return;\n        }\n        if (trailFill.color) {\n            const fillColor = rangeColorToRgb(trailFill.color);\n            if (!fillColor) {\n                return;\n            }\n            const trail = options.particles.move.trail;\n            this._trailFill = {\n                color: Object.assign({}, fillColor),\n                opacity: 1 / trail.length,\n            };\n        }\n        else {\n            await new Promise((resolve, reject) => {\n                if (!trailFill.image) {\n                    return;\n                }\n                const img = document.createElement(\"img\");\n                img.addEventListener(\"load\", () => {\n                    this._trailFill = {\n                        image: img,\n                        opacity: 1 / trail.length,\n                    };\n                    resolve();\n                });\n                img.addEventListener(\"error\", (evt) => {\n                    reject(evt.error);\n                });\n                img.src = trailFill.image;\n            });\n        }\n    }\n    _paintBase(baseColor) {\n        this.draw((ctx) => {\n            paintBase(ctx, this.size, baseColor);\n        });\n    }\n    _paintImage(image, opacity) {\n        this.draw((ctx) => {\n            paintImage(ctx, this.size, image, opacity);\n        });\n    }\n    _repairStyle() {\n        var _a, _b;\n        const element = this.element;\n        if (!element) {\n            return;\n        }\n        (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n        this._initStyle();\n        this.initBackground();\n        (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(element, { attributes: true });\n    }\n    _resetOriginalStyle() {\n        const element = this.element, originalStyle = this._originalStyle;\n        if (!(element && originalStyle)) {\n            return;\n        }\n        element.style.position = originalStyle.position;\n        element.style.zIndex = originalStyle.zIndex;\n        element.style.top = originalStyle.top;\n        element.style.left = originalStyle.left;\n        element.style.width = originalStyle.width;\n        element.style.height = originalStyle.height;\n    }\n    _setFullScreenStyle() {\n        const element = this.element;\n        if (!element) {\n            return;\n        }\n        const priority = \"important\";\n        element.style.setProperty(\"position\", \"fixed\", priority);\n        element.style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n        element.style.setProperty(\"top\", \"0\", priority);\n        element.style.setProperty(\"left\", \"0\", priority);\n        element.style.setProperty(\"width\", \"100%\", priority);\n        element.style.setProperty(\"height\", \"100%\", priority);\n    }\n}\n", "import { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (typeof options === \"boolean\") {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this.canPush = true;\n        this.handlers = {\n            mouseMove: (e) => this.mouseTouchMove(e),\n            touchStart: (e) => this.mouseTouchMove(e),\n            touchMove: (e) => this.mouseTouchMove(e),\n            touchEnd: () => this.mouseTouchFinish(),\n            mouseLeave: () => this.mouseTouchFinish(),\n            touchCancel: () => this.mouseTouchFinish(),\n            touchEndClick: (e) => this.mouseTouchClick(e),\n            mouseUp: (e) => this.mouseTouchClick(e),\n            mouseDown: () => this.mouseDown(),\n            visibilityChange: () => this.handleVisibilityChange(),\n            themeChange: (e) => this.handleThemeChange(e),\n            oldThemeChange: (e) => this.handleThemeChange(e),\n            resize: () => this.handleWindowResize(),\n        };\n    }\n    addListeners() {\n        this.manageListeners(true);\n    }\n    removeListeners() {\n        this.manageListeners(false);\n    }\n    doMouseTouchClick(e) {\n        const container = this.container, options = container.actualOptions;\n        if (this.canPush) {\n            const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n            if (!mousePos) {\n                return;\n            }\n            mouseInteractivity.clickPosition = Object.assign({}, mousePos);\n            mouseInteractivity.clickTime = new Date().getTime();\n            const onClick = options.interactivity.events.onClick;\n            executeOnSingleOrMultiple(onClick.mode, (mode) => this.handleClickMode(mode));\n        }\n        if (e.type === \"touchend\") {\n            setTimeout(() => this.mouseTouchFinish(), 500);\n        }\n    }\n    handleClickMode(mode) {\n        this.container.handleClickMode(mode);\n    }\n    handleThemeChange(e) {\n        const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n        if (theme && theme.default.auto) {\n            container.loadTheme(themeName);\n        }\n    }\n    handleVisibilityChange() {\n        const container = this.container, options = container.actualOptions;\n        this.mouseTouchFinish();\n        if (!options.pauseOnBlur) {\n            return;\n        }\n        if (document === null || document === void 0 ? void 0 : document.hidden) {\n            container.pageHidden = true;\n            container.pause();\n        }\n        else {\n            container.pageHidden = false;\n            if (container.getAnimationStatus()) {\n                container.play(true);\n            }\n            else {\n                container.draw(true);\n            }\n        }\n    }\n    handleWindowResize() {\n        if (this.resizeTimeout) {\n            clearTimeout(this.resizeTimeout);\n            delete this.resizeTimeout;\n        }\n        this.resizeTimeout = setTimeout(async () => { var _a; return (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize(); }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n    }\n    manageListeners(add) {\n        var _a;\n        const handlers = this.handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn;\n        let mouseLeaveTmpEvent = mouseLeaveEvent;\n        if (detectType === \"window\") {\n            container.interactivity.element = window;\n            mouseLeaveTmpEvent = mouseOutEvent;\n        }\n        else if (detectType === \"parent\" && container.canvas.element) {\n            const canvasEl = container.canvas.element;\n            container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n        }\n        else {\n            container.interactivity.element = container.canvas.element;\n        }\n        const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n        if (mediaMatch) {\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n            }\n            else if (mediaMatch.addListener !== undefined) {\n                if (add) {\n                    mediaMatch.addListener(handlers.oldThemeChange);\n                }\n                else {\n                    mediaMatch.removeListener(handlers.oldThemeChange);\n                }\n            }\n        }\n        const interactivityEl = container.interactivity.element;\n        if (!interactivityEl) {\n            return;\n        }\n        const html = interactivityEl;\n        if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        }\n        if (container.canvas.element) {\n            container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n        }\n        if (options.interactivity.events.resize) {\n            if (typeof ResizeObserver !== \"undefined\") {\n                if (this.resizeObserver && !add) {\n                    if (container.canvas.element) {\n                        this.resizeObserver.unobserve(container.canvas.element);\n                    }\n                    this.resizeObserver.disconnect();\n                    delete this.resizeObserver;\n                }\n                else if (!this.resizeObserver && add && container.canvas.element) {\n                    this.resizeObserver = new ResizeObserver((entries) => {\n                        const entry = entries.find((e) => e.target === container.canvas.element);\n                        if (!entry) {\n                            return;\n                        }\n                        this.handleWindowResize();\n                    });\n                    this.resizeObserver.observe(container.canvas.element);\n                }\n            }\n            else {\n                manageListener(window, resizeEvent, handlers.resize, add);\n            }\n        }\n        if (document) {\n            manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n        }\n    }\n    mouseDown() {\n        const interactivity = this.container.interactivity;\n        if (interactivity) {\n            const mouse = interactivity.mouse;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        }\n    }\n    mouseTouchClick(e) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse;\n        mouse.inside = true;\n        let handled = false;\n        const mousePosition = mouse.position;\n        if (!mousePosition || !options.interactivity.events.onClick.enable) {\n            return;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (!plugin.clickPositionValid) {\n                continue;\n            }\n            handled = plugin.clickPositionValid(mousePosition);\n            if (handled) {\n                break;\n            }\n        }\n        if (!handled) {\n            this.doMouseTouchClick(e);\n        }\n        mouse.clicking = false;\n    }\n    mouseTouchFinish() {\n        const interactivity = this.container.interactivity;\n        if (!interactivity) {\n            return;\n        }\n        const mouse = interactivity.mouse;\n        delete mouse.position;\n        delete mouse.clickPosition;\n        delete mouse.downPosition;\n        interactivity.status = mouseLeaveEvent;\n        mouse.inside = false;\n        mouse.clicking = false;\n    }\n    mouseTouchMove(e) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const container = this.container, options = container.actualOptions;\n        if (!((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element)) {\n            return;\n        }\n        container.interactivity.mouse.inside = true;\n        let pos;\n        const canvas = container.canvas.element;\n        if (e.type.startsWith(\"pointer\")) {\n            this.canPush = true;\n            const mouseEvent = e;\n            if (container.interactivity.element === window) {\n                if (canvas) {\n                    const clientRect = canvas.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.clientX - clientRect.left,\n                        y: mouseEvent.clientY - clientRect.top,\n                    };\n                }\n            }\n            else if (options.interactivity.detectsOn === \"parent\") {\n                const source = mouseEvent.target, target = mouseEvent.currentTarget, canvasEl = container.canvas.element;\n                if (source && target && canvasEl) {\n                    const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                        y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                    };\n                }\n                else {\n                    pos = {\n                        x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n                        y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY,\n                    };\n                }\n            }\n            else if (mouseEvent.target === container.canvas.element) {\n                pos = {\n                    x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n                    y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY,\n                };\n            }\n        }\n        else {\n            this.canPush = e.type !== \"touchmove\";\n            const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n            pos = {\n                x: lastTouch.clientX - ((_f = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n                y: lastTouch.clientY - ((_g = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _g !== void 0 ? _g : 0),\n            };\n        }\n        const pxRatio = container.retina.pixelRatio;\n        if (pos) {\n            pos.x *= pxRatio;\n            pos.y *= pxRatio;\n        }\n        container.interactivity.mouse.position = pos;\n        container.interactivity.status = mouseMoveEvent;\n    }\n}\n", "function initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nexport class FrameManager {\n    constructor(container) {\n        this.container = container;\n    }\n    async nextFrame(timestamp) {\n        var _a;\n        try {\n            const container = this.container;\n            if (!container.smooth &&\n                container.lastFrameTime !== undefined &&\n                timestamp < container.lastFrameTime + 1000 / container.fpsLimit) {\n                container.draw(false);\n                return;\n            }\n            (_a = container.lastFrameTime) !== null && _a !== void 0 ? _a : (container.lastFrameTime = timestamp);\n            const delta = initDelta(timestamp - container.lastFrameTime, container.fpsLimit, container.smooth);\n            container.lifeTime += delta.value;\n            container.lastFrameTime = timestamp;\n            if (delta.value > 1000) {\n                container.draw(false);\n                return;\n            }\n            await container.particles.draw(delta);\n            if (container.duration > 0 && container.lifeTime > container.duration) {\n                container.destroy();\n                return;\n            }\n            if (container.getAnimationStatus()) {\n                container.draw(false);\n            }\n        }\n        catch (e) {\n            console.error(\"tsParticles error in animation loop\", e);\n        }\n    }\n}\n", "export class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (typeof data === \"string\" || data instanceof Array) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if ((data === null || data === void 0 ? void 0 : data.value) === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n", "import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (typeof data.cover === \"string\" ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n", "export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n", "export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n", "import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        const ids = (_b = (_a = data.ids) !== null && _a !== void 0 ? _a : data.elementId) !== null && _b !== void 0 ? _b : data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n", "export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n", "import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n", "export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n", "import { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nimport { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        this.onClick.load((_a = data.onClick) !== null && _a !== void 0 ? _a : data.onclick);\n        const onDiv = (_b = data.onDiv) !== null && _b !== void 0 ? _b : data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load((_c = data.onHover) !== null && _c !== void 0 ? _c : data.onhover);\n        if (typeof data.resize === \"boolean\") {\n            this.resize.enable = data.resize;\n        }\n        else {\n            this.resize.load(data.resize);\n        }\n    }\n}\n", "export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (this._container) {\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadModeOptions) {\n                        interactor.loadModeOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n", "import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        const detectsOn = (_a = data.detectsOn) !== null && _a !== void 0 ? _a : data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n", "import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        if (data.position !== undefined) {\n            this.position = {\n                x: (_a = data.position.x) !== null && _a !== void 0 ? _a : 50,\n                y: (_b = data.position.y) !== null && _b !== void 0 ? _b : 50,\n            };\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n", "import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n", "export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n", "import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n", "import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n", "import { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (typeof data === \"string\" || data instanceof Array) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n", "export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n", "export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n", "export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n", "import { Random } from \"./Random\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (typeof data.random === \"boolean\") {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\n", "import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n", "import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n", "import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n", "import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n", "import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        var _a, _b, _c, _d;\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = (_b = (_a = data.rotate) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = (_d = (_c = data.rotate) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n", "export class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = \"percent\";\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n", "import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n", "import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n", "import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrailFill {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n", "import { MoveTrailFill } from \"./MoveTrailFill\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    get fillColor() {\n        return this.fill.color;\n    }\n    set fillColor(value) {\n        this.fill.load({ color: value });\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined || data.fillColor !== undefined) {\n            this.fill.load(data.fill || { color: data.fillColor });\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n", "export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        var _a, _b, _c, _d;\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = (_a = data.bottom) !== null && _a !== void 0 ? _a : data.default;\n        this.left = (_b = data.left) !== null && _b !== void 0 ? _b : data.default;\n        this.right = (_c = data.right) !== null && _c !== void 0 ? _c : data.default;\n        this.top = (_d = data.top) !== null && _d !== void 0 ? _d : data.default;\n    }\n}\n", "import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.position = data.position ? deepExtend({}, data.position) : undefined;\n    }\n}\n", "import { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        this.angle.load(typeof data.angle === \"number\" ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance =\n                typeof data.distance === \"number\"\n                    ? {\n                        horizontal: data.distance,\n                        vertical: data.distance,\n                    }\n                    : Object.assign({}, data.distance);\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = (_b = (_a = data.outModes) !== null && _a !== void 0 ? _a : data.outMode) !== null && _b !== void 0 ? _b : data.out_mode;\n        if (outModes !== undefined) {\n            if (typeof outModes === \"object\") {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load((_c = data.path) !== null && _c !== void 0 ? _c : data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n", "import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { AnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.enable = false;\n        this.speed = 2;\n        this.startValue = \"random\";\n        this.sync = false;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.minimumValue = (_a = data.minimumValue) !== null && _a !== void 0 ? _a : data.opacity_min;\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = (_a = data.animation) !== null && _a !== void 0 ? _a : data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n", "export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    get area() {\n        return this.width;\n    }\n    set area(value) {\n        this.width = value;\n    }\n    get factor() {\n        return this.height;\n    }\n    set factor(value) {\n        this.height = value;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = (_b = (_a = data.width) !== null && _a !== void 0 ? _a : data.area) !== null && _b !== void 0 ? _b : data.value_area;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = (_c = data.height) !== null && _c !== void 0 ? _c : data.factor;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n", "import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 0;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = (_a = data.limit) !== null && _a !== void 0 ? _a : data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n", "import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n", "import { deepExtend } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        var _a;\n        return ((_a = this.options[charKey]) !== null && _a !== void 0 ? _a : this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        var _a;\n        return ((_a = this.options[imageKey]) !== null && _a !== void 0 ? _a : this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        var _a;\n        return ((_a = this.options[polygonKey]) !== null && _a !== void 0 ? _a : this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        const options = (_a = data.options) !== null && _a !== void 0 ? _a : data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend((_b = this.options[shape]) !== null && _b !== void 0 ? _b : {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape((_c = data.image) !== null && _c !== void 0 ? _c : data.images, imageKey, imageAltKey, true);\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n    loadShape(item, mainKey, altKey, altOverride) {\n        var _a, _b;\n        if (!item) {\n            return;\n        }\n        const isArray = item instanceof Array;\n        const emptyValue = isArray ? [] : {}, mainDifferentValues = isArray !== this.options[mainKey] instanceof Array, altDifferentValues = isArray !== this.options[altKey] instanceof Array;\n        if (mainDifferentValues) {\n            this.options[mainKey] = emptyValue;\n        }\n        if (altDifferentValues && altOverride) {\n            this.options[altKey] = emptyValue;\n        }\n        this.options[mainKey] = deepExtend((_a = this.options[mainKey]) !== null && _a !== void 0 ? _a : emptyValue, item);\n        if (!this.options[altKey] || altOverride) {\n            this.options[altKey] = deepExtend((_b = this.options[altKey]) !== null && _b !== void 0 ? _b : emptyValue, item);\n        }\n    }\n}\n", "import { AnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.enable = false;\n        this.speed = 5;\n        this.startValue = \"random\";\n        this.sync = false;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        var _a;\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.minimumValue = (_a = data.minimumValue) !== null && _a !== void 0 ? _a : data.size_min;\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        var _a;\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = (_a = data.animation) !== null && _a !== void 0 ? _a : data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n", "import { AnimatableColor } from \"../AnimatableColor\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n", "import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n", "import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        var _a, _b, _c, _d, _e, _f;\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend((_a = this.groups[group]) !== null && _a !== void 0 ? _a : {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = (_c = (_b = data.move) === null || _b === void 0 ? void 0 : _b.collisions) !== null && _c !== void 0 ? _c : (_d = data.move) === null || _d === void 0 ? void 0 : _d.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = (_e = data.stroke) !== null && _e !== void 0 ? _e : (_f = data.shape) === null || _f === void 0 ? void 0 : _f.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n", "import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n", "import { deepExtend, executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        var _a, _b, _c, _d, _e;\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = (_a = data.detectRetina) !== null && _a !== void 0 ? _a : data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = (_b = data.fpsLimit) !== null && _b !== void 0 ? _b : data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = (_c = data.fullScreen) !== null && _c !== void 0 ? _c : data.backgroundMode;\n        if (typeof fullScreen === \"boolean\") {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles !== undefined) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find((t) => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = (_d = this._findDefaultTheme(\"dark\")) === null || _d === void 0 ? void 0 : _d.name;\n        this.defaultThemes.light = (_e = this._findDefaultTheme(\"light\")) === null || _e === void 0 ? void 0 : _e.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions === null || responsiveOptions === void 0 ? void 0 : responsiveOptions.options);\n        return responsiveOptions === null || responsiveOptions === void 0 ? void 0 : responsiveOptions.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n    _findDefaultTheme(mode) {\n        var _a;\n        return ((_a = this.themes.find((theme) => theme.default.value && theme.default.mode === mode)) !== null && _a !== void 0 ? _a : this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n    }\n    _importPreset(preset) {\n        this.load(this._engine.plugins.getPreset(preset));\n    }\n}\n", "export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = this._engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                await interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.handleClickMode) {\n                interactor.handleClickMode(mode);\n            }\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                await interactor.interact(particle, delta);\n            }\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                await interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                await interactor.reset(particle);\n            }\n        }\n    }\n}\n", "import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, isInArray, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    if (data.coord > data.maxCoord - data.radius * 2) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < data.radius * 2) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        var _a;\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of this.container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n        (_a = this.pathGenerator) === null || _a === void 0 ? void 0 : _a.reset(this);\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        var _a;\n        return this._getRollColor((_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        var _a;\n        return (_a = this.bubble.radius) !== null && _a !== void 0 ? _a : this.size.value;\n    }\n    getStrokeColor() {\n        var _a;\n        return this._getRollColor((_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        particlesOptions.load((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles);\n        this.interactivity = new Interactivity(engine, container);\n        this.interactivity.load(container.actualOptions.interactivity);\n        this.interactivity.load(particlesOptions.interactivity);\n        this.fill = (_c = (_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.fill) !== null && _c !== void 0 ? _c : this.fill;\n        this.close = (_e = (_d = this.shapeData) === null || _d === void 0 ? void 0 : _d.close) !== null && _e !== void 0 ? _e : this.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        const zIndexValue = getRangeValue(this.options.zIndex.value);\n        container.retina.initParticle(this);\n        const sizeOptions = this.options.size, sizeRange = sizeOptions.value, sizeAnimation = sizeOptions.animation;\n        this.size = {\n            enable: sizeOptions.animation.enable,\n            value: getRangeValue(sizeOptions.value) * container.retina.pixelRatio,\n            max: getRangeMax(sizeRange) * pxRatio,\n            min: getRangeMin(sizeRange) * pxRatio,\n            loops: 0,\n            maxLoops: getRangeValue(sizeOptions.animation.count),\n        };\n        if (sizeAnimation.enable) {\n            this.size.status = \"increasing\";\n            this.size.decay = 1 - getRangeValue(sizeAnimation.decay);\n            switch (sizeAnimation.startValue) {\n                case \"min\":\n                    this.size.value = this.size.min;\n                    this.size.status = \"increasing\";\n                    break;\n                case \"random\":\n                    this.size.value = randomInRange(this.size);\n                    this.size.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                    break;\n                case \"max\":\n                default:\n                    this.size.value = this.size.max;\n                    this.size.status = \"decreasing\";\n                    break;\n            }\n        }\n        this.size.initialValue = this.size.value;\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n        this.initialPosition = this.position.copy();\n        const canvasSize = container.canvas.size, moveCenter = Object.assign({}, this.options.move.center), isCenterPercent = moveCenter.mode === \"percent\";\n        this.moveCenter = {\n            x: moveCenter.x * (isCenterPercent ? canvasSize.width / 100 : 1),\n            y: moveCenter.y * (isCenterPercent ? canvasSize.height / 100 : 1),\n            radius: (_f = this.options.move.center.radius) !== null && _f !== void 0 ? _f : 0,\n            mode: (_g = this.options.move.center.mode) !== null && _g !== void 0 ? _g : \"percent\",\n        };\n        this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n        switch (this.options.move.direction) {\n            case \"inside\":\n                this.outType = \"inside\";\n                break;\n            case \"outside\":\n                this.outType = \"outside\";\n                break;\n        }\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        this.offset = Vector.origin;\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.loadShape) {\n            drawer === null || drawer === void 0 ? void 0 : drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            (_h = mover.init) === null || _h === void 0 ? void 0 : _h.call(mover, this);\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            (_j = plugin.particleCreated) === null || _j === void 0 ? void 0 : _j.call(plugin, this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size;\n        return (this.position.x >= -radius &&\n            this.position.y >= -radius &&\n            this.position.y <= canvasSize.height + radius &&\n            this.position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        var _a;\n        for (const updater of this.container.particles.updaters) {\n            (_a = updater.reset) === null || _a === void 0 ? void 0 : _a.call(updater, this);\n        }\n    }\n    _calcPosition(container, position, zIndex, tryCount = 0) {\n        var _a, _b, _c, _d;\n        for (const [, plugin] of container.plugins) {\n            const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n            if (pluginPos !== undefined) {\n                return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n            }\n        }\n        const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n            size: canvasSize,\n            position: position,\n        }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-horizontal\"],\n                coord: pos.x,\n                maxCoord: container.canvas.size.width,\n                setCb: (value) => (pos.x += value),\n                radius,\n            });\n        }, fixVertical = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-vertical\"],\n                coord: pos.y,\n                maxCoord: container.canvas.size.height,\n                setCb: (value) => (pos.y += value),\n                radius,\n            });\n        };\n        fixHorizontal((_a = outModes.left) !== null && _a !== void 0 ? _a : outModes.default);\n        fixHorizontal((_b = outModes.right) !== null && _b !== void 0 ? _b : outModes.default);\n        fixVertical((_c = outModes.top) !== null && _c !== void 0 ? _c : outModes.default);\n        fixVertical((_d = outModes.bottom) !== null && _d !== void 0 ? _d : outModes.default);\n        if (this._checkOverlap(pos, tryCount)) {\n            return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n        }\n        return pos;\n    }\n    _calculateVelocity() {\n        const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n        if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n            return res;\n        }\n        const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n            left: radOffset - rad / 2,\n            right: radOffset + rad / 2,\n        };\n        if (!moveOptions.straight) {\n            res.angle += randomInRange(setRangeValue(range.left, range.right));\n        }\n        if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n            res.length *= getRandom();\n        }\n        return res;\n    }\n    _checkOverlap(pos, tryCount = 0) {\n        const collisionsOptions = this.options.collisions, radius = this.getRadius();\n        if (!collisionsOptions.enable) {\n            return false;\n        }\n        const overlapOptions = collisionsOptions.overlap;\n        if (overlapOptions.enable) {\n            return false;\n        }\n        const retries = overlapOptions.retries;\n        if (retries >= 0 && tryCount > retries) {\n            throw new Error(\"Particle is overlapping and can't be placed\");\n        }\n        let overlaps = false;\n        for (const particle of this.container.particles.array) {\n            if (getDistance(pos, particle.position) < radius + particle.getRadius()) {\n                overlaps = true;\n                break;\n            }\n        }\n        return overlaps;\n    }\n    _getRollColor(color) {\n        var _a;\n        if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n            return color;\n        }\n        const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor((((_a = this.roll.angle) !== null && _a !== void 0 ? _a : 0) + backSum) / (Math.PI / backFactor)) % 2;\n        if (!rolled) {\n            return color;\n        }\n        if (this.backColor) {\n            return this.backColor;\n        }\n        if (this.roll.alter) {\n            return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n        }\n        return color;\n    }\n    _loadShapeData(shapeOptions, reduceDuplicates) {\n        const shapeData = shapeOptions.options[this.shape];\n        if (shapeData) {\n            return deepExtend({}, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        }\n    }\n}\n", "export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n", "export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n", "import { Range } from \"./Range\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const rect = range, circle = range, pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (circle.radius !== undefined) {\n            const rSum = r + circle.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (rect.size !== undefined) {\n            const w = rect.size.width, h = rect.size.height, edges = Math.pow(distPos.x - w, 2) + Math.pow(distPos.y - h, 2);\n            return edges <= r ** 2 || (distPos.x <= r + w && distPos.y <= r + h) || distPos.x <= w || distPos.y <= h;\n        }\n        return false;\n    }\n}\n", "import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n", "import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._points = [];\n        this._divided = false;\n    }\n    insert(point) {\n        var _a, _b, _c, _d, _e;\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this.subdivide();\n        }\n        return ((_e = (((_a = this._NE) === null || _a === void 0 ? void 0 : _a.insert(point)) ||\n            ((_b = this._NW) === null || _b === void 0 ? void 0 : _b.insert(point)) ||\n            ((_c = this._SE) === null || _c === void 0 ? void 0 : _c.insert(point)) ||\n            ((_d = this._SW) === null || _d === void 0 ? void 0 : _d.insert(point)))) !== null && _e !== void 0 ? _e : false);\n    }\n    query(range, check, found) {\n        var _a, _b, _c, _d;\n        const res = found !== null && found !== void 0 ? found : [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            (_a = this._NE) === null || _a === void 0 ? void 0 : _a.query(range, check, res);\n            (_b = this._NW) === null || _b === void 0 ? void 0 : _b.query(range, check, res);\n            (_c = this._SE) === null || _c === void 0 ? void 0 : _c.query(range, check, res);\n            (_d = this._SW) === null || _d === void 0 ? void 0 : _d.query(range, check, res);\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n    subdivide() {\n        const x = this.rectangle.position.x, y = this.rectangle.position.y, w = this.rectangle.size.width, h = this.rectangle.size.height, capacity = this.capacity;\n        this._NE = new QuadTree(new Rectangle(x, y, w / 2, h / 2), capacity);\n        this._NW = new QuadTree(new Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n        this._SE = new QuadTree(new Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n        this._SW = new QuadTree(new Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n        this._divided = true;\n    }\n}\n", "import { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { calcPositionFromSize } from \"../Utils/NumberUtils\";\nexport class Particles {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.nextId = 0;\n        this.array = [];\n        this.zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this.interactionManager = new InteractionManager(this._engine, container);\n        const canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this.array.length;\n    }\n    addManualParticles() {\n        const container = this.container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(calcPositionFromSize({\n                size: container.canvas.size,\n                position: particle.position,\n            }), particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this.container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this.array = [];\n        this.zArray = [];\n    }\n    destroy() {\n        this.array = [];\n        this.zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this.container, canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        container.canvas.clear();\n        await this.update(delta);\n        if (this.needsSort) {\n            this.zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this.zArray) {\n            p.draw(delta);\n        }\n    }\n    handleClickMode(mode) {\n        this.interactionManager.handleClickMode(mode);\n    }\n    init() {\n        var _a;\n        const container = this.container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this.interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            const particle = this.array[i];\n            if (!particle || particle.group !== group) {\n                continue;\n            }\n            particle.destroy(override);\n            this.array.splice(i--, 1);\n            const zIdx = this.zArray.indexOf(particle);\n            this.zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            deleted++;\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this.container.actualOptions;\n        for (const group in options.particles.groups) {\n            this._applyDensity(options.particles.groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        var _a, _b;\n        const container = this.container, particlesToDelete = [];\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            (_a = plugin.update) === null || _a === void 0 ? void 0 : _a.call(plugin, delta);\n        }\n        for (const particle of this.array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this.interactionManager.reset(particle);\n            for (const [, plugin] of this.container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                (_b = plugin.particleUpdate) === null || _b === void 0 ? void 0 : _b.call(plugin, particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.push(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        for (const particle of particlesToDelete) {\n            this.remove(particle);\n        }\n        await this.interactionManager.externalInteract(delta);\n        for (const particle of this.array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this.interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n    }\n    _applyDensity(options, manualCount, group) {\n        var _a;\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n            return;\n        }\n        const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.array.filter((t) => t.group === group).length);\n        this.limit = numberOptions.limit * densityFactor;\n        if (particlesCount < particlesNumber) {\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n        }\n        else if (particlesCount > particlesNumber) {\n            this.removeQuantity(particlesCount - particlesNumber, group);\n        }\n    }\n    _initDensityFactor(densityOptions) {\n        const container = this.container;\n        if (!container.canvas.element || !densityOptions.enable) {\n            return 1;\n        }\n        const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n        return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n    }\n    _pushParticle(position, overrideOptions, group, initializer) {\n        try {\n            let particle = this.pool.pop();\n            if (particle) {\n                particle.init(this.nextId, position, overrideOptions, group);\n            }\n            else {\n                particle = new Particle(this._engine, this.nextId, this.container, position, overrideOptions, group);\n            }\n            let canAdd = true;\n            if (initializer) {\n                canAdd = initializer(particle);\n            }\n            if (!canAdd) {\n                return;\n            }\n            this.array.push(particle);\n            this.zArray.push(particle);\n            this.nextId++;\n            this._engine.dispatchEvent(\"particleAdded\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n            return particle;\n        }\n        catch (e) {\n            console.warn(`error adding particle: ${e}`);\n            return;\n        }\n    }\n}\n", "import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles;\n        this.attractDistance = getRangeValue(particles.move.attract.distance) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n        this.maxSpeed = getRangeValue(particles.move.gravity.maxSpeed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveDistance = options.move.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(options.move.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(options.move.drift) * ratio;\n        props.moveSpeed = getRangeValue(options.move.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(options.move.gravity.maxSpeed) * ratio;\n    }\n}\n", "import { animate, cancelAnimation } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { FrameManager } from \"./Utils/FrameManager\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => {\n        const v = p.velocity.copy();\n        v.angle += (v.length * Math.PI) / 180;\n        return v;\n    },\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this.duration = 0;\n        this.lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.frameManager = new FrameManager(this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator !== null && generator !== void 0 ? generator : defaultPathGenerator);\n        return true;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            if (drawer.destroy) {\n                drawer.destroy(this);\n            }\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = animate()(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this.frameManager.nextFrame(timestamp);\n        });\n    }\n    exportConfiguration() {\n        return JSON.stringify(this.actualOptions, (key, value) => {\n            if (key === \"_engine\" || key === \"_container\") {\n                return;\n            }\n            return value;\n        }, 2);\n    }\n    exportImage(callback, type, quality) {\n        const element = this.canvas.element;\n        if (element) {\n            element.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n        }\n    }\n    exportImg(callback) {\n        this.exportImage(callback);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            if (plugin.handleClickMode) {\n                plugin.handleClickMode(mode);\n            }\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this.duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this.lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            if (drawer.init) {\n                await drawer.init(this);\n            }\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.init) {\n                await plugin.init();\n            }\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            if (plugin.particlesSetup) {\n                plugin.particlesSetup();\n            }\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimation()(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.pause) {\n                plugin.pause();\n            }\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._options = loadContainerOptions(this._engine, this);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = Object.assign({}, defaultPathGenerator);\n        if (typeof pathOrGenerator === \"function\") {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    if (plugin.start) {\n                        await plugin.start();\n                    }\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.stop) {\n                plugin.stop();\n            }\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n    _intersectionManager(entries) {\n        if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n            return;\n        }\n        for (const entry of entries) {\n            if (entry.target !== this.interactivity.element) {\n                continue;\n            }\n            (entry.isIntersecting ? this.play : this.pause)();\n        }\n    }\n}\n", "import { Container } from \"./Container\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nimport { itemFromSingleOrMultiple } from \"../Utils/Utils\";\nasync function getDataFromUrl(jsonUrl, index) {\n    const url = itemFromSingleOrMultiple(jsonUrl, index);\n    if (!url) {\n        return;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    console.error(`tsParticles - Error ${response.status} while retrieving config file`);\n}\nexport class Loader {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    load(tagId, options, index) {\n        const params = { index, remote: false };\n        if (typeof tagId === \"string\") {\n            params.tagId = tagId;\n        }\n        else {\n            params.options = tagId;\n        }\n        if (typeof options === \"number\") {\n            params.index = options;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    async loadJSON(tagId, jsonUrl, index) {\n        let url, id;\n        if (typeof jsonUrl === \"number\" || jsonUrl === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = jsonUrl;\n        }\n        return this.loadRemoteOptions({ tagId: id, url, index, remote: true });\n    }\n    async loadOptions(params) {\n        var _a, _b, _c;\n        const tagId = (_a = params.tagId) !== null && _a !== void 0 ? _a : `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url: jsonUrl, remote } = params, options = remote ? await getDataFromUrl(jsonUrl, index) : params.options;\n        let domContainer = (_b = params.element) !== null && _b !== void 0 ? _b : document.getElementById(tagId);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = tagId;\n            (_c = document.querySelector(\"body\")) === null || _c === void 0 ? void 0 : _c.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this._engine.dom(), oldIndex = dom.findIndex((v) => v.id === tagId);\n        if (oldIndex >= 0) {\n            const old = this._engine.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this._engine, tagId, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    async loadRemoteOptions(params) {\n        return this.loadOptions(params);\n    }\n    async set(id, domContainer, options, index) {\n        const params = { index, remote: false };\n        if (typeof id === \"string\") {\n            params.tagId = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (domContainer instanceof HTMLElement) {\n            params.element = domContainer;\n        }\n        else {\n            params.options = domContainer;\n        }\n        if (typeof options === \"number\") {\n            params.index = options;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    async setJSON(id, domContainer, jsonUrl, index) {\n        let url, newId, newIndex, element;\n        if (id instanceof HTMLElement) {\n            element = id;\n            url = domContainer;\n            newIndex = jsonUrl;\n        }\n        else {\n            newId = id;\n            element = domContainer;\n            url = jsonUrl;\n            newIndex = index;\n        }\n        return this.loadRemoteOptions({ tagId: newId, url, index: newIndex, element, remote: true });\n    }\n}\n", "import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        if (!this.getPathGenerator(type)) {\n            this.pathGenerators.set(type, pathGenerator);\n        }\n    }\n    addPlugin(plugin) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n    }\n    addPreset(presetKey, options, override = false) {\n        if (override || !this.getPreset(presetKey)) {\n            this.presets.set(presetKey, options);\n        }\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) => {\n            if (!this.getShapeDrawer(type)) {\n                this.drawers.set(type, drawer);\n            }\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (!plugin.needsPlugin(container.actualOptions)) {\n                continue;\n            }\n            res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            if (updater.loadOptions) {\n                updater.loadOptions(options, ...sourceOptions);\n            }\n        }\n    }\n}\n", "import { EventDispatcher } from \"./Utils/EventDispatcher\";\nimport { Loader } from \"./Core/Loader\";\nimport { Plugins } from \"./Core/Utils/Plugins\";\nexport class Engine {\n    constructor() {\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this._loader = new Loader(this);\n        this.plugins = new Plugins(this);\n    }\n    get version() {\n        return \"2.9.3\";\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh();\n    }\n    async addMover(name, moverInitializer) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh();\n    }\n    async addParticleUpdater(name, updaterInitializer) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh();\n    }\n    async addPathGenerator(name, generator) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh();\n    }\n    async addPlugin(plugin) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh();\n    }\n    async addPreset(preset, options, override = false) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh();\n    }\n    async addShape(shape, drawer, init, afterEffect, destroy) {\n        let customDrawer;\n        if (typeof drawer === \"function\") {\n            customDrawer = {\n                afterEffect: afterEffect,\n                destroy: destroy,\n                draw: drawer,\n                init: init,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh();\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (item && !item.destroyed) {\n            return item;\n        }\n        dom.splice(index, 1);\n    }\n    init() {\n        if (!this._initialized) {\n            this._initialized = true;\n        }\n    }\n    async load(tagId, options) {\n        return this._loader.load(tagId, options);\n    }\n    async loadFromArray(tagId, options, index) {\n        return this._loader.load(tagId, options, index);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        return this._loader.loadJSON(tagId, pathConfigJson, index);\n    }\n    async refresh() {\n        for (const instance of this.dom()) {\n            await instance.refresh();\n        }\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options) {\n        return this._loader.set(id, element, options);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        return this._loader.setJSON(id, element, pathConfigJson, index);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(\"Can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()\");\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n}\n", "import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        var _a;\n        const colorValue = color.value, hslColor = (_a = colorValue.hsl) !== null && _a !== void 0 ? _a : color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        var _a;\n        const colorValue = color.value, hslColor = (_a = colorValue.hsl) !== null && _a !== void 0 ? _a : color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n", "import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        var _a;\n        const colorValue = color.value, rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        var _a;\n        const colorValue = color.value, rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n", "export class ParticlesInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"particles\";\n    }\n}\n", "import { Engine } from \"./engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nconst rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\naddColorManager(rgbColorManager);\naddColorManager(hslColorManager);\nconst tsParticles = new Engine();\ntsParticles.init();\nexport * from \"./Core/Interfaces/Colors\";\nexport * from \"./Core/Interfaces/IBounds\";\nexport * from \"./Core/Interfaces/IBubbleParticleData\";\nexport * from \"./Core/Interfaces/ICircleBouncer\";\nexport * from \"./Core/Interfaces/IColorManager\";\nexport * from \"./Core/Interfaces/IContainerInteractivity\";\nexport * from \"./Core/Interfaces/IContainerPlugin\";\nexport * from \"./Core/Interfaces/ICoordinates\";\nexport * from \"./Core/Interfaces/IDelta\";\nexport * from \"./Core/Interfaces/IDimension\";\nexport * from \"./Core/Interfaces/IDistance\";\nexport * from \"./Core/Interfaces/IExternalInteractor\";\nexport * from \"./Core/Interfaces/IInteractor\";\nexport * from \"./Core/Interfaces/IMouseData\";\nexport * from \"./Core/Interfaces/IMovePathGenerator\";\nexport * from \"./Core/Interfaces/IParticle\";\nexport * from \"./Core/Interfaces/IParticleColorStyle\";\nexport * from \"./Core/Interfaces/IParticleHslAnimation\";\nexport * from \"./Core/Interfaces/IParticlesInteractor\";\nexport * from \"./Core/Interfaces/IParticleLife\";\nexport * from \"./Core/Interfaces/IParticleRetinaProps\";\nexport * from \"./Core/Interfaces/IParticleRoll\";\nexport * from \"./Core/Interfaces/IParticleTransformValues\";\nexport * from \"./Core/Interfaces/IParticleUpdater\";\nexport * from \"./Core/Interfaces/IParticleValueAnimation\";\nexport * from \"./Core/Interfaces/IParticlesMover\";\nexport * from \"./Core/Interfaces/IPlugin\";\nexport * from \"./Core/Interfaces/IRangeValue\";\nexport * from \"./Core/Interfaces/IRectSideResult\";\nexport * from \"./Core/Interfaces/IShapeDrawer\";\nexport * from \"./Core/Interfaces/IShapeValues\";\nexport * from \"./Core/Interfaces/ISlowParticleData\";\nexport * from \"./Core/Utils/Circle\";\nexport * from \"./Core/Utils/Constants\";\nexport * from \"./Core/Utils/ExternalInteractorBase\";\nexport * from \"./Core/Utils/ParticlesInteractorBase\";\nexport * from \"./Core/Utils/Point\";\nexport * from \"./Core/Utils/Range\";\nexport * from \"./Core/Utils/Rectangle\";\nexport * from \"./Core/Utils/Vector\";\nexport * from \"./Core/Utils/Vector3d\";\nexport * from \"./Enums/Directions/MoveDirection\";\nexport * from \"./Enums/Directions/RotateDirection\";\nexport * from \"./Enums/Directions/OutModeDirection\";\nexport * from \"./Enums/Modes/ClickMode\";\nexport * from \"./Enums/Modes/DivMode\";\nexport * from \"./Enums/Modes/HoverMode\";\nexport * from \"./Enums/Modes/CollisionMode\";\nexport * from \"./Enums/Modes/OutMode\";\nexport * from \"./Enums/Modes/SizeMode\";\nexport * from \"./Enums/Modes/ThemeMode\";\nexport * from \"./Enums/Modes/ResponsiveMode\";\nexport * from \"./Enums/Types/AlterType\";\nexport * from \"./Enums/Types/DestroyType\";\nexport * from \"./Enums/Types/GradientType\";\nexport * from \"./Enums/Types/InteractorType\";\nexport * from \"./Enums/Types/ParticleOutType\";\nexport * from \"./Enums/Types/StartValueType\";\nexport * from \"./Enums/Types/DivType\";\nexport * from \"./Enums/Types/EasingType\";\nexport * from \"./Enums/Types/EventType\";\nexport * from \"./Enums/AnimationStatus\";\nexport * from \"./Enums/InteractivityDetect\";\nexport * from \"./Options/Classes/AnimatableColor\";\nexport * from \"./Options/Classes/AnimationOptions\";\nexport * from \"./Options/Classes/Background/Background\";\nexport * from \"./Options/Classes/BackgroundMask/BackgroundMask\";\nexport * from \"./Options/Classes/BackgroundMask/BackgroundMaskCover\";\nexport * from \"./Options/Classes/ColorAnimation\";\nexport * from \"./Options/Classes/FullScreen/FullScreen\";\nexport * from \"./Options/Classes/HslAnimation\";\nexport * from \"./Options/Classes/Interactivity/Events/ClickEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/DivEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/ClickEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/DivEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/Events\";\nexport * from \"./Options/Classes/Interactivity/Events/HoverEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/Parallax\";\nexport * from \"./Options/Classes/Interactivity/Interactivity\";\nexport * from \"./Options/Classes/Interactivity/Modes/Modes\";\nexport * from \"./Options/Classes/ManualParticle\";\nexport * from \"./Options/Classes/Options\";\nexport * from \"./Options/Classes/OptionsColor\";\nexport * from \"./Options/Classes/Particles/Bounce/ParticlesBounce\";\nexport * from \"./Options/Classes/Particles/Bounce/ParticlesBounceFactor\";\nexport * from \"./Options/Classes/Particles/Collisions/Collisions\";\nexport * from \"./Options/Classes/Particles/Collisions/CollisionsOverlap\";\nexport * from \"./Options/Classes/Particles/ParticlesOptions\";\nexport * from \"./Options/Classes/Particles/Shadow\";\nexport * from \"./Options/Classes/Particles/Stroke\";\nexport * from \"./Options/Classes/Particles/Move/MoveAttract\";\nexport * from \"./Options/Classes/Particles/Move/Move\";\nexport * from \"./Options/Classes/Particles/Move/MoveAngle\";\nexport * from \"./Options/Classes/Particles/Move/MoveCenter\";\nexport * from \"./Options/Classes/Particles/Move/MoveGravity\";\nexport * from \"./Options/Classes/Particles/Move/OutModes\";\nexport * from \"./Options/Classes/Particles/Move/Path/MovePath\";\nexport * from \"./Options/Classes/Particles/Move/Spin\";\nexport * from \"./Options/Classes/Particles/Move/MoveTrail\";\nexport * from \"./Options/Classes/Particles/Number/ParticlesNumber\";\nexport * from \"./Options/Classes/Particles/Number/ParticlesDensity\";\nexport * from \"./Options/Classes/Particles/Opacity/Opacity\";\nexport * from \"./Options/Classes/Particles/Opacity/OpacityAnimation\";\nexport * from \"./Options/Classes/Particles/Shape/Shape\";\nexport * from \"./Options/Classes/Particles/Size/Size\";\nexport * from \"./Options/Classes/Particles/Size/SizeAnimation\";\nexport * from \"./Options/Classes/Particles/ZIndex/ZIndex\";\nexport * from \"./Options/Classes/Responsive\";\nexport * from \"./Options/Classes/Theme/Theme\";\nexport * from \"./Options/Classes/Theme/ThemeDefault\";\nexport * from \"./Options/Classes/ValueWithRandom\";\nexport * from \"./Options/Interfaces/Background/IBackground\";\nexport * from \"./Options/Interfaces/BackgroundMask/IBackgroundMask\";\nexport * from \"./Options/Interfaces/BackgroundMask/IBackgroundMaskCover\";\nexport * from \"./Options/Interfaces/FullScreen/IFullScreen\";\nexport * from \"./Options/Interfaces/IAnimatable\";\nexport * from \"./Options/Interfaces/IAnimatableColor\";\nexport * from \"./Options/Interfaces/IAnimation\";\nexport * from \"./Options/Interfaces/IColorAnimation\";\nexport * from \"./Options/Interfaces/IHslAnimation\";\nexport * from \"./Options/Interfaces/IManualParticle\";\nexport * from \"./Options/Interfaces/IOptionLoader\";\nexport * from \"./Options/Interfaces/IOptions\";\nexport * from \"./Options/Interfaces/IOptionsColor\";\nexport * from \"./Options/Interfaces/IResponsive\";\nexport * from \"./Options/Interfaces/IValueWithRandom\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IClickEvent\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IDivEvent\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IEvents\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IHoverEvent\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IParallax\";\nexport * from \"./Options/Interfaces/Interactivity/Modes/IModeDiv\";\nexport * from \"./Options/Interfaces/Interactivity/Modes/IModes\";\nexport * from \"./Options/Interfaces/Interactivity/IInteractivity\";\nexport * from \"./Options/Interfaces/Particles/Bounce/IParticlesBounce\";\nexport * from \"./Options/Interfaces/Particles/Collisions/ICollisions\";\nexport * from \"./Options/Interfaces/Particles/Collisions/ICollisionsOverlap\";\nexport * from \"./Options/Interfaces/Particles/IParticlesOptions\";\nexport * from \"./Options/Interfaces/Particles/IShadow\";\nexport * from \"./Options/Interfaces/Particles/IStroke\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveAttract\";\nexport * from \"./Options/Interfaces/Particles/Move/IMove\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveAngle\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveCenter\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveGravity\";\nexport * from \"./Options/Interfaces/Particles/Move/Path/IMovePath\";\nexport * from \"./Options/Interfaces/Particles/Move/IOutModes\";\nexport * from \"./Options/Interfaces/Particles/Move/ISpin\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveTrail\";\nexport * from \"./Options/Interfaces/Particles/Number/IParticlesDensity\";\nexport * from \"./Options/Interfaces/Particles/Number/IParticlesNumber\";\nexport * from \"./Options/Interfaces/Particles/Opacity/IOpacity\";\nexport * from \"./Options/Interfaces/Particles/Opacity/IOpacityAnimation\";\nexport * from \"./Options/Interfaces/Particles/Shape/ICharacterShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IImageShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IPolygonShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IShapeValues\";\nexport * from \"./Options/Interfaces/Particles/Shape/IStarShape\";\nexport * from \"./Options/Interfaces/Particles/Size/ISize\";\nexport * from \"./Options/Interfaces/Particles/Size/ISizeAnimation\";\nexport * from \"./Options/Interfaces/Particles/ZIndex/IZIndex\";\nexport * from \"./Options/Interfaces/Theme/ITheme\";\nexport * from \"./Options/Interfaces/Theme/IThemeDefault\";\nexport * from \"./Types/CustomEventArgs\";\nexport * from \"./Types/CustomEventListener\";\nexport * from \"./Types/ParticlesGroups\";\nexport * from \"./Types/PathOptions\";\nexport * from \"./Types/RangeValue\";\nexport * from \"./Types/RecursivePartial\";\nexport * from \"./Types/ShapeData\";\nexport * from \"./Types/ShapeDrawerFunctions\";\nexport * from \"./Types/SingleOrMultiple\";\nexport * from \"./Utils/CanvasUtils\";\nexport * from \"./Utils/ColorUtils\";\nexport * from \"./Utils/HslColorManager\";\nexport * from \"./Utils/NumberUtils\";\nexport * from \"./Utils/OptionsUtils\";\nexport * from \"./Utils/RgbColorManager\";\nexport * from \"./Utils/Utils\";\nexport { tsParticles };\nexport { CollisionsAbsorb } from \"./Options/Classes/Particles/Collisions/CollisionsAbsorb\";\nexport { ResizeEvent } from \"./Options/Classes/Interactivity/Events/ResizeEvent\";\n", "import { clamp, getDistances, getRandom } from \"tsparticles-engine\";\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), hDistance = particle.retina.maxDistance.horizontal, vDistance = particle.retina.maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    if (((hDistance && dxFixed >= hDistance) || (vDistance && dyFixed >= vDistance)) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance && ((pos.x < initialPosition.x && vel.x < 0) || (pos.x > initialPosition.x && vel.x > 0))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance && ((pos.y < initialPosition.y && vel.y < 0) || (pos.y > initialPosition.y && vel.y > 0))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === \"clockwise\" ? Math.cos : Math.sin,\n        y: particle.spin.direction === \"clockwise\" ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);\n    if (particle.spin.radius > maxCanvasSize / 2) {\n        particle.spin.radius = maxCanvasSize / 2;\n        particle.spin.acceleration *= -1;\n    }\n    else if (particle.spin.radius < 0) {\n        particle.spin.radius = 0;\n        particle.spin.acceleration *= -1;\n    }\n    particle.spin.angle += (moveSpeed / 100) * (1 - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    var _a;\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = (_a = particle.pathGenerator) === null || _a === void 0 ? void 0 : _a.generate(particle);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -1, 1);\n        particle.velocity.y = clamp(particle.velocity.y, -1, 1);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : 1;\n}\n", "import { getDistance, getRangeMax, getRangeValue } from \"tsparticles-engine\";\nimport { applyDistance, applyPath, getProximitySpeedFactor, spin } from \"./Utils\";\nexport class BaseMover {\n    init(particle) {\n        var _a;\n        const container = particle.container, options = particle.options, gravityOptions = options.move.gravity, spinOptions = options.move.spin;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        if (spinOptions.enable) {\n            const spinPos = (_a = spinOptions.position) !== null && _a !== void 0 ? _a : { x: 50, y: 50 }, spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        var _a, _b, _c;\n        var _d, _e;\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, slowFactor = getProximitySpeedFactor(particle), baseSpeed = ((_a = (_d = particle.retina).moveSpeed) !== null && _a !== void 0 ? _a : (_d.moveSpeed = getRangeValue(moveOptions.speed) * container.retina.pixelRatio)) *\n            container.retina.reduceFactor, moveDrift = ((_b = (_e = particle.retina).moveDrift) !== null && _b !== void 0 ? _b : (_e.moveDrift = getRangeValue(particle.options.move.drift) * container.retina.pixelRatio)), maxSize = getRangeMax(particleOptions.size.value) * container.retina.pixelRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, speedFactor = sizeFactor * slowFactor * (delta.factor || 1), diffFactor = 2, moveSpeed = (baseSpeed * speedFactor) / diffFactor;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            applyPath(particle, delta);\n            const gravityOptions = particle.gravity, gravityFactor = (gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) && gravityOptions.inverse ? -1 : 1;\n            if ((gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) && moveSpeed) {\n                particle.velocity.y +=\n                    (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n            }\n            if (moveDrift && moveSpeed) {\n                particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n            }\n            const decay = particle.moveDecay;\n            if (decay != 1) {\n                particle.velocity.multTo(decay);\n            }\n            const velocity = particle.velocity.mult(moveSpeed), maxSpeed = (_c = particle.retina.maxSpeed) !== null && _c !== void 0 ? _c : container.retina.maxSpeed;\n            if ((gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) &&\n                maxSpeed > 0 &&\n                ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n                    (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n                velocity.y = gravityFactor * maxSpeed;\n                if (moveSpeed) {\n                    particle.velocity.y = velocity.y / moveSpeed;\n                }\n            }\n            const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n            if (zVelocityFactor != 1) {\n                velocity.multTo(zVelocityFactor);\n            }\n            particle.position.addTo(velocity);\n            if (moveOptions.vibrate) {\n                particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n                particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n            }\n        }\n        applyDistance(particle);\n    }\n}\n", "import { BaseMover } from \"./BaseMover\";\nexport async function loadBaseMover(engine) {\n    engine.addMover(\"base\", () => new BaseMover());\n}\n", "export class CircleDrawer {\n    draw(context, particle, radius) {\n        if (!particle.circleRange) {\n            particle.circleRange = { min: 0, max: Math.PI * 2 };\n        }\n        const circleRange = particle.circleRange;\n        context.arc(0, 0, radius, circleRange.min, circleRange.max, false);\n    }\n    getSidesCount() {\n        return 12;\n    }\n    particleInit(container, particle) {\n        var _a;\n        const shapeData = particle.shapeData, angle = (_a = shapeData === null || shapeData === void 0 ? void 0 : shapeData.angle) !== null && _a !== void 0 ? _a : {\n            max: 360,\n            min: 0,\n        };\n        particle.circleRange =\n            typeof angle !== \"object\"\n                ? {\n                    min: 0,\n                    max: (angle * Math.PI) / 180,\n                }\n                : { min: (angle.min * Math.PI) / 180, max: (angle.max * Math.PI) / 180 };\n    }\n}\n", "import { CircleDrawer } from \"./CircleDrawer\";\nexport async function loadCircleShape(engine) {\n    await engine.addShape(\"circle\", new CircleDrawer());\n}\n", "import { getHslAnimationFromHsl, randomInRange, rangeColorToHsl } from \"tsparticles-engine\";\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n    var _a, _b;\n    const colorValue = value;\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        (colorValue.loops !== undefined &&\n            colorValue.maxLoops !== undefined &&\n            colorValue.maxLoops > 0 &&\n            colorValue.loops >= colorValue.maxLoops)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6, decay = (_b = value.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nfunction updateColor(particle, delta) {\n    var _a, _b, _c;\n    const animationOptions = particle.options.color.animation;\n    const h = (_a = particle.color) === null || _a === void 0 ? void 0 : _a.h, s = (_b = particle.color) === null || _b === void 0 ? void 0 : _b.s, l = (_c = particle.color) === null || _c === void 0 ? void 0 : _c.l;\n    if (h) {\n        updateColorValue(delta, h, animationOptions.h, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, animationOptions.s, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, animationOptions.l, 100, true);\n    }\n}\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c;\n        const animationOptions = particle.options.color.animation;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h.value) !== undefined && animationOptions.h.enable) ||\n                (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s.value) !== undefined && animationOptions.s.enable) ||\n                (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l.value) !== undefined && animationOptions.l.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n", "import { ColorUpdater } from \"./ColorUpdater\";\nexport async function loadColorUpdater(engine) {\n    await engine.addParticleUpdater(\"color\", (container) => new ColorUpdater(container));\n}\n", "import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange, } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nfunction updateOpacity(particle, delta) {\n    var _a, _b, _c, _d, _e, _f;\n    if (!particle.opacity) {\n        return;\n    }\n    const minValue = particle.opacity.min, maxValue = particle.opacity.max, decay = (_a = particle.opacity.decay) !== null && _a !== void 0 ? _a : 1;\n    if (particle.destroyed ||\n        !particle.opacity.enable ||\n        (((_b = particle.opacity.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 && ((_c = particle.opacity.loops) !== null && _c !== void 0 ? _c : 0) > ((_d = particle.opacity.maxLoops) !== null && _d !== void 0 ? _d : 0))) {\n        return;\n    }\n    switch (particle.opacity.status) {\n        case \"increasing\":\n            if (particle.opacity.value >= maxValue) {\n                particle.opacity.status = \"decreasing\";\n                if (!particle.opacity.loops) {\n                    particle.opacity.loops = 0;\n                }\n                particle.opacity.loops++;\n            }\n            else {\n                particle.opacity.value += ((_e = particle.opacity.velocity) !== null && _e !== void 0 ? _e : 0) * delta.factor;\n            }\n            break;\n        case \"decreasing\":\n            if (particle.opacity.value <= minValue) {\n                particle.opacity.status = \"increasing\";\n                if (!particle.opacity.loops) {\n                    particle.opacity.loops = 0;\n                }\n                particle.opacity.loops++;\n            }\n            else {\n                particle.opacity.value -= ((_f = particle.opacity.velocity) !== null && _f !== void 0 ? _f : 0) * delta.factor;\n            }\n            break;\n    }\n    if (particle.opacity.velocity && particle.opacity.decay !== 1) {\n        particle.opacity.velocity *= decay;\n    }\n    checkDestroy(particle, particle.opacity.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        particle.opacity.value = clamp(particle.opacity.value, minValue, maxValue);\n    }\n}\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = {\n            enable: opacityOptions.animation.enable,\n            max: getRangeMax(opacityOptions.value),\n            min: getRangeMin(opacityOptions.value),\n            value: getRangeValue(opacityOptions.value),\n            loops: 0,\n            maxLoops: getRangeValue(opacityOptions.animation.count),\n        };\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.decay = 1 - getRangeValue(opacityAnimation.decay);\n            particle.opacity.status = \"increasing\";\n            const opacityRange = opacityOptions.value;\n            particle.opacity.min = getRangeMin(opacityRange);\n            particle.opacity.max = getRangeMax(opacityRange);\n            switch (opacityAnimation.startValue) {\n                case \"min\":\n                    particle.opacity.value = particle.opacity.min;\n                    particle.opacity.status = \"increasing\";\n                    break;\n                case \"random\":\n                    particle.opacity.value = randomInRange(particle.opacity);\n                    particle.opacity.status =\n                        getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                    break;\n                case \"max\":\n                default:\n                    particle.opacity.value = particle.opacity.max;\n                    particle.opacity.status = \"decreasing\";\n                    break;\n            }\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n        particle.opacity.initialValue = particle.opacity.value;\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            (((_a = particle.opacity.maxLoops) !== null && _a !== void 0 ? _a : 0) <= 0 ||\n                (((_b = particle.opacity.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 &&\n                    ((_c = particle.opacity.loops) !== null && _c !== void 0 ? _c : 0) < ((_d = particle.opacity.maxLoops) !== null && _d !== void 0 ? _d : 0))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n", "import { OpacityUpdater } from \"./OpacityUpdater\";\nexport async function loadOpacityUpdater(engine) {\n    await engine.addParticleUpdater(\"opacity\", (container) => new OpacityUpdater(container));\n}\n", "import { getValue } from \"tsparticles-engine\";\nexport function bounceHorizontal(data) {\n    if (data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-horizontal\" &&\n        data.outMode !== \"bounceHorizontal\" &&\n        data.outMode !== \"split\") {\n        return;\n    }\n    if (data.bounds.right < 0) {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width) {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n        (data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.horizontal);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width) {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= 0) {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if (data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-vertical\" &&\n        data.outMode !== \"bounceVertical\" &&\n        data.outMode !== \"split\") {\n        return;\n    }\n    if (data.bounds.bottom < 0) {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height) {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === \"bottom\" && data.bounds.bottom >= data.canvasSize.height && velocity > 0) ||\n        (data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.vertical);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height) {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= 0) {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\n", "import { calculateBounds } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            \"bounce\",\n            \"bounce-vertical\",\n            \"bounce-horizontal\",\n            \"bounceVertical\",\n            \"bounceHorizontal\",\n            \"split\",\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n", "import { Vector, getDistances, isPointInside } from \"tsparticles-engine\";\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"destroy\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"normal\":\n            case \"outside\":\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case \"inside\": {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                const { x: vx, y: vy } = particle.velocity;\n                if ((vx < 0 && dx > particle.moveCenter.radius) ||\n                    (vy < 0 && dy > particle.moveCenter.radius) ||\n                    (vx >= 0 && dx < -particle.moveCenter.radius) ||\n                    (vy >= 0 && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n", "import { Vector, isPointInside } from \"tsparticles-engine\";\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"none\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n", "import { Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"tsparticles-engine\";\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"out\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"inside\": {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= 0 && dx >= 0) || (vy <= 0 && dy >= 0) || (vx >= 0 && dx <= 0) || (vy >= 0 && dy <= 0)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case \"outside\": {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case \"normal\": {\n                        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === \"right\" &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === \"bottom\" &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n", "import { BounceOutMode } from \"./BounceOutMode\";\nimport { DestroyOutMode } from \"./DestroyOutMode\";\nimport { NoneOutMode } from \"./NoneOutMode\";\nimport { OutOutMode } from \"./OutOutMode\";\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n        this.updaters = [\n            new BounceOutMode(container),\n            new DestroyOutMode(container),\n            new OutOutMode(container),\n            new NoneOutMode(container),\n        ];\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        var _a, _b, _c, _d;\n        const outModes = particle.options.move.outModes;\n        this.updateOutMode(particle, delta, (_a = outModes.bottom) !== null && _a !== void 0 ? _a : outModes.default, \"bottom\");\n        this.updateOutMode(particle, delta, (_b = outModes.left) !== null && _b !== void 0 ? _b : outModes.default, \"left\");\n        this.updateOutMode(particle, delta, (_c = outModes.right) !== null && _c !== void 0 ? _c : outModes.default, \"right\");\n        this.updateOutMode(particle, delta, (_d = outModes.top) !== null && _d !== void 0 ? _d : outModes.default, \"top\");\n    }\n    updateOutMode(particle, delta, outMode, direction) {\n        for (const updater of this.updaters) {\n            updater.update(particle, direction, delta, outMode);\n        }\n    }\n}\n", "import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater\";\nexport async function loadOutModesUpdater(engine) {\n    await engine.addParticleUpdater(\"outModes\", (container) => new OutOfCanvasUpdater(container));\n}\n", "import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = Object.assign({}, canvasSize);\n    }\n    contains(point) {\n        if (super.contains(point)) {\n            return true;\n        }\n        const posNE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y,\n        };\n        if (super.contains(posNE)) {\n            return true;\n        }\n        const posSE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y - this.canvasSize.height,\n        };\n        if (super.contains(posSE)) {\n            return true;\n        }\n        const posSW = {\n            x: point.x,\n            y: point.y - this.canvasSize.height,\n        };\n        return super.contains(posSW);\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n", "import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n", "import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { LinksShadow } from \"./LinksShadow\";\nimport { LinksTriangle } from \"./LinksTriangle\";\nimport { OptionsColor } from \"tsparticles-engine\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n", "import { Circle, ParticlesInteractorBase, getDistance, getLinkRandomColor } from \"tsparticles-engine\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Links } from \"./Options/Classes/Links\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    let distance = getDistance(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const pos2NE = {\n        x: pos2.x - canvasSize.width,\n        y: pos2.y,\n    };\n    distance = getDistance(pos1, pos2NE);\n    if (distance <= optDistance) {\n        return distance;\n    }\n    const pos2SE = {\n        x: pos2.x - canvasSize.width,\n        y: pos2.y - canvasSize.height,\n    };\n    distance = getDistance(pos1, pos2SE);\n    if (distance <= optDistance) {\n        return distance;\n    }\n    const pos2SW = {\n        x: pos2.x,\n        y: pos2.y - canvasSize.height,\n    };\n    distance = getDistance(pos1, pos2SW);\n    return distance;\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColor = undefined;\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    async interact(p1) {\n        var _a;\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = (_a = p1.retina.linksDistance) !== null && _a !== void 0 ? _a : 0, warp = linkOpt1.warp, range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !(linkOpt2 === null || linkOpt2 === void 0 ? void 0 : linkOpt2.enable) ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.map((t) => t.destination).indexOf(p2) !== -1 ||\n                p2.links.map((t) => t.destination).indexOf(p1) !== -1) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                return;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this.setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        return !!((_a = particle.options.links) === null || _a === void 0 ? void 0 : _a.enable);\n    }\n    loadParticlesOptions(options, ...sources) {\n        var _a, _b;\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load((_b = (_a = source === null || source === void 0 ? void 0 : source.links) !== null && _a !== void 0 ? _a : source === null || source === void 0 ? void 0 : source.lineLinked) !== null && _b !== void 0 ? _b : source === null || source === void 0 ? void 0 : source.line_linked);\n        }\n    }\n    reset() {\n    }\n    setColor(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        const container = this.linkContainer, linksOptions = p1.options.links;\n        let linkColor = linksOptions.id === undefined\n            ? container.particles.linksColor\n            : container.particles.linksColors.get(linksOptions.id);\n        if (linkColor) {\n            return;\n        }\n        const optColor = linksOptions.color;\n        linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n        if (linksOptions.id === undefined) {\n            container.particles.linksColor = linkColor;\n        }\n        else {\n            container.particles.linksColors.set(linksOptions.id, linkColor);\n        }\n    }\n}\n", "import { Linker } from \"./Linker\";\nexport async function loadInteraction(engine) {\n    await engine.addInteractor(\"particlesLinks\", (container) => new Linker(container));\n}\n", "import { drawLine, drawTriangle, getDistance, getDistances, getStyleFromRgb, rangeColorToRgb, } from \"tsparticles-engine\";\nexport function drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow) {\n    let drawn = false;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle) {\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\n", "import { drawLinkLine, drawLinkTriangle } from \"./Utils\";\nimport { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb } from \"tsparticles-engine\";\nfunction getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nfunction setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        var _a;\n        const pOptions = particle.options;\n        if (!particle.links || particle.links.length <= 0) {\n            return;\n        }\n        const p1Links = particle.links.filter((l) => pOptions.links && this.getLinkFrequency(particle, l.destination) <= pOptions.links.frequency);\n        for (const link of p1Links) {\n            this.drawTriangles(pOptions, particle, link, p1Links);\n            if (link.opacity > 0 && ((_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : 0) > 0) {\n                this.drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio;\n        particle.retina.linksDistance = particle.options.links.distance * ratio;\n        particle.retina.linksWidth = particle.options.links.width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n    drawLinkLine(p1, link) {\n        const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        let opacity = link.opacity;\n        container.canvas.draw((ctx) => {\n            var _a, _b, _c;\n            if (!p1.options.links) {\n                return;\n            }\n            let colorLine;\n            const twinkle = (_a = p1.options.twinkle) === null || _a === void 0 ? void 0 : _a.lines;\n            if (twinkle === null || twinkle === void 0 ? void 0 : twinkle.enable) {\n                const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() < twinkleFreq;\n                if (twinkling && twinkleRgb) {\n                    colorLine = twinkleRgb;\n                    opacity = getRangeValue(twinkle.opacity);\n                }\n            }\n            if (!colorLine) {\n                const linksOptions = p1.options.links, linkColor = (linksOptions === null || linksOptions === void 0 ? void 0 : linksOptions.id) !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorLine = getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorLine) {\n                return;\n            }\n            const width = (_b = p1.retina.linksWidth) !== null && _b !== void 0 ? _b : 0, maxDistance = (_c = p1.retina.linksDistance) !== null && _c !== void 0 ? _c : 0;\n            drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n        });\n    }\n    drawLinkTriangle(p1, link1, link2) {\n        var _a;\n        if (!p1.options.links) {\n            return;\n        }\n        const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, triangleOptions = p1.options.links.triangles, opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n        if (opacityTriangle <= 0) {\n            return;\n        }\n        container.canvas.draw((ctx) => {\n            var _a;\n            const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = (_a = p1.retina.linksDistance) !== null && _a !== void 0 ? _a : 0;\n            if (getDistance(pos1, pos2) > linksDistance ||\n                getDistance(pos3, pos2) > linksDistance ||\n                getDistance(pos3, pos1) > linksDistance) {\n                return;\n            }\n            let colorTriangle = rangeColorToRgb(triangleOptions.color);\n            if (!colorTriangle) {\n                const linksOptions = p1.options.links, linkColor = (linksOptions === null || linksOptions === void 0 ? void 0 : linksOptions.id) !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorTriangle = getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorTriangle) {\n                return;\n            }\n            drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n        });\n    }\n    drawTriangles(options, p1, link, p1Links) {\n        var _a, _b, _c;\n        const p2 = link.destination;\n        if (!(((_a = options.links) === null || _a === void 0 ? void 0 : _a.triangles.enable) && ((_b = p2.options.links) === null || _b === void 0 ? void 0 : _b.triangles.enable))) {\n            return;\n        }\n        const vertices = (_c = p2.links) === null || _c === void 0 ? void 0 : _c.filter((t) => {\n            const linkFreq = this.getLinkFrequency(p2, t.destination);\n            return (p2.options.links &&\n                linkFreq <= p2.options.links.frequency &&\n                p1Links.findIndex((l) => l.destination === t.destination) >= 0);\n        });\n        if (!(vertices === null || vertices === void 0 ? void 0 : vertices.length)) {\n            return;\n        }\n        for (const vertex of vertices) {\n            const p3 = vertex.destination, triangleFreq = this.getTriangleFrequency(p1, p2, p3);\n            if (triangleFreq > options.links.triangles.frequency) {\n                continue;\n            }\n            this.drawLinkTriangle(p1, link, vertex);\n        }\n    }\n    getLinkFrequency(p1, p2) {\n        return setLinkFrequency([p1, p2], this._freqs.links);\n    }\n    getTriangleFrequency(p1, p2, p3) {\n        return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n    }\n}\n", "import { LinkInstance } from \"./LinkInstance\";\nclass LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return new LinkInstance(container);\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\nexport async function loadPlugin(engine) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin);\n}\n", "import { loadInteraction } from \"./interaction\";\nimport { loadPlugin } from \"./plugin\";\nexport async function loadParticlesLinksInteraction(engine) {\n    await loadInteraction(engine);\n    await loadPlugin(engine);\n}\nexport * from \"./Options/Classes/Links\";\nexport * from \"./Options/Classes/LinksShadow\";\nexport * from \"./Options/Classes/LinksTriangle\";\nexport * from \"./Options/Interfaces/ILinks\";\nexport * from \"./Options/Interfaces/ILinksShadow\";\nexport * from \"./Options/Interfaces/ILinksTriangle\";\n", "import { clamp, getRandom } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nfunction updateSize(particle, delta) {\n    var _a, _b, _c, _d, _e;\n    const sizeVelocity = ((_a = particle.size.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, minValue = particle.size.min, maxValue = particle.size.max, decay = (_b = particle.size.decay) !== null && _b !== void 0 ? _b : 1;\n    if (particle.destroyed ||\n        !particle.size.enable ||\n        (((_c = particle.size.maxLoops) !== null && _c !== void 0 ? _c : 0) > 0 && ((_d = particle.size.loops) !== null && _d !== void 0 ? _d : 0) > ((_e = particle.size.maxLoops) !== null && _e !== void 0 ? _e : 0))) {\n        return;\n    }\n    switch (particle.size.status) {\n        case \"increasing\":\n            if (particle.size.value >= maxValue) {\n                particle.size.status = \"decreasing\";\n                if (!particle.size.loops) {\n                    particle.size.loops = 0;\n                }\n                particle.size.loops++;\n            }\n            else {\n                particle.size.value += sizeVelocity;\n            }\n            break;\n        case \"decreasing\":\n            if (particle.size.value <= minValue) {\n                particle.size.status = \"increasing\";\n                if (!particle.size.loops) {\n                    particle.size.loops = 0;\n                }\n                particle.size.loops++;\n            }\n            else {\n                particle.size.value -= sizeVelocity;\n            }\n    }\n    if (particle.size.velocity && decay !== 1) {\n        particle.size.velocity *= decay;\n    }\n    checkDestroy(particle, particle.size.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        particle.size.value = clamp(particle.size.value, minValue, maxValue);\n    }\n}\nexport class SizeUpdater {\n    init(particle) {\n        var _a;\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                (((_a = particle.retina.sizeAnimationSpeed) !== null && _a !== void 0 ? _a : container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            (((_a = particle.size.maxLoops) !== null && _a !== void 0 ? _a : 0) <= 0 ||\n                (((_b = particle.size.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 && ((_c = particle.size.loops) !== null && _c !== void 0 ? _c : 0) < ((_d = particle.size.maxLoops) !== null && _d !== void 0 ? _d : 0))));\n    }\n    reset(particle) {\n        particle.size.loops = 0;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n", "import { SizeUpdater } from \"./SizeUpdater\";\nexport async function loadSizeUpdater(engine) {\n    await engine.addParticleUpdater(\"size\", () => new SizeUpdater());\n}\n", "export const options = {\n    background: {\n        color: \"#000000\",\n    },\n    particles: {\n        links: {\n            distance: 150,\n            enable: true,\n        },\n        move: {\n            enable: true,\n        },\n        size: {\n            value: 1,\n        },\n        shape: {\n            type: \"circle\",\n        },\n    },\n};\n", "import { loadBaseMover } from \"tsparticles-move-base\";\nimport { loadCircleShape } from \"tsparticles-shape-circle\";\nimport { loadColorUpdater } from \"tsparticles-updater-color\";\nimport { loadOpacityUpdater } from \"tsparticles-updater-opacity\";\nimport { loadOutModesUpdater } from \"tsparticles-updater-out-modes\";\nimport { loadParticlesLinksInteraction } from \"tsparticles-interaction-particles-links\";\nimport { loadSizeUpdater } from \"tsparticles-updater-size\";\nimport { options } from \"./options\";\nexport async function loadLinksPreset(engine) {\n    await loadBaseMover(engine);\n    await loadCircleShape(engine);\n    await loadColorUpdater(engine);\n    await loadParticlesLinksInteraction(engine);\n    await loadOutModesUpdater(engine);\n    await loadOpacityUpdater(engine);\n    await loadSizeUpdater(engine);\n    await engine.addPreset(\"links\", options);\n}\n", "import { tsParticles } from \"tsparticles-engine\";\nimport { loadLinksPreset } from \"tsparticles-preset-links\";\n\nwindow.addEventListener(\"load\", async () => {\n  await loadLinksPreset(tsParticles);\n  const particles = await tsParticles.load(\"particles\", {\n    preset: \"links\",\n    fullScreen: false,\n    themes: [\n      {\n        name: \"dark\",\n        options: {\n          particles: {\n            color: {\n              value: [\"#ffffff\", \"#008cd7\", \"#14141e\"],\n            },\n            line_linked: {\n              color: \"#ffffff\",\n            },\n          },\n        },\n      },\n      {\n        name: \"light\",\n        options: {\n          particles: {\n            color: {\n              value: [\"#000000\", \"#0000ff\", \"#808080\"],\n            },\n            line_linked: {\n              color: \"#000000\",\n            },\n          },\n        },\n      },\n    ],\n    background: {\n      opacity: 0,\n    },\n    particles: {\n      line_linked: {\n        opacity: 0.7,\n        width: 1,\n      },\n      number: {\n        value: 80,\n        density: {\n          enable: true,\n          height: 1000,\n          width: 1000,\n        },\n      },\n      move: {\n        attract: {\n          enable: false,\n          rotate: {\n            x: 600,\n            y: 1200,\n          },\n        },\n        direction: \"none\",\n        enable: true,\n        outModes: \"out\",\n        random: false,\n        speed: 1,\n        straight: false,\n      },\n      opacity: {\n        value: 0.8,\n        random: true,\n        anim: {\n          enable: false,\n          speed: 2,\n          opacity_min: 0.4,\n          sync: false,\n        },\n      },\n      size: {\n        animation: {\n          enable: true,\n          speed: 2,\n          sync: false,\n        },\n        value: {\n          min: 1,\n          max: 4,\n        },\n      },\n    },\n  });\n\n  const setTheme = (target: HTMLElement) => {\n    if (target.classList.contains(\"dark\")) {\n      particles.loadTheme(\"dark\");\n    } else {\n      particles.loadTheme(\"light\");\n    }\n  };\n\n  const themeChange = (mutationList: Array<MutationRecord>) => {\n    mutationList\n      .filter((r) => r.type === \"attributes\" && r.attributeName === \"class\")\n      .map((r) => r.target as HTMLElement)\n      .forEach(setTheme);\n  };\n  const observer = new MutationObserver(themeChange);\n  const target = document.querySelector(\"html\");\n  observer.observe(target, { attributes: true });\n\n  setTheme(target);\n});\n"],
  "mappings": "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",
  "names": ["EventDispatcher", "type", "listener", "_a", "args", "handler", "arr", "length", "idx", "Vector3d", "xOrCoords", "y", "z", "coords3d", "angle", "length", "source", "x", "v", "n", "c", "v3d", "Vector", "Vector3d", "xOrCoords", "y", "source", "x", "_random", "getRandom", "clamp", "_random", "num", "min", "max", "mix", "comp1", "comp2", "weight1", "weight2", "randomInRange", "r", "getRangeMax", "getRangeMin", "getRangeValue", "value", "setRangeValue", "source", "getValue", "options", "random", "enable", "minimumValue", "getDistances", "pointA", "pointB", "dx", "dy", "getDistance", "getParticleDirectionAngle", "direction", "position", "center", "getParticleBaseVelocity", "baseVelocity", "Vector", "calcPositionFromSize", "data", "calcExactPositionOrRandomFromSize", "data", "_a", "_b", "_c", "_d", "getRandom", "parseAlpha", "input", "isSsr", "hasMatchMedia", "safeMatchMedia", "query", "animate", "callback", "cancelAnimation", "handle", "isInArray", "value", "array", "arrayRandomIndex", "array", "getRandom", "itemFromArray", "index", "useIndex", "isPointInside", "point", "size", "offset", "radius", "direction", "areBoundsInside", "calculateBounds", "bounds", "inside", "deepExtend", "destination", "sources", "source", "sourceIsArray", "key", "sourceDict", "value", "isObject", "destDict", "v", "executeOnSingleOrMultiple", "obj", "callback", "item", "index", "itemFromSingleOrMultiple", "useIndex", "itemFromArray", "randomColorValue", "midColorValue", "colorManagers", "addColorManager", "manager", "hue2rgb", "p", "q", "stringToRgba", "input", "shorthandRegex", "hexFixed", "_", "g", "b", "a", "regex", "result", "rangeColorToRgb", "index", "useIndex", "color", "colorToRgb", "itemFromArray", "res", "getRandomRgbColor", "stringToRgb", "rangeColorToHsl", "color", "index", "useIndex", "rgb", "rangeColorToRgb", "rgbToHsl", "r1", "g1", "b1", "max", "min", "res", "stringToRgb", "input", "stringToRgba", "hslToRgb", "hsl", "result", "hslPercent", "q", "p", "hue2rgb", "hslaToRgba", "hsla", "rgbResult", "getRandomRgbColor", "min", "fixedMin", "randomInRange", "setRangeValue", "getStyleFromRgb", "color", "opacity", "getStyleFromHsl", "colorMix", "color1", "color2", "size1", "size2", "rgb1", "rgb2", "mix", "getLinkColor", "p1", "p2", "linkColor", "_a", "_b", "randomColorValue", "midColorValue", "sourceColor", "destColor", "hslColor", "getLinkRandomColor", "optColor", "blink", "consent", "rangeColorToRgb", "getHslFromAnimation", "animation", "getHslAnimationFromHsl", "animationOptions", "reduceFactor", "resColor", "setColorAnimation", "colorValue", "colorAnimation", "getRangeValue", "getRandom", "drawLine", "context", "begin", "end", "drawTriangle", "p1", "p2", "p3", "paintBase", "dimension", "baseColor", "paintImage", "image", "opacity", "clear", "drawParticle", "data", "_a", "_b", "_c", "_d", "_e", "container", "particle", "delta", "colorStyles", "backgroundMask", "composite", "radius", "shadow", "transform", "pos", "angle", "rotateData", "transformData", "shadowColor", "getStyleFromRgb", "strokeWidth", "drawShape", "drawShapeAfterEffect", "drawer", "drawPlugin", "plugin", "drawParticlePlugin", "alterHsl", "color", "type", "value", "generatedAttribute", "touchEndEvent", "mouseDownEvent", "mouseUpEvent", "mouseMoveEvent", "touchStartEvent", "touchMoveEvent", "mouseLeaveEvent", "mouseOutEvent", "touchCancelEvent", "resizeEvent", "visibilityChangeEvent", "setTransformValue", "factor", "newFactor", "key", "_a", "newValue", "Canvas", "container", "isSsr", "records", "record", "options", "trail", "trailFill", "getStyleFromRgb", "ctx", "clear", "_b", "cb", "particle", "delta", "radius", "pfColor", "psColor", "fColor", "sColor", "_c", "_d", "zIndexOptions", "zOpacityFactor", "opacity", "strokeOpacity", "zOpacity", "zStrokeOpacity", "transform", "colorStyles", "getStyleFromHsl", "drawParticle", "plugin", "drawParticlePlugin", "drawPlugin", "e", "background", "element", "elementStyle", "color", "rangeColorToRgb", "updater", "canvas", "generatedAttribute", "deepExtend", "pxRatio", "size", "newSize", "oldSize", "needsRefresh", "fill", "stroke", "updaterTransform", "rangeColorToHsl", "cover", "coverRgb", "coverColor", "value", "fillColor", "resolve", "reject", "img", "evt", "baseColor", "paintBase", "image", "paintImage", "originalStyle", "priority", "manageListener", "element", "event", "handler", "add", "options", "addOptions", "removeOptions", "EventListeners", "container", "e", "mouseInteractivity", "mousePos", "onClick", "executeOnSingleOrMultiple", "mode", "mediaEvent", "defaultThemes", "themeName", "theme", "_a", "handlers", "detectType", "mouseLeaveTmpEvent", "mouseLeaveEvent", "mouseOutEvent", "canvasEl", "mediaMatch", "safeMatchMedia", "interactivityEl", "html", "mouseMoveEvent", "touchStartEvent", "touchMoveEvent", "touchEndEvent", "mouseUpEvent", "mouseDownEvent", "touchCancelEvent", "entries", "resizeEvent", "visibilityChangeEvent", "interactivity", "mouse", "handled", "mousePosition", "plugin", "_b", "_c", "_d", "_e", "_f", "_g", "pos", "canvas", "mouseEvent", "clientRect", "source", "target", "sourceRect", "targetRect", "canvasRect", "touchEvent", "lastTouch", "pxRatio", "initDelta", "value", "fpsLimit", "smooth", "FrameManager", "container", "timestamp", "_a", "delta", "e", "OptionsColor", "source", "data", "color", "Background", "OptionsColor", "data", "BackgroundMaskCover", "OptionsColor", "data", "BackgroundMask", "BackgroundMaskCover", "data", "cover", "color", "FullScreen", "data", "ClickEvent", "data", "DivEvent", "value", "executeOnSingleOrMultiple", "t", "data", "_a", "_b", "ids", "Parallax", "data", "HoverEvent", "Parallax", "data", "ResizeEvent", "data", "Events", "ClickEvent", "DivEvent", "HoverEvent", "ResizeEvent", "value", "data", "_a", "_b", "_c", "onDiv", "executeOnSingleOrMultiple", "t", "tmp", "Modes", "engine", "container", "data", "interactors", "interactor", "Interactivity", "engine", "container", "Events", "Modes", "value", "data", "_a", "detectsOn", "ManualParticle", "data", "_a", "_b", "deepExtend", "Responsive", "data", "deepExtend", "ThemeDefault", "data", "Theme", "ThemeDefault", "data", "deepExtend", "ColorAnimation", "data", "setRangeValue", "HslAnimation", "ColorAnimation", "data", "AnimatableColor", "OptionsColor", "HslAnimation", "source", "data", "color", "colorAnimation", "CollisionsAbsorb", "data", "CollisionsOverlap", "data", "Random", "data", "ValueWithRandom", "Random", "data", "setRangeValue", "ParticlesBounceFactor", "ValueWithRandom", "ParticlesBounce", "ParticlesBounceFactor", "data", "Collisions", "CollisionsAbsorb", "ParticlesBounce", "CollisionsOverlap", "data", "MoveAngle", "data", "setRangeValue", "MoveAttract", "value", "data", "_a", "_b", "_c", "_d", "setRangeValue", "rotateX", "rotateY", "MoveCenter", "data", "MoveGravity", "data", "setRangeValue", "MovePath", "ValueWithRandom", "data", "deepExtend", "MoveTrailFill", "data", "OptionsColor", "MoveTrail", "MoveTrailFill", "value", "data", "OutModes", "data", "_a", "_b", "_c", "_d", "Spin", "data", "setRangeValue", "deepExtend", "Move", "MoveAngle", "MoveAttract", "MoveCenter", "MoveGravity", "MovePath", "OutModes", "Spin", "MoveTrail", "value", "_", "data", "_a", "_b", "_c", "setRangeValue", "outModes", "AnimationOptions", "data", "setRangeValue", "OpacityAnimation", "AnimationOptions", "value", "data", "_a", "Opacity", "ValueWithRandom", "OpacityAnimation", "value", "data", "_a", "animation", "setRangeValue", "ParticlesDensity", "value", "data", "_a", "_b", "_c", "width", "height", "ParticlesNumber", "ParticlesDensity", "value", "data", "_a", "limit", "Shadow", "OptionsColor", "data", "charKey", "charAltKey", "imageKey", "imageAltKey", "polygonKey", "polygonAltKey", "Shape", "_a", "value", "_value", "data", "_b", "_c", "options", "shape", "item", "deepExtend", "mainKey", "altKey", "altOverride", "isArray", "emptyValue", "mainDifferentValues", "altDifferentValues", "SizeAnimation", "AnimationOptions", "value", "data", "_a", "Size", "ValueWithRandom", "SizeAnimation", "value", "data", "_a", "animation", "setRangeValue", "Stroke", "data", "AnimatableColor", "setRangeValue", "ZIndex", "ValueWithRandom", "data", "ParticlesOptions", "engine", "container", "ParticlesBounce", "Collisions", "AnimatableColor", "Move", "ParticlesNumber", "Opacity", "Shadow", "Shape", "Size", "Stroke", "ZIndex", "data", "_a", "_b", "_c", "_d", "_e", "_f", "group", "item", "deepExtend", "collisions", "strokeToLoad", "executeOnSingleOrMultiple", "t", "tmp", "updaters", "updater", "interactors", "interactor", "loadOptions", "options", "sourceOptionsArr", "sourceOptions", "loadParticlesOptions", "engine", "container", "ParticlesOptions", "Options", "engine", "container", "Background", "BackgroundMask", "FullScreen", "Interactivity", "loadParticlesOptions", "value", "data", "_a", "_b", "_c", "_d", "_e", "executeOnSingleOrMultiple", "preset", "setRangeValue", "detectRetina", "fpsLimit", "fullScreen", "t", "tmp", "ManualParticle", "deepExtend", "interactors", "interactor", "responsive", "optResponsive", "Responsive", "a", "b", "theme", "existingTheme", "optTheme", "Theme", "width", "pxRatio", "defaultOptions", "responsiveOptions", "name", "chosenTheme", "mediaMatch", "safeMatchMedia", "clientDarkMode", "defaultTheme", "mode", "InteractionManager", "engine", "container", "delta", "interactor", "mode", "particle", "fixOutMode", "data", "isInArray", "Particle", "engine", "id", "container", "position", "overrideOptions", "group", "override", "_a", "plugin", "updater", "delta", "getHslFromAnimation", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_j", "pxRatio", "mainOptions", "particlesOptions", "loadParticlesOptions", "shapeType", "reduceDuplicates", "itemFromSingleOrMultiple", "shapeOptions", "overrideShapeType", "shape", "Interactivity", "pathOptions", "getValue", "zIndexValue", "getRangeValue", "sizeOptions", "sizeRange", "sizeAnimation", "getRangeMax", "getRangeMin", "randomInRange", "getRandom", "clamp", "canvasSize", "moveCenter", "isCenterPercent", "getParticleDirectionAngle", "Vector", "particles", "drawer", "sideCountFunc", "rangeColorToRgb", "mover", "radius", "zIndex", "tryCount", "pluginPos", "Vector3d", "exactPosition", "calcExactPositionOrRandomFromSize", "pos", "outModes", "fixHorizontal", "outMode", "value", "fixVertical", "baseVelocity", "getParticleBaseVelocity", "res", "moveOptions", "rad", "radOffset", "range", "setRangeValue", "collisionsOptions", "overlapOptions", "retries", "overlaps", "particle", "getDistance", "color", "backFactor", "backSum", "alterHsl", "shapeData", "deepExtend", "Point", "position", "particle", "Range", "x", "y", "Circle", "Range", "x", "y", "radius", "point", "getDistance", "range", "rect", "circle", "pos1", "pos2", "distPos", "r", "rSum", "dist", "w", "h", "Rectangle", "Range", "x", "y", "width", "height", "point", "w", "h", "pos", "range", "Circle", "pos1", "pos2", "size2", "w2", "h2", "QuadTree", "rectangle", "capacity", "point", "_a", "_b", "_c", "_d", "_e", "range", "check", "found", "res", "p", "getDistance", "position", "radius", "Circle", "size", "Rectangle", "x", "y", "w", "h", "Particles", "engine", "container", "InteractionManager", "canvasSize", "QuadTree", "Rectangle", "options", "particle", "calcPositionFromSize", "position", "overrideOptions", "group", "initializer", "limit", "countToRemove", "delta", "a", "b", "plugin", "p", "mode", "_a", "handled", "pathGenerator", "groupOptions", "i", "j", "nb", "mouse", "override", "index", "quantity", "deleted", "zIdx", "_b", "particlesToDelete", "resizeFactor", "mover", "Point", "updater", "manualCount", "numberOptions", "densityFactor", "optParticlesNumber", "optParticlesLimit", "particlesNumber", "particlesCount", "t", "densityOptions", "canvas", "pxRatio", "Particle", "canAdd", "e", "Retina", "container", "options", "isSsr", "ratio", "element", "particles", "getRangeValue", "particle", "moveDistance", "props", "maxDistance", "guardCheck", "container", "loadContainerOptions", "engine", "sourceOptionsArr", "options", "Options", "loadOptions", "defaultPathGeneratorKey", "defaultPathGenerator", "p", "v", "Container", "id", "sourceOptions", "Retina", "Canvas", "Particles", "FrameManager", "EventListeners", "entries", "callback", "el", "clickOrTouchHandler", "e", "pos", "radius", "pxRatio", "posRetina", "particles", "clickHandler", "mouseEvent", "touchStartHandler", "touched", "touchMoved", "touchMoveHandler", "touchEndHandler", "touchEvent", "lastTouch", "element", "canvasRect", "touchCancelHandler", "key", "generator", "override", "drawer", "mainArr", "idx", "t", "force", "refreshTime", "animate", "timestamp", "value", "type", "quality", "mode", "plugin", "shapes", "availablePlugins", "getRangeValue", "name", "cancelAnimation", "needsUpdate", "noiseOrGenerator", "init", "update", "pathOrGenerator", "pathGenerator", "oldGenerator", "resolve", "newMaxWidth", "entry", "getDataFromUrl", "jsonUrl", "index", "url", "itemFromSingleOrMultiple", "response", "Loader", "engine", "tagId", "options", "params", "id", "_a", "_b", "_c", "getRandom", "remote", "domContainer", "currentOptions", "dom", "oldIndex", "v", "old", "canvasEl", "generatedAttribute", "existingCanvases", "newItem", "Container", "newId", "newIndex", "element", "getItemsFromInitializer", "container", "map", "initializers", "force", "res", "t", "Plugins", "engine", "name", "initInteractor", "initMover", "initUpdater", "type", "pathGenerator", "plugin", "presetKey", "options", "override", "types", "drawer", "executeOnSingleOrMultiple", "preset", "sourceOptions", "updaters", "updater", "Engine", "EventDispatcher", "Loader", "Plugins", "type", "listener", "name", "interactorInitializer", "moverInitializer", "updaterInitializer", "generator", "plugin", "preset", "options", "override", "shape", "drawer", "init", "afterEffect", "destroy", "customDrawer", "args", "index", "dom", "item", "tagId", "pathConfigJson", "instance", "id", "element", "callback", "domItem", "HslColorManager", "color", "_a", "colorValue", "hslColor", "hslToRgb", "getRangeValue", "input", "regex", "result", "hslaToRgba", "parseAlpha", "RgbColorManager", "color", "_a", "colorValue", "rgbColor", "getRangeValue", "input", "regex", "result", "parseAlpha", "ParticlesInteractorBase", "container", "rgbColorManager", "RgbColorManager", "hslColorManager", "HslColorManager", "addColorManager", "tsParticles", "Engine", "applyDistance", "particle", "initialPosition", "dx", "dy", "getDistances", "dxFixed", "dyFixed", "hDistance", "vDistance", "pos", "vel", "getRandom", "spin", "moveSpeed", "container", "updateFunc", "maxCanvasSize", "applyPath", "delta", "_a", "particlesOptions", "pathOptions", "path", "clamp", "getProximitySpeedFactor", "BaseMover", "particle", "_a", "container", "options", "gravityOptions", "spinOptions", "getRangeValue", "spinPos", "spinCenter", "pos", "distance", "getDistance", "spinAcceleration", "delta", "_b", "_c", "_d", "_e", "particleOptions", "moveOptions", "slowFactor", "getProximitySpeedFactor", "baseSpeed", "moveDrift", "maxSize", "getRangeMax", "sizeFactor", "speedFactor", "diffFactor", "moveSpeed", "spin", "applyPath", "gravityFactor", "decay", "velocity", "maxSpeed", "zIndexOptions", "zVelocityFactor", "applyDistance", "loadBaseMover", "engine", "BaseMover", "CircleDrawer", "context", "particle", "radius", "circleRange", "container", "_a", "shapeData", "angle", "loadCircleShape", "engine", "CircleDrawer", "updateColorValue", "delta", "value", "valueAnimation", "max", "decrease", "_a", "_b", "colorValue", "offset", "randomInRange", "velocity", "decay", "updateColor", "particle", "_c", "animationOptions", "h", "s", "ColorUpdater", "container", "hslColor", "rangeColorToHsl", "getHslAnimationFromHsl", "loadColorUpdater", "engine", "container", "ColorUpdater", "checkDestroy", "particle", "value", "minValue", "maxValue", "updateOpacity", "delta", "_a", "_b", "_c", "_d", "_e", "_f", "decay", "clamp", "OpacityUpdater", "container", "opacityOptions", "getRangeMax", "getRangeMin", "getRangeValue", "opacityAnimation", "opacityRange", "randomInRange", "getRandom", "loadOpacityUpdater", "engine", "container", "OpacityUpdater", "bounceHorizontal", "data", "velocity", "bounced", "newVelocity", "getValue", "minPos", "bounceVertical", "BounceOutMode", "container", "particle", "direction", "delta", "outMode", "handled", "plugin", "pos", "offset", "size", "bounds", "calculateBounds", "canvasSize", "bounceHorizontal", "bounceVertical", "DestroyOutMode", "container", "particle", "direction", "delta", "outMode", "isPointInside", "Vector", "dx", "dy", "getDistances", "vx", "vy", "NoneOutMode", "container", "particle", "direction", "delta", "outMode", "gravityOptions", "canvasSize", "pRadius", "position", "isPointInside", "Vector", "OutOutMode", "container", "particle", "direction", "delta", "outMode", "vx", "vy", "circVec", "Vector", "dx", "dy", "getDistances", "randomInRange", "newDx", "newDy", "isPointInside", "wrap", "canvasSize", "newPos", "sizeValue", "nextBounds", "calculateBounds", "getRandom", "OutOfCanvasUpdater", "container", "BounceOutMode", "DestroyOutMode", "OutOutMode", "NoneOutMode", "particle", "delta", "_a", "_b", "_c", "_d", "outModes", "outMode", "direction", "updater", "loadOutModesUpdater", "engine", "container", "OutOfCanvasUpdater", "CircleWarp", "Circle", "x", "y", "radius", "canvasSize", "point", "posNE", "posSE", "posSW", "range", "rect", "circle", "newPos", "biggerCircle", "rectSW", "Rectangle", "LinksShadow", "OptionsColor", "data", "LinksTriangle", "data", "OptionsColor", "Links", "OptionsColor", "LinksShadow", "LinksTriangle", "data", "getLinkDistance", "pos1", "pos2", "optDistance", "canvasSize", "warp", "distance", "getDistance", "pos2NE", "pos2SE", "pos2SW", "Linker", "ParticlesInteractorBase", "container", "p1", "_a", "linkOpt1", "optOpacity", "range", "CircleWarp", "Circle", "query", "p2", "linkOpt2", "t", "opacityLine", "particle", "options", "sources", "_b", "Links", "source", "linksOptions", "linkColor", "optColor", "getLinkRandomColor", "loadInteraction", "engine", "container", "Linker", "drawLinkLine", "context", "width", "begin", "end", "maxDistance", "canvasSize", "warp", "backgroundMask", "composite", "colorLine", "opacity", "shadow", "drawn", "getDistance", "drawLine", "pi1", "pi2", "endNE", "d1", "getDistances", "yi", "endSW", "d2", "xi", "endSE", "d3", "getStyleFromRgb", "shadowColor", "rangeColorToRgb", "drawLinkTriangle", "pos1", "pos2", "pos3", "colorTriangle", "opacityTriangle", "drawTriangle", "getLinkKey", "ids", "a", "b", "setLinkFrequency", "particles", "dictionary", "key", "t", "res", "getRandom", "LinkInstance", "container", "context", "particle", "_a", "pOptions", "p1Links", "l", "link", "ratio", "p1", "options", "p2", "pos1", "pos2", "opacity", "ctx", "_b", "_c", "colorLine", "twinkle", "twinkleFreq", "twinkleRgb", "rangeColorToRgb", "getRangeValue", "linksOptions", "linkColor", "getLinkColor", "width", "maxDistance", "drawLinkLine", "link1", "link2", "p3", "triangleOptions", "opacityTriangle", "pos3", "linksDistance", "getDistance", "colorTriangle", "drawLinkTriangle", "vertices", "linkFreq", "vertex", "LinksPlugin", "container", "LinkInstance", "loadPlugin", "engine", "plugin", "loadParticlesLinksInteraction", "engine", "loadInteraction", "loadPlugin", "checkDestroy", "particle", "value", "minValue", "maxValue", "updateSize", "delta", "_a", "_b", "_c", "_d", "_e", "sizeVelocity", "decay", "clamp", "SizeUpdater", "container", "sizeOptions", "sizeAnimation", "getRandom", "loadSizeUpdater", "engine", "SizeUpdater", "options", "loadLinksPreset", "engine", "loadBaseMover", "loadCircleShape", "loadColorUpdater", "loadParticlesLinksInteraction", "loadOutModesUpdater", "loadOpacityUpdater", "loadSizeUpdater", "options", "loadLinksPreset", "tsParticles", "particles", "setTheme", "target", "themeChange", "mutationList", "observer"]
}
