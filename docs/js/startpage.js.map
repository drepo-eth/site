{"version":3,"sources":["file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Utils/Vector.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Utils/Utils.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Canvas.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Random.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Options/Classes/Options.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Particle.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Utils/Point.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Utils/Range.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Utils/Circle.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Particles.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Retina.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Container.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Engine.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Utils/HslColorManager.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/init.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js","file:///home/runner/work/site/site/node_modules/tsparticles-engine/esm/index.js","file:///home/runner/work/site/site/node_modules/tsparticles-move-base/esm/Utils.js","file:///home/runner/work/site/site/node_modules/tsparticles-move-base/esm/BaseMover.js","file:///home/runner/work/site/site/node_modules/tsparticles-move-base/esm/index.js","file:///home/runner/work/site/site/node_modules/tsparticles-shape-circle/esm/CircleDrawer.js","file:///home/runner/work/site/site/node_modules/tsparticles-shape-circle/esm/index.js","file:///home/runner/work/site/site/node_modules/tsparticles-updater-color/esm/Utils.js","file:///home/runner/work/site/site/node_modules/tsparticles-updater-color/esm/ColorUpdater.js","file:///home/runner/work/site/site/node_modules/tsparticles-updater-color/esm/index.js","file:///home/runner/work/site/site/node_modules/tsparticles-updater-opacity/esm/Utils.js","file:///home/runner/work/site/site/node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js","file:///home/runner/work/site/site/node_modules/tsparticles-updater-opacity/esm/index.js","file:///home/runner/work/site/site/node_modules/tsparticles-updater-out-modes/esm/Utils.js","file:///home/runner/work/site/site/node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js","file:///home/runner/work/site/site/node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js","file:///home/runner/work/site/site/node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js","file:///home/runner/work/site/site/node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js","file:///home/runner/work/site/site/node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js","file:///home/runner/work/site/site/node_modules/tsparticles-updater-out-modes/esm/index.js","file:///home/runner/work/site/site/node_modules/tsparticles-updater-size/esm/Utils.js","file:///home/runner/work/site/site/node_modules/tsparticles-updater-size/esm/SizeUpdater.js","file:///home/runner/work/site/site/node_modules/tsparticles-updater-size/esm/index.js","file:///home/runner/work/site/site/node_modules/tsparticles-basic/esm/index.js","file:///home/runner/work/site/site/node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js","file:///home/runner/work/site/site/node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js","file:///home/runner/work/site/site/node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js","file:///home/runner/work/site/site/node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js","file:///home/runner/work/site/site/node_modules/tsparticles-interaction-particles-links/esm/Linker.js","file:///home/runner/work/site/site/node_modules/tsparticles-interaction-particles-links/esm/interaction.js","file:///home/runner/work/site/site/node_modules/tsparticles-interaction-particles-links/esm/Utils.js","file:///home/runner/work/site/site/node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js","file:///home/runner/work/site/site/node_modules/tsparticles-interaction-particles-links/esm/plugin.js","file:///home/runner/work/site/site/node_modules/tsparticles-interaction-particles-links/esm/index.js","file:///home/runner/work/site/site/node_modules/tsparticles-preset-links/esm/options.js","file:///home/runner/work/site/site/node_modules/tsparticles-preset-links/esm/index.js","file:///home/runner/work/site/site/assets/js/startpage.ts"],"sourcesContent":["export const generatedAttribute = \"generated\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchEndEvent = \"touchend\";\nexport const touchMoveEvent = \"touchmove\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\nexport const errorPrefix = \"tsParticles - Error\";\n","import { errorPrefix } from \"./Constants\";\nimport { isNumber } from \"../../Utils/Utils\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) =\u003e {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) \u0026\u0026 xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined \u0026\u0026 y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? 0;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != 0) {\n            this.multTo(1.0 / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\n","import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { isBoolean, isNumber } from \"./Utils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (easings.get(name)) {\n        return;\n    }\n    easings.set(name, easing);\n}\nexport function getEasing(name) {\n    return easings.get(name) || ((value) =\u003e value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined \u0026\u0026 isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = isBoolean(random)\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return (direction * Math.PI) / 180;\n    }\n    switch (direction) {\n        case \"top\":\n            return -Math.PI / 2;\n        case \"top-right\":\n            return -Math.PI / 4;\n        case \"right\":\n            return 0;\n        case \"bottom-right\":\n            return Math.PI / 4;\n        case \"bottom\":\n            return Math.PI / 2;\n        case \"bottom-left\":\n            return (3 * Math.PI) / 4;\n        case \"left\":\n            return Math.PI;\n        case \"top-left\":\n            return (-3 * Math.PI) / 4;\n        case \"inside\":\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case \"outside\":\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * Math.PI * 2;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position \u0026\u0026 data.position.x !== undefined \u0026\u0026 data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * 100) * data.size.width) / 100,\n        y: ((data.position?.y ?? getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n","import { collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min \u003c rectOtherSide.min ||\n        pOtherSide.min \u003e rectOtherSide.max ||\n        pOtherSide.max \u003c rectOtherSide.min ||\n        pOtherSide.max \u003e rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max \u003e= rectSide.min \u0026\u0026 pSide.max \u003c= (rectSide.max + rectSide.min) / 2 \u0026\u0026 velocity \u003e 0) ||\n        (pSide.min \u003c= rectSide.max \u0026\u0026 pSide.min \u003e (rectSide.max + rectSide.min) / 2 \u0026\u0026 velocity \u003c 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) =\u003e {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some((t) =\u003e t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() \u0026\u0026 typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    return value === array || (isArray(array) \u0026\u0026 array.indexOf(value) \u003e -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined \u0026\u0026 useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius ?? 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top \u003c size.height + offset.x;\n    }\n    if (inside \u0026\u0026 (!direction || direction === \"left\")) {\n        inside = bounds.right \u003e offset.x;\n    }\n    if (inside \u0026\u0026 (!direction || direction === \"right\")) {\n        inside = bounds.left \u003c size.width + offset.y;\n    }\n    if (inside \u0026\u0026 (!direction || direction === \"top\")) {\n        inside = bounds.bottom \u003e offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray \u0026\u0026 (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray \u0026\u0026 (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) \u0026\u0026 Array.isArray(value)\n                    ? value.map((v) =\u003e deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) =\u003e t.enable \u0026\u0026 isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) =\u003e {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled \u0026\u0026 isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) =\u003e {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) =\u003e {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist \u003c 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getValue(particle.options.bounce.horizontal),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getValue(particle.options.bounce.vertical),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.map((item, index) =\u003e callback(item, index)) : callback(obj, 0);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.find((t, index) =\u003e callback(t, index)) : callback(obj, 0) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * 1000,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    };\n    if (animationOptions.enable) {\n        res.decay = 1 - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case \"increase\":\n                res.status = \"increasing\";\n                break;\n            case \"decrease\":\n                res.status = \"decreasing\";\n                break;\n            case \"random\":\n                res.status = getRandom() \u003e= 0.5 ? \"increasing\" : \"decreasing\";\n                break;\n        }\n        const autoStatus = animationOptions.mode === \"auto\";\n        switch (animationOptions.startValue) {\n            case \"min\":\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = \"increasing\";\n                }\n                break;\n            case \"max\":\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = \"decreasing\";\n                }\n                break;\n            case \"random\":\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() \u003e= 0.5 ? \"increasing\" : \"decreasing\";\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === \"percent\";\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / 100) * canvasSize.width,\n            y: (positionOrSize.y / 100) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / 100) * canvasSize.width,\n            height: (positionOrSize.height / 100) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nexport function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" \u0026\u0026 arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\n","import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { isArray, isString, itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t \u003c 0) {\n        t += 1;\n    }\n    if (t \u003e 1) {\n        t -= 1;\n    }\n    if (t \u003c 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t \u003c 1 / 2) {\n        return q;\n    }\n    if (t \u003c 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) =\u003e {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l \u003c 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h \u003c 0) {\n        res.h += 360;\n    }\n    if (res.h \u003e= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    return stringToRgba(input)?.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.r = result.g = result.b = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l \u003c 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor \u0026\u0026 destColor \u0026\u0026 p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        colorValue.loops = 0;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = 0;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * 1000;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n","import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * (transform.a ?? 1),\n        b: rotateData.sin * (transform.b ?? 1),\n        c: -rotateData.sin * (transform.c ?? 1),\n        d: rotateData.cos * (transform.d ?? 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable \u0026\u0026 shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (strokeWidth \u003e 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer || !drawer.afterEffect) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) =\u003e {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw \u0026\u0026 updater.afterDraw(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) =\u003e {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw \u0026\u0026 updater.beforeDraw(particle);\n            }\n        };\n        this._applyResizePlugins = () =\u003e {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize \u0026\u0026 plugin.resize();\n            }\n        };\n        this._getPluginParticleColors = (particle) =\u003e {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor \u0026\u0026 plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor \u0026\u0026 plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor \u0026\u0026 sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = () =\u003e {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n            if (coverRgb) {\n                const coverColor = {\n                    ...coverRgb,\n                    a: cover.opacity,\n                };\n                this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n            }\n        };\n        this._initStyle = () =\u003e {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () =\u003e {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                const trail = options.particles.move.trail;\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity: 1 / trail.length,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) =\u003e {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () =\u003e {\n                        this._trailFill = {\n                            image: img,\n                            opacity: 1 / trail.length,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) =\u003e {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) =\u003e {\n            this.draw((ctx) =\u003e paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) =\u003e {\n            this.draw((ctx) =\u003e paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () =\u003e {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) =\u003e observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) =\u003e observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () =\u003e {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element \u0026\u0026 originalStyle)) {\n                return;\n            }\n            const style = element.style;\n            style.position = originalStyle.position;\n            style.zIndex = originalStyle.zIndex;\n            style.top = originalStyle.top;\n            style.left = originalStyle.left;\n            style.width = originalStyle.width;\n            style.height = originalStyle.height;\n        };\n        this._safeMutationObserver = (callback) =\u003e {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () =\u003e {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const priority = \"important\", style = element.style;\n            style.setProperty(\"position\", \"fixed\", priority);\n            style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n            style.setProperty(\"top\", \"0\", priority);\n            style.setProperty(\"left\", \"0\", priority);\n            style.setProperty(\"width\", \"100%\", priority);\n            style.setProperty(\"height\", \"100%\", priority);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable \u0026\u0026 trail.length \u003e 0 \u0026\u0026 trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) =\u003e {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element \u0026\u0026 element.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius \u003c= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor \u0026\u0026 !sColor) {\n            return;\n        }\n        this.draw((ctx) =\u003e {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) =\u003e drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) =\u003e drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) =\u003e obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) =\u003e {\n            for (const record of records) {\n                if (record.type === \"attributes\" \u0026\u0026 record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) =\u003e {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated \u0026\u0026 this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset \u0026\u0026 generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) =\u003e {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) =\u003e {\n            if (options.backgroundMask.enable \u0026\u0026 options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height \u0026\u0026\n            newSize.width === size.width \u0026\u0026\n            newSize.height === this.element.height \u0026\u0026\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) =\u003e obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) =\u003e clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) =\u003e {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) =\u003e this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() =\u003e this._mouseTouchFinish(), 500);\n            }\n        };\n        this._handleThemeChange = (e) =\u003e {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) =\u003e theme.name === themeName);\n            if (theme \u0026\u0026 theme.default.auto) {\n                container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () =\u003e {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document \u0026\u0026 document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.getAnimationStatus()) {\n                    container.play(true);\n                }\n                else {\n                    container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = async () =\u003e {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            this._resizeTimeout = setTimeout(async () =\u003e {\n                const canvas = this.container.canvas;\n                canvas \u0026\u0026 (await canvas.windowResize());\n            }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) =\u003e {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) =\u003e {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" \u0026\u0026 canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) =\u003e {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) =\u003e {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver \u0026\u0026 !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver \u0026\u0026 add \u0026\u0026 canvasEl) {\n                this._resizeObserver = new ResizeObserver(async (entries) =\u003e {\n                    const entry = entries.find((e) =\u003e e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    await this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () =\u003e {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) =\u003e {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () =\u003e {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) =\u003e {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity || !interactivity.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source \u0026\u0026 target \u0026\u0026 canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? 0),\n                        y: lastTouch.clientY - (canvasRect.top ?? 0),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) =\u003e {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) =\u003e {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) =\u003e {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () =\u003e this._mouseDown(),\n            mouseLeave: () =\u003e this._mouseTouchFinish(),\n            mouseMove: (e) =\u003e this._mouseTouchMove(e),\n            mouseUp: (e) =\u003e this._mouseTouchClick(e),\n            touchStart: (e) =\u003e this._touchStart(e),\n            touchMove: (e) =\u003e this._mouseTouchMove(e),\n            touchEnd: (e) =\u003e this._touchEnd(e),\n            touchCancel: (e) =\u003e this._touchEnd(e),\n            touchEndClick: (e) =\u003e this._touchEndClick(e),\n            visibilityChange: () =\u003e this._handleVisibilityChange(),\n            themeChange: (e) =\u003e this._handleThemeChange(e),\n            oldThemeChange: (e) =\u003e this._handleThemeChange(e),\n            resize: () =\u003e {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (data?.value === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nimport { isString } from \"../../../Utils/Utils\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) =\u003e t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) =\u003e `#${t}`);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const ids = data.ids ?? data.elementId ?? data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean } from \"../../../../Utils/Utils\";\nimport { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.onClick.load(data.onClick ?? data.onclick);\n        const onDiv = data.onDiv ?? data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) =\u003e {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover ?? data.onhover);\n        if (isBoolean(data.resize)) {\n            this.resize.enable = data.resize;\n        }\n        else {\n            this.resize.load(data.resize);\n        }\n    }\n}\n","export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const detectsOn = data.detectsOn ?? data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? 50,\n                y: data.position.y ?? 50,\n                mode: data.position.mode ?? \"percent\",\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.delay = 0;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nimport { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = \"auto\";\n        this.startValue = \"random\";\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions\";\nimport { Random } from \"./Random\";\nimport { isBoolean } from \"../../Utils/Utils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (isBoolean(data.random)) {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = data.rotate?.x ?? data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = data.rotate?.y ?? data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n","export class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = \"percent\";\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrailFill {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    get fillColor() {\n        return this.fill.color;\n    }\n    set fillColor(value) {\n        this.fill.load({ color: value });\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined || data.fillColor !== undefined) {\n            this.fill.load(data.fill || { color: data.fillColor });\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { isNumber, isObject } from \"../../../../Utils/Utils\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes ?? data.outMode ?? data.out_mode;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path ?? data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 2;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.opacity_min !== undefined \u0026\u0026 data.minimumValue === undefined) {\n            data.minimumValue = data.opacity_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    get area() {\n        return this.width;\n    }\n    set area(value) {\n        this.width = value;\n    }\n    get factor() {\n        return this.height;\n    }\n    set factor(value) {\n        this.height = value;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width ?? data.area ?? data.value_area;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height ?? data.factor;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 0;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = data.limit ?? data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend, isArray } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.loadShape = (item, mainKey, altKey, altOverride) =\u003e {\n            if (!item) {\n                return;\n            }\n            const itemIsArray = isArray(item), emptyValue = itemIsArray ? [] : {}, mainDifferentValues = itemIsArray !== isArray(this.options[mainKey]), altDifferentValues = itemIsArray !== isArray(this.options[altKey]);\n            if (mainDifferentValues) {\n                this.options[mainKey] = emptyValue;\n            }\n            if (altDifferentValues \u0026\u0026 altOverride) {\n                this.options[altKey] = emptyValue;\n            }\n            this.options[mainKey] = deepExtend(this.options[mainKey] ?? emptyValue, item);\n            if (!this.options[altKey] || altOverride) {\n                this.options[altKey] = deepExtend(this.options[altKey] ?? emptyValue, item);\n            }\n        };\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        return (this.options[charKey] ?? this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        return (this.options[imageKey] ?? this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        return (this.options[polygonKey] ?? this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const options = data.options ?? data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape(data.image ?? data.images, imageKey, imageAltKey, true);\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 5;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.size_min !== undefined \u0026\u0026 data.minimumValue === undefined) {\n            data.minimumValue = data.size_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = data.move?.collisions ?? data.move?.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke ?? data.shape?.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) =\u003e {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = (mode) =\u003e {\n            return (this.themes.find((theme) =\u003e theme.default.value \u0026\u0026 theme.default.mode === mode) ??\n                this.themes.find((theme) =\u003e theme.default.value \u0026\u0026 theme.default.mode === \"any\"));\n        };\n        this._importPreset = (preset) =\u003e {\n            this.load(this._engine.plugins.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) =\u003e this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina ?? data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit ?? data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen ?? data.backgroundMode;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map((t) =\u003e {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) =\u003e a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find((t) =\u003e t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(\"dark\")?.name;\n        this.defaultThemes.light = this._findDefaultTheme(\"light\")?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) =\u003e t.mode === \"screen\" \u0026\u0026 screen ? t.maxWidth \u003e screen.availWidth : t.maxWidth * pxRatio \u003e width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) =\u003e theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch \u0026\u0026 mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() \u0026\u0026 (await interactor.interact(delta));\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode \u0026\u0026 interactor.handleClickMode(mode);\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) \u0026\u0026 (await interactor.interact(particle, delta));\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() \u0026\u0026 interactor.reset(particle);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) \u0026\u0026 interactor.reset(particle);\n        }\n    }\n}\n","import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) =\u003e {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * 2;\n    if (data.coord \u003e data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord \u003c diameter) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = 0) =\u003e {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) =\u003e {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-horizontal\"],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) =\u003e (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) =\u003e {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-vertical\"],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) =\u003e (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () =\u003e {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n                return res;\n            }\n            const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n                left: radOffset - rad / 2,\n                right: radOffset + rad / 2,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random \u0026\u0026 typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = 0) =\u003e {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries \u003e= 0 \u0026\u0026 tryCount \u003e retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find((particle) =\u003e getDistance(pos, particle.position) \u003c radius + particle.getRadius());\n        };\n        this._getRollColor = (color) =\u003e {\n            if (!color || !this.roll || (!this.backColor \u0026\u0026 !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal \u0026\u0026 this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor(((this.roll.angle ?? 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = (position) =\u003e {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? 0,\n                mode: this.options.move.center.mode ?? \"percent\",\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case \"inside\":\n                    this.outType = \"inside\";\n                    break;\n                case \"outside\":\n                    this.outType = \"outside\";\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._loadShapeData = (shapeOptions, reduceDuplicates) =\u003e {\n            const shapeData = shapeOptions.options[this.shape];\n            if (!shapeData) {\n                return;\n            }\n            return deepExtend({\n                close: shapeOptions.close,\n                fill: shapeOptions.fill,\n            }, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        };\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n        if (pathGenerator) {\n            pathGenerator.reset(this);\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions \u0026\u0026 overrideOptions.shape \u0026\u0026 overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.fill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.close = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator \u0026\u0026 container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex \u003c this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer \u0026\u0026 drawer.loadShape) {\n            drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            mover.init \u0026\u0026 mover.init(this);\n        }\n        if (drawer \u0026\u0026 drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated \u0026\u0026 plugin.particleCreated(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x \u003e= -radius \u0026\u0026\n            position.y \u003e= -radius \u0026\u0026\n            position.y \u003c= canvasSize.height + radius \u0026\u0026\n            position.x \u003c= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed \u0026\u0026 !this.spawning \u0026\u0026 this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset \u0026\u0026 updater.reset(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x \u003e= pos.x \u0026\u0026 point.x \u003c= pos.x + w \u0026\u0026 point.y \u003e= pos.y \u0026\u0026 point.y \u003c= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x \u003c pos1.x + w \u0026\u0026 pos2.x + w2 \u003e pos1.x \u0026\u0026 pos2.y \u003c pos1.y + h \u0026\u0026 pos2.y + h2 \u003e pos1.y;\n    }\n}\n","import { Range } from \"./Range\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) \u003c= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle) {\n            const rSum = r + range.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum \u003e dist;\n        }\n        else if (range instanceof Rectangle) {\n            const { width, height } = range.size, edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);\n            return (edges \u003c= r ** 2 ||\n                (distPos.x \u003c= r + width \u0026\u0026 distPos.y \u003c= r + height) ||\n                distPos.x \u003c= width ||\n                distPos.y \u003c= height);\n        }\n        return false;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () =\u003e {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i \u003c 4; i++) {\n                this._subs.push(new QuadTree(new Rectangle(x + (width / 2) * (i % 2), y + (height / 2) * (Math.round(i / 2) - (i % 2)), width / 2, height / 2), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length \u003c this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) =\u003e sub.insert(point));\n    }\n    query(range, check, found) {\n        const res = found || [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) \u0026\u0026\n                getDistance(range.position, p.position) \u003e p.particle.getRadius() \u0026\u0026\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                sub.query(range, check, res);\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { errorPrefix } from \"./Utils/Constants\";\nconst qTreeCapacity = 4;\nconst qTreeRectangle = (canvasSize) =\u003e {\n    return new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._applyDensity = (options, manualCount, group) =\u003e {\n            if (!options.number.density?.enable) {\n                return;\n            }\n            const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit \u003e 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) =\u003e t.group === group).length);\n            this.limit = numberOptions.limit * densityFactor;\n            if (particlesCount \u003c particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount \u003e particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) =\u003e {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return 1;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) =\u003e {\n            try {\n                let particle = this.pool.pop();\n                if (particle) {\n                    particle.init(this._nextId, position, overrideOptions, group);\n                }\n                else {\n                    particle = new Particle(this._engine, this._nextId, this._container, position, overrideOptions, group);\n                }\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n                return;\n            }\n        };\n        this._removeParticle = (index, group, override) =\u003e {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            particle.destroy(override);\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, 1);\n            this._zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this._container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit \u003e 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove \u003e 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this._container;\n        container.canvas.clear();\n        await this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    init() {\n        const container = this._container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this._interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j \u003c groupOptions.number?.value \u0026\u0026 i \u003c options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i \u003c options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i \u003c nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index \u003c 0 || index \u003e this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted \u003c quantity \u0026\u0026 i \u003c this.count; i++) {\n            this._removeParticle(i--, group, override) \u0026\u0026 deleted++;\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update \u0026\u0026 plugin.update(delta);\n        }\n        for (const particle of this._array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor \u0026\u0026 !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            for (const mover of this.movers) {\n                mover.isEnabled(particle) \u0026\u0026 mover.move(particle, delta);\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) =\u003e !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            this.pool.push(...particlesToDelete);\n        }\n        await this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed \u0026\u0026 !particle.spawning) {\n                await this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n        if (this.needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) =\u003e b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = zArray[zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = 1;\n        this.reduceFactor = 1;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container \u0026\u0026 !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) =\u003e p.velocity,\n    init: () =\u003e {\n    },\n    update: () =\u003e {\n    },\n    reset: () =\u003e {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._intersectionManager = (entries) =\u003e {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                (entry.isIntersecting ? this.play : this.pause)();\n            }\n        };\n        this._nextFrame = async (timestamp) =\u003e {\n            try {\n                if (!this.smooth \u0026\u0026\n                    this.lastFrameTime !== undefined \u0026\u0026\n                    timestamp \u003c this.lastFrameTime + 1000 / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this.lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);\n                this.addLifeTime(delta.value);\n                this.lastFrameTime = timestamp;\n                if (delta.value \u003e 1000) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.getAnimationStatus()) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" \u0026\u0026 IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) =\u003e this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) =\u003e {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) =\u003e {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () =\u003e {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () =\u003e {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) =\u003e {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched \u0026\u0026 !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () =\u003e {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override \u0026\u0026 this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime \u003c= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            drawer.destroy \u0026\u0026 drawer.destroy(this);\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) =\u003e t === this);\n        if (idx \u003e= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = requestAnimationFrame(async (timestamp) =\u003e {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        });\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    getAnimationStatus() {\n        return !this._paused \u0026\u0026 !this.pageHidden \u0026\u0026 guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode \u0026\u0026 plugin.handleClickMode(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this._lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit \u003e 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            drawer.init \u0026\u0026 (await drawer.init(this));\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.init \u0026\u0026 (await plugin.init());\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup \u0026\u0026 plugin.particlesSetup();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause \u0026\u0026 plugin.pause();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart \u0026\u0026 !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = { ...defaultPathGenerator };\n        if (isFunction(pathOrGenerator)) {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) =\u003e {\n            this._delayTimeout = setTimeout(async () =\u003e {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement \u0026\u0026 this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    plugin.start \u0026\u0026 (await plugin.start());\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement \u0026\u0026 this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop \u0026\u0026 plugin.stop();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners \u0026\u0026 listeners.forEach((handler) =\u003e handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx \u003c 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) =\u003e t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        !this.getPathGenerator(type) \u0026\u0026 this.pathGenerators.set(type, pathGenerator);\n    }\n    addPlugin(plugin) {\n        !this.getPlugin(plugin.id) \u0026\u0026 this.plugins.push(plugin);\n    }\n    addPreset(presetKey, options, override = false) {\n        (override || !this.getPreset(presetKey)) \u0026\u0026 this.presets.set(presetKey, options);\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) =\u003e {\n            !this.getShapeDrawer(type) \u0026\u0026 this.drawers.set(type, drawer);\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            plugin.needsPlugin(container.actualOptions) \u0026\u0026 res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) =\u003e t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            updater.loadOptions \u0026\u0026 updater.loadOptions(options, ...sourceOptions);\n        }\n    }\n}\n","import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nfunction isParamsEmpty(params) {\n    return !params.id \u0026\u0026 !params.element \u0026\u0026 !params.url \u0026\u0026 !params.options;\n}\nfunction isParams(obj) {\n    return !isParamsEmpty(obj);\n}\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = new Plugins(this);\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get version() {\n        return \"2.12.0\";\n    }\n    addConfig(nameOrConfig, config) {\n        if (isString(nameOrConfig)) {\n            if (config) {\n                config.name = nameOrConfig;\n                this._configs.set(nameOrConfig, config);\n            }\n        }\n        else {\n            this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\n        }\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh(refresh);\n    }\n    async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh, refresh = true) {\n        let customDrawer;\n        let realRefresh = refresh, realInit, realAfterEffect, realDestroy;\n        if (isBoolean(initOrRefresh)) {\n            realRefresh = initOrRefresh;\n            realInit = undefined;\n        }\n        else {\n            realInit = initOrRefresh;\n        }\n        if (isBoolean(afterEffectOrRefresh)) {\n            realRefresh = afterEffectOrRefresh;\n            realAfterEffect = undefined;\n        }\n        else {\n            realAfterEffect = afterEffectOrRefresh;\n        }\n        if (isBoolean(destroyOrRefresh)) {\n            realRefresh = destroyOrRefresh;\n            realDestroy = undefined;\n        }\n        else {\n            realDestroy = destroyOrRefresh;\n        }\n        if (isFunction(drawer)) {\n            customDrawer = {\n                afterEffect: realAfterEffect,\n                destroy: realDestroy,\n                draw: drawer,\n                init: realInit,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh(realRefresh);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (!item || item.destroyed) {\n            dom.splice(index, 1);\n            return;\n        }\n        return item;\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    async load(tagIdOrOptionsOrParams, options) {\n        return this.loadFromArray(tagIdOrOptionsOrParams, options);\n    }\n    async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n        let params;\n        if (!isParams(tagIdOrOptionsOrParams)) {\n            params = {};\n            if (isString(tagIdOrOptionsOrParams)) {\n                params.id = tagIdOrOptionsOrParams;\n            }\n            else {\n                params.options = tagIdOrOptionsOrParams;\n            }\n            if (isNumber(optionsOrIndex)) {\n                params.index = optionsOrIndex;\n            }\n            else {\n                params.options = optionsOrIndex ?? params.options;\n            }\n            params.index = index ?? params.index;\n        }\n        else {\n            params = tagIdOrOptionsOrParams;\n        }\n        return this._loadParams(params);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        let url, id;\n        if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = pathConfigJson;\n        }\n        return this._loadParams({ id: id, url, index });\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        this.dom().forEach((t) =\u003e t.refresh());\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options, index) {\n        const params = { index };\n        if (isString(id)) {\n            params.id = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (element instanceof HTMLElement) {\n            params.element = element;\n        }\n        else {\n            params.options = element;\n        }\n        if (isNumber(options)) {\n            params.index = options;\n        }\n        else {\n            params.options = options ?? params.options;\n        }\n        return this._loadParams(params);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        const params = {};\n        if (id instanceof HTMLElement) {\n            params.element = id;\n            params.url = element;\n            params.index = pathConfigJson;\n        }\n        else {\n            params.id = id;\n            params.element = element;\n            params.url = pathConfigJson;\n            params.index = index;\n        }\n        return this._loadParams(params);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n    async _loadParams(params) {\n        const id = params.id ?? `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        let domContainer = params.element ?? document.getElementById(id);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = id;\n            document.body.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this.dom(), oldIndex = dom.findIndex((v) =\u003e v.id === id);\n        if (oldIndex \u003e= 0) {\n            const old = this.domItem(oldIndex);\n            if (old \u0026\u0026 !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this, id, currentOptions);\n        if (oldIndex \u003e= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined \u0026\u0026 hslColor.s !== undefined \u0026\u0026 hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined \u0026\u0026 hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length \u003e 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length \u003e 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n","import { Engine } from \"./Core/Engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nexport function init() {\n    const rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\n    addColorManager(rgbColorManager);\n    addColorManager(hslColorManager);\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","export class ParticlesInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"particles\";\n    }\n}\n","import { init } from \"./init\";\nimport { isSsr } from \"./Utils/Utils\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports\";\nexport * from \"./export-types\";\nexport { tsParticles };\n","import { clamp, getDistances, getRandom, } from \"tsparticles-engine\";\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance \u0026\u0026 !vDistance) {\n        return;\n    }\n    if (((hDistance \u0026\u0026 dxFixed \u003e= hDistance) || (vDistance \u0026\u0026 dyFixed \u003e= vDistance)) \u0026\u0026 !particle.misplaced) {\n        particle.misplaced = (!!hDistance \u0026\u0026 dxFixed \u003e hDistance) || (!!vDistance \u0026\u0026 dyFixed \u003e vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed \u003c hDistance) \u0026\u0026 (!vDistance || dyFixed \u003c vDistance) \u0026\u0026 particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance \u0026\u0026 ((pos.x \u003c initialPosition.x \u0026\u0026 vel.x \u003c 0) || (pos.x \u003e initialPosition.x \u0026\u0026 vel.x \u003e 0))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance \u0026\u0026 ((pos.y \u003c initialPosition.y \u0026\u0026 vel.y \u003c 0) || (pos.y \u003e initialPosition.y \u0026\u0026 vel.y \u003e 0))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable \u0026\u0026 gravityOptions.inverse ? -1 : 1;\n    if (moveDrift \u0026\u0026 moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n    }\n    if (gravityOptions?.enable \u0026\u0026 moveSpeed) {\n        particle.velocity.y += (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable \u0026\u0026\n        maxSpeed \u003e 0 \u0026\u0026\n        ((!gravityOptions.inverse \u0026\u0026 velocity.y \u003e= 0 \u0026\u0026 velocity.y \u003e= maxSpeed) ||\n            (gravityOptions.inverse \u0026\u0026 velocity.y \u003c= 0 \u0026\u0026 velocity.y \u003c= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === \"clockwise\" ? Math.cos : Math.sin,\n        y: particle.spin.direction === \"clockwise\" ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);\n    if (particle.spin.radius \u003e maxCanvasSize / 2) {\n        particle.spin.radius = maxCanvasSize / 2;\n        particle.spin.acceleration *= -1;\n    }\n    else if (particle.spin.radius \u003c 0) {\n        particle.spin.radius = 0;\n        particle.spin.acceleration *= -1;\n    }\n    particle.spin.angle += (moveSpeed / 100) * (1 - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime \u003c= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -1, 1);\n        particle.velocity.y = clamp(particle.velocity.y, -1, 1);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : 1;\n}\n","import { getDistance, getRangeMax, getRangeValue, } from \"tsparticles-engine\";\nimport { applyDistance, getProximitySpeedFactor, move, spin } from \"./Utils\";\nconst diffFactor = 2;\nexport class BaseMover {\n    constructor() {\n        this._initSpin = (particle) =\u003e {\n            const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n            if (!spinOptions.enable) {\n                return;\n            }\n            const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x \u003e= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        };\n    }\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        this._initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed \u0026\u0026 particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio, slowFactor = getProximitySpeedFactor(particle), baseSpeed = (particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio) *\n            container.retina.reduceFactor, moveDrift = (particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio), maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, moveSpeed = (baseSpeed * sizeFactor * slowFactor * (delta.factor || 1)) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n","import { BaseMover } from \"./BaseMover\";\nexport async function loadBaseMover(engine, refresh = true) {\n    await engine.addMover(\"base\", () =\u003e new BaseMover(), refresh);\n}\n","import { isObject } from \"tsparticles-engine\";\nexport class CircleDrawer {\n    draw(context, particle, radius) {\n        if (!particle.circleRange) {\n            particle.circleRange = { min: 0, max: Math.PI * 2 };\n        }\n        const circleRange = particle.circleRange;\n        context.arc(0, 0, radius, circleRange.min, circleRange.max, false);\n    }\n    getSidesCount() {\n        return 12;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: 360,\n            min: 0,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: 0,\n                max: (angle * Math.PI) / 180,\n            }\n            : { min: (angle.min * Math.PI) / 180, max: (angle.max * Math.PI) / 180 };\n    }\n}\n","import { CircleDrawer } from \"./CircleDrawer\";\nexport async function loadCircleShape(engine, refresh = true) {\n    await engine.addShape(\"circle\", new CircleDrawer(), refresh);\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) \u003e 0 \u0026\u0026 (colorValue.loops ?? 0) \u003e (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) \u003e 0 \u0026\u0026 colorValue.time \u003c (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) \u003e 0 \u0026\u0026 colorValue.time \u003c (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value \u003e max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value \u003c 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity \u0026\u0026 decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value \u003e max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateColor(particle, delta) {\n    const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateColor } from \"./Utils\";\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed \u0026\u0026\n            !particle.spawning \u0026\u0026\n            ((color?.h.value !== undefined \u0026\u0026 hAnimation.enable) ||\n                (color?.s.value !== undefined \u0026\u0026 sAnimation.enable) ||\n                (color?.l.value !== undefined \u0026\u0026 lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n","import { ColorUpdater } from \"./ColorUpdater\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"color\", (container) =\u003e new ColorUpdater(container), refresh);\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value \u003e= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value \u003c= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateOpacity(particle, delta) {\n    const data = particle.opacity;\n    if (particle.destroyed || !data?.enable || ((data.maxLoops ?? 0) \u003e 0 \u0026\u0026 (data.loops ?? 0) \u003e (data.maxLoops ?? 0))) {\n        return;\n    }\n    const minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) \u003e 0 \u0026\u0026 data.time \u003c (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) \u003e 0 \u0026\u0026 data.time \u003c (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value \u003e= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value \u003c= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n    }\n    if (data.velocity \u0026\u0026 data.decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { getRandom, getRangeValue, initParticleNumericAnimationValue, } from \"tsparticles-engine\";\nimport { updateOpacity } from \"./Utils\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, 1);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed \u0026\u0026\n            !particle.spawning \u0026\u0026\n            !!particle.opacity \u0026\u0026\n            particle.opacity.enable \u0026\u0026\n            ((particle.opacity.maxLoops ?? 0) \u003c= 0 ||\n                ((particle.opacity.maxLoops ?? 0) \u003e 0 \u0026\u0026\n                    (particle.opacity.loops ?? 0) \u003c (particle.opacity.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n","import { OpacityUpdater } from \"./OpacityUpdater\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"opacity\", (container) =\u003e new OpacityUpdater(container), refresh);\n}\n","import { getValue } from \"tsparticles-engine\";\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== \"bounce\" \u0026\u0026\n        data.outMode !== \"bounce-horizontal\" \u0026\u0026\n        data.outMode !== \"bounceHorizontal\" \u0026\u0026\n        data.outMode !== \"split\") ||\n        (data.direction !== \"left\" \u0026\u0026 data.direction !== \"right\")) {\n        return;\n    }\n    if (data.bounds.right \u003c 0 \u0026\u0026 data.direction === \"left\") {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left \u003e data.canvasSize.width \u0026\u0026 data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" \u0026\u0026 data.bounds.right \u003e= data.canvasSize.width \u0026\u0026 velocity \u003e 0) ||\n        (data.direction === \"left\" \u0026\u0026 data.bounds.left \u003c= 0 \u0026\u0026 velocity \u003c 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.horizontal);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right \u003e= data.canvasSize.width \u0026\u0026 data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left \u003c= 0 \u0026\u0026 data.direction === \"left\") {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== \"bounce\" \u0026\u0026\n        data.outMode !== \"bounce-vertical\" \u0026\u0026\n        data.outMode !== \"bounceVertical\" \u0026\u0026\n        data.outMode !== \"split\") ||\n        (data.direction !== \"bottom\" \u0026\u0026 data.direction !== \"top\")) {\n        return;\n    }\n    if (data.bounds.bottom \u003c 0 \u0026\u0026 data.direction === \"top\") {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top \u003e data.canvasSize.height \u0026\u0026 data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === \"bottom\" \u0026\u0026 data.bounds.bottom \u003e= data.canvasSize.height \u0026\u0026 velocity \u003e 0) ||\n        (data.direction === \"top\" \u0026\u0026 data.bounds.top \u003c= 0 \u0026\u0026 velocity \u003c 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.vertical);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom \u003e= data.canvasSize.height \u0026\u0026 data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top \u003c= 0 \u0026\u0026 data.direction === \"top\") {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\n","import { calculateBounds, } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            \"bounce\",\n            \"bounce-vertical\",\n            \"bounce-horizontal\",\n            \"bounceVertical\",\n            \"bounceHorizontal\",\n            \"split\",\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { Vector, getDistances, isPointInside, } from \"tsparticles-engine\";\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"destroy\"];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"normal\":\n            case \"outside\":\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case \"inside\": {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                const { x: vx, y: vy } = particle.velocity;\n                if ((vx \u003c 0 \u0026\u0026 dx \u003e particle.moveCenter.radius) ||\n                    (vy \u003c 0 \u0026\u0026 dy \u003e particle.moveCenter.radius) ||\n                    (vx \u003e= 0 \u0026\u0026 dx \u003c -particle.moveCenter.radius) ||\n                    (vy \u003e= 0 \u0026\u0026 dy \u003c -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n","import { Vector, isPointInside, } from \"tsparticles-engine\";\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"none\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal \u0026\u0026\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical \u0026\u0026\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y \u003e 0 \u0026\u0026 particle.position.y \u003c= canvasSize.height + pRadius) ||\n                (particle.velocity.y \u003c 0 \u0026\u0026 particle.position.y \u003e= -pRadius) ||\n                (particle.velocity.x \u003e 0 \u0026\u0026 particle.position.x \u003c= canvasSize.width + pRadius) ||\n                (particle.velocity.x \u003c 0 \u0026\u0026 particle.position.x \u003e= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse \u0026\u0026\n                position.y \u003e canvasSize.height + pRadius \u0026\u0026\n                direction === \"bottom\") ||\n                (gravityOptions.inverse \u0026\u0026 position.y \u003c -pRadius \u0026\u0026 direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"tsparticles-engine\";\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"out\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"inside\": {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx \u003c= 0 \u0026\u0026 dx \u003e= 0) || (vy \u003c= 0 \u0026\u0026 dy \u003e= 0) || (vx \u003e= 0 \u0026\u0026 dx \u003c= 0) || (vy \u003e= 0 \u0026\u0026 dy \u003c= 0)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case \"outside\": {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case \"normal\": {\n                        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === \"right\" \u0026\u0026\n                            nextBounds.left \u003e canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === \"left\" \u0026\u0026 nextBounds.right \u003c -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === \"bottom\" \u0026\u0026\n                            nextBounds.top \u003e canvasSize.height + particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === \"top\" \u0026\u0026 nextBounds.bottom \u003c -particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { BounceOutMode } from \"./BounceOutMode\";\nimport { DestroyOutMode } from \"./DestroyOutMode\";\nimport { NoneOutMode } from \"./NoneOutMode\";\nimport { OutOutMode } from \"./OutOutMode\";\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n        this._updateOutMode = (particle, delta, outMode, direction) =\u003e {\n            for (const updater of this.updaters) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.updaters = [\n            new BounceOutMode(container),\n            new DestroyOutMode(container),\n            new OutOutMode(container),\n            new NoneOutMode(container),\n        ];\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed \u0026\u0026 !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, \"bottom\");\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, \"left\");\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, \"right\");\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, \"top\");\n    }\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"outModes\", (container) =\u003e new OutOfCanvasUpdater(container), refresh);\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value \u003e= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value \u003c= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateSize(particle, delta) {\n    const data = particle.size;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? 0) \u003e 0 \u0026\u0026 (data.loops ?? 0) \u003e (data.maxLoops ?? 0))) {\n        return;\n    }\n    const sizeVelocity = (data.velocity ?? 0) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) \u003e 0 \u0026\u0026 data.time \u003c (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) \u003e 0 \u0026\u0026 data.time \u003c (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value \u003e= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += sizeVelocity;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value \u003c= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= sizeVelocity;\n            }\n    }\n    if (data.velocity \u0026\u0026 decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { getRandom } from \"tsparticles-engine\";\nimport { updateSize } from \"./Utils\";\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed \u0026\u0026\n            !particle.spawning \u0026\u0026\n            particle.size.enable \u0026\u0026\n            ((particle.size.maxLoops ?? 0) \u003c= 0 ||\n                ((particle.size.maxLoops ?? 0) \u003e 0 \u0026\u0026 (particle.size.loops ?? 0) \u003c (particle.size.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        particle.size.loops = 0;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n","import { SizeUpdater } from \"./SizeUpdater\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"size\", () =\u003e new SizeUpdater(), refresh);\n}\n","import { loadBaseMover } from \"tsparticles-move-base\";\nimport { loadCircleShape } from \"tsparticles-shape-circle\";\nimport { loadColorUpdater } from \"tsparticles-updater-color\";\nimport { loadOpacityUpdater } from \"tsparticles-updater-opacity\";\nimport { loadOutModesUpdater } from \"tsparticles-updater-out-modes\";\nimport { loadSizeUpdater } from \"tsparticles-updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n","import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize;\n        const { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nimport { LinksShadow } from \"./LinksShadow\";\nimport { LinksTriangle } from \"./LinksTriangle\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor, } from \"tsparticles-engine\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Links } from \"./Options/Classes/Links\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = getDistances(pos1, pos2);\n    if (!warp || distance \u003c= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** 2 + warpDistances.y ** 2);\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this._setColor = (p1) =\u003e {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this.linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColor = undefined;\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    async interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x \u003c 0 || pos1.y \u003c 0 || pos1.x \u003e canvasSize.width || pos1.y \u003e canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? 0, warp = linkOpt1.warp, range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some((t) =\u003e t.destination === p2) ||\n                p2.links.some((t) =\u003e t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x \u003c 0 || pos2.y \u003c 0 || pos2.x \u003e canvasSize.width || pos2.y \u003e canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp \u0026\u0026 linkOpt2.warp);\n            if (distance \u003e optDistance) {\n                continue;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links ?? source?.lineLinked ?? source?.line_linked);\n        }\n    }\n    reset() {\n    }\n}\n","import { Linker } from \"./Linker\";\nexport async function loadLinksInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesLinks\", (container) =\u003e new Linker(container), refresh);\n}\n","import { drawLine, drawTriangle, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"tsparticles-engine\";\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) \u003c= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance \u003c= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance \u003c= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance \u003c= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 \u0026\u0026 pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) =\u003e a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) =\u003e t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n","import { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { drawLinkLine, drawLinkTriangle, setLinkFrequency } from \"./Utils\";\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._drawLinkLine = (p1, link) =\u003e {\n            const p1LinksOptions = p1.options.links;\n            if (!p1LinksOptions?.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            let opacity = link.opacity;\n            container.canvas.draw((ctx) =\u003e {\n                let colorLine;\n                const twinkle = p1.options.twinkle?.lines;\n                if (twinkle?.enable) {\n                    const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() \u003c twinkleFreq;\n                    if (twinkling \u0026\u0026 twinkleRgb) {\n                        colorLine = twinkleRgb;\n                        opacity = getRangeValue(twinkle.opacity);\n                    }\n                }\n                if (!colorLine) {\n                    const linkColor = p1LinksOptions.id !== undefined\n                        ? container.particles.linksColors.get(p1LinksOptions.id)\n                        : container.particles.linksColor;\n                    colorLine = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorLine) {\n                    return;\n                }\n                const width = p1.retina.linksWidth ?? 0, maxDistance = p1.retina.linksDistance ?? 0, { backgroundMask } = options;\n                drawLinkLine({\n                    context: ctx,\n                    width,\n                    begin: pos1,\n                    end: pos2,\n                    maxDistance,\n                    canvasSize: container.canvas.size,\n                    links: p1LinksOptions,\n                    backgroundMask: backgroundMask,\n                    colorLine,\n                    opacity,\n                });\n            });\n        };\n        this._drawLinkTriangle = (p1, link1, link2) =\u003e {\n            const linksOptions = p1.options.links;\n            if (!linksOptions?.enable) {\n                return;\n            }\n            const triangleOptions = linksOptions.triangles;\n            if (!triangleOptions.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) / 2;\n            if (opacityTriangle \u003c= 0) {\n                return;\n            }\n            container.canvas.draw((ctx) =\u003e {\n                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = p1.retina.linksDistance ?? 0;\n                if (getDistance(pos1, pos2) \u003e linksDistance ||\n                    getDistance(pos3, pos2) \u003e linksDistance ||\n                    getDistance(pos3, pos1) \u003e linksDistance) {\n                    return;\n                }\n                let colorTriangle = rangeColorToRgb(triangleOptions.color);\n                if (!colorTriangle) {\n                    const linkColor = linksOptions.id !== undefined\n                        ? container.particles.linksColors.get(linksOptions.id)\n                        : container.particles.linksColor;\n                    colorTriangle = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorTriangle) {\n                    return;\n                }\n                drawLinkTriangle({\n                    context: ctx,\n                    pos1,\n                    pos2,\n                    pos3,\n                    backgroundMask: options.backgroundMask,\n                    colorTriangle,\n                    opacityTriangle,\n                });\n            });\n        };\n        this._drawTriangles = (options, p1, link, p1Links) =\u003e {\n            const p2 = link.destination;\n            if (!(options.links?.triangles.enable \u0026\u0026 p2.options.links?.triangles.enable)) {\n                return;\n            }\n            const vertices = p2.links?.filter((t) =\u003e {\n                const linkFreq = this._getLinkFrequency(p2, t.destination);\n                return (p2.options.links \u0026\u0026\n                    linkFreq \u003c= p2.options.links.frequency \u0026\u0026\n                    p1Links.findIndex((l) =\u003e l.destination === t.destination) \u003e= 0);\n            });\n            if (!vertices?.length) {\n                return;\n            }\n            for (const vertex of vertices) {\n                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n                if (triangleFreq \u003e options.links.triangles.frequency) {\n                    continue;\n                }\n                this._drawLinkTriangle(p1, link, vertex);\n            }\n        };\n        this._getLinkFrequency = (p1, p2) =\u003e {\n            return setLinkFrequency([p1, p2], this._freqs.links);\n        };\n        this._getTriangleFrequency = (p1, p2, p3) =\u003e {\n            return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n        };\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        const { links, options } = particle;\n        if (!links || links.length \u003c= 0) {\n            return;\n        }\n        const p1Links = links.filter((l) =\u003e options.links \u0026\u0026 this._getLinkFrequency(particle, l.destination) \u003c= options.links.frequency);\n        for (const link of p1Links) {\n            this._drawTriangles(options, particle, link, p1Links);\n            if (link.opacity \u003e 0 \u0026\u0026 (particle.retina.linksWidth ?? 0) \u003e 0) {\n                this._drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;\n        retina.linksDistance = distance * ratio;\n        retina.linksWidth = width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n}\n","import { LinkInstance } from \"./LinkInstance\";\nclass LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return new LinkInstance(container);\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\nexport async function loadLinksPlugin(engine, refresh = true) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin, refresh);\n}\n","import { loadLinksInteraction } from \"./interaction\";\nimport { loadLinksPlugin } from \"./plugin\";\nexport async function loadParticlesLinksInteraction(engine, refresh = true) {\n    await loadLinksInteraction(engine, refresh);\n    await loadLinksPlugin(engine, refresh);\n}\nexport * from \"./Options/Classes/Links\";\nexport * from \"./Options/Classes/LinksShadow\";\nexport * from \"./Options/Classes/LinksTriangle\";\nexport * from \"./Options/Interfaces/ILinks\";\nexport * from \"./Options/Interfaces/ILinksShadow\";\nexport * from \"./Options/Interfaces/ILinksTriangle\";\n","export const options = {\n    background: {\n        color: \"#000000\",\n    },\n    particles: {\n        number: {\n            value: 100,\n        },\n        links: {\n            distance: 150,\n            enable: true,\n        },\n        move: {\n            enable: true,\n        },\n        size: {\n            value: 1,\n        },\n        shape: {\n            type: \"circle\",\n        },\n    },\n};\n","import { loadBasic } from \"tsparticles-basic\";\nimport { loadParticlesLinksInteraction } from \"tsparticles-interaction-particles-links\";\nimport { options } from \"./options\";\nexport async function loadLinksPreset(engine, refresh = true) {\n    await loadBasic(engine, false);\n    await loadParticlesLinksInteraction(engine, false);\n    await engine.addPreset(\"links\", options, refresh);\n}\n","import { tsParticles } from \"tsparticles-engine\";\nimport { loadLinksPreset } from \"tsparticles-preset-links\";\n\nwindow.addEventListener(\"load\", async () =\u003e {\n  await loadLinksPreset(tsParticles);\n  const particles = await tsParticles.load(\"particles\", {\n    preset: \"links\",\n    fullScreen: false,\n    themes: [\n      {\n        name: \"dark\",\n        options: {\n          particles: {\n            color: {\n              value: [\"#ffffff\", \"#008cd7\", \"#14141e\"],\n            },\n            line_linked: {\n              color: \"#ffffff\",\n            },\n          },\n        },\n      },\n      {\n        name: \"light\",\n        options: {\n          particles: {\n            color: {\n              value: [\"#000000\", \"#0000ff\", \"#808080\"],\n            },\n            line_linked: {\n              color: \"#000000\",\n            },\n          },\n        },\n      },\n    ],\n    background: {\n      opacity: 0,\n    },\n    particles: {\n      line_linked: {\n        opacity: 0.7,\n        width: 1,\n      },\n      number: {\n        value: 80,\n        density: {\n          enable: true,\n          height: 1000,\n          width: 1000,\n        },\n      },\n      move: {\n        attract: {\n          enable: false,\n          rotate: {\n            x: 600,\n            y: 1200,\n          },\n        },\n        direction: \"none\",\n        enable: true,\n        outModes: \"out\",\n        random: false,\n        speed: 1,\n        straight: false,\n      },\n      opacity: {\n        value: 0.8,\n        random: true,\n        anim: {\n          enable: false,\n          speed: 2,\n          opacity_min: 0.4,\n          sync: false,\n        },\n      },\n      size: {\n        animation: {\n          enable: true,\n          speed: 2,\n          sync: false,\n        },\n        value: {\n          min: 1,\n          max: 4,\n        },\n      },\n    },\n  });\n\n  const setTheme = (target: HTMLElement) =\u003e {\n    if (target.classList.contains(\"dark\")) {\n      particles.loadTheme(\"dark\");\n    } else {\n      particles.loadTheme(\"light\");\n    }\n  };\n\n  const themeChange = (mutationList: Array\u003cMutationRecord\u003e) =\u003e {\n    mutationList\n      .filter((r) =\u003e r.type === \"attributes\" \u0026\u0026 r.attributeName === \"class\")\n      .map((r) =\u003e r.target as HTMLElement)\n      .forEach(setTheme);\n  };\n  const observer = new MutationObserver(themeChange);\n  const target = document.querySelector(\"html\");\n  observer.observe(target, { attributes: true });\n\n  setTheme(target);\n});\n"],"mappings":"MAAO,IAAMA,EAAqB,YACrBC,GAAiB,cACjBC,GAAe,YACfC,GAAkB,eAClBC,GAAgB,aAChBC,GAAiB,cACjBC,GAAkB,aAClBC,GAAgB,WAChBC,GAAiB,YACjBC,GAAmB,cACnBC,GAAc,SACdC,GAAwB,mBACxBC,EAAc,sBCVpB,IAAMC,EAAN,MAAMC,CAAS,CAClB,YAAYC,EAAWC,EAAGC,EAAG,CAKzB,GAJA,KAAK,iBAAmB,CAACC,EAAOC,IAAW,CACvC,KAAK,EAAI,KAAK,IAAID,CAAK,EAAIC,EAC3B,KAAK,EAAI,KAAK,IAAID,CAAK,EAAIC,CAC/B,EACI,CAACC,EAASL,CAAS,GAAKA,EAAW,CACnC,KAAK,EAAIA,EAAU,EACnB,KAAK,EAAIA,EAAU,EACnB,IAAMM,EAAWN,EACjB,KAAK,EAAIM,EAAS,EAAIA,EAAS,EAAI,CACvC,SACSN,IAAc,QAAaC,IAAM,OACtC,KAAK,EAAID,EACT,KAAK,EAAIC,EACT,KAAK,EAAIC,GAAK,MAGd,OAAM,IAAI,MAAM,GAAGK,CAAW,qCAAqC,CAE3E,CACA,WAAW,QAAS,CAChB,OAAOR,EAAS,OAAO,EAAG,EAAG,CAAC,CAClC,CACA,IAAI,OAAQ,CACR,OAAO,KAAK,MAAM,KAAK,EAAG,KAAK,CAAC,CACpC,CACA,IAAI,MAAMI,EAAO,CACb,KAAK,iBAAiBA,EAAO,KAAK,MAAM,CAC5C,CACA,IAAI,QAAS,CACT,OAAO,KAAK,KAAK,KAAK,YAAY,CAAC,CACvC,CACA,IAAI,OAAOC,EAAQ,CACf,KAAK,iBAAiB,KAAK,MAAOA,CAAM,CAC5C,CACA,OAAO,MAAMI,EAAQ,CACjB,OAAOT,EAAS,OAAOS,EAAO,EAAGA,EAAO,EAAGA,EAAO,CAAC,CACvD,CACA,OAAO,OAAOC,EAAGR,EAAGC,EAAG,CACnB,OAAO,IAAIH,EAASU,EAAGR,EAAGC,CAAC,CAC/B,CACA,IAAIQ,EAAG,CACH,OAAOX,EAAS,OAAO,KAAK,EAAIW,EAAE,EAAG,KAAK,EAAIA,EAAE,EAAG,KAAK,EAAIA,EAAE,CAAC,CACnE,CACA,MAAMA,EAAG,CACL,KAAK,GAAKA,EAAE,EACZ,KAAK,GAAKA,EAAE,EACZ,KAAK,GAAKA,EAAE,CAChB,CACA,MAAO,CACH,OAAOX,EAAS,MAAM,IAAI,CAC9B,CACA,WAAWW,EAAG,CACV,OAAO,KAAK,IAAIA,CAAC,EAAE,MACvB,CACA,aAAaA,EAAG,CACZ,OAAO,KAAK,IAAIA,CAAC,EAAE,YAAY,CACnC,CACA,IAAIC,EAAG,CACH,OAAOZ,EAAS,OAAO,KAAK,EAAIY,EAAG,KAAK,EAAIA,EAAG,KAAK,EAAIA,CAAC,CAC7D,CACA,MAAMA,EAAG,CACL,KAAK,GAAKA,EACV,KAAK,GAAKA,EACV,KAAK,GAAKA,CACd,CACA,aAAc,CACV,OAAO,KAAK,GAAK,EAAI,KAAK,GAAK,CACnC,CACA,KAAKA,EAAG,CACJ,OAAOZ,EAAS,OAAO,KAAK,EAAIY,EAAG,KAAK,EAAIA,EAAG,KAAK,EAAIA,CAAC,CAC7D,CACA,OAAOA,EAAG,CACN,KAAK,GAAKA,EACV,KAAK,GAAKA,EACV,KAAK,GAAKA,CACd,CACA,WAAY,CACR,IAAMP,EAAS,KAAK,OAChBA,GAAU,GACV,KAAK,OAAO,EAAMA,CAAM,CAEhC,CACA,OAAOD,EAAO,CACV,OAAOJ,EAAS,OAAO,KAAK,EAAI,KAAK,IAAII,CAAK,EAAI,KAAK,EAAI,KAAK,IAAIA,CAAK,EAAG,KAAK,EAAI,KAAK,IAAIA,CAAK,EAAI,KAAK,EAAI,KAAK,IAAIA,CAAK,EAAG,CAAC,CACtI,CACA,MAAMS,EAAG,CACL,KAAK,EAAIA,EAAE,EACX,KAAK,EAAIA,EAAE,EACX,IAAMC,EAAMD,EACZ,KAAK,EAAIC,EAAI,EAAIA,EAAI,EAAI,CAC7B,CACA,IAAIH,EAAG,CACH,OAAOX,EAAS,OAAO,KAAK,EAAIW,EAAE,EAAG,KAAK,EAAIA,EAAE,EAAG,KAAK,EAAIA,EAAE,CAAC,CACnE,CACA,QAAQA,EAAG,CACP,KAAK,GAAKA,EAAE,EACZ,KAAK,GAAKA,EAAE,EACZ,KAAK,GAAKA,EAAE,CAChB,CACJ,ECtGO,IAAMI,EAAN,MAAMC,UAAeC,CAAS,CACjC,YAAYC,EAAWC,EAAG,CACtB,MAAMD,EAAWC,EAAG,CAAC,CACzB,CACA,WAAW,QAAS,CAChB,OAAOH,EAAO,OAAO,EAAG,CAAC,CAC7B,CACA,OAAO,MAAMI,EAAQ,CACjB,OAAOJ,EAAO,OAAOI,EAAO,EAAGA,EAAO,CAAC,CAC3C,CACA,OAAO,OAAOC,EAAGF,EAAG,CAChB,OAAO,IAAIH,EAAOK,EAAGF,CAAC,CAC1B,CACJ,ECZA,IAAIG,GAAU,KAAK,OAcZ,SAASC,GAAY,CACxB,OAAOC,EAAMC,GAAQ,EAAG,EAAG,EAAI,KAAK,CACxC,CACO,SAASD,EAAME,EAAKC,EAAKC,EAAK,CACjC,OAAO,KAAK,IAAI,KAAK,IAAIF,EAAKC,CAAG,EAAGC,CAAG,CAC3C,CACO,SAASC,GAAIC,EAAOC,EAAOC,EAASC,EAAS,CAChD,OAAO,KAAK,OAAOH,EAAQE,EAAUD,EAAQE,IAAYD,EAAUC,EAAQ,CAC/E,CACO,SAASC,EAAcC,EAAG,CAC7B,IAAMP,EAAMQ,EAAYD,CAAC,EACrBR,EAAMU,GAAYF,CAAC,EACvB,OAAIP,IAAQD,IACRA,EAAM,GAEHJ,EAAU,GAAKK,EAAMD,GAAOA,CACvC,CACO,SAASW,EAAcC,EAAO,CACjC,OAAOC,EAASD,CAAK,EAAIA,EAAQL,EAAcK,CAAK,CACxD,CACO,SAASF,GAAYE,EAAO,CAC/B,OAAOC,EAASD,CAAK,EAAIA,EAAQA,EAAM,GAC3C,CACO,SAASH,EAAYG,EAAO,CAC/B,OAAOC,EAASD,CAAK,EAAIA,EAAQA,EAAM,GAC3C,CACO,SAASE,EAAcC,EAAQH,EAAO,CACzC,GAAIG,IAAWH,GAAUA,IAAU,QAAaC,EAASE,CAAM,EAC3D,OAAOA,EAEX,IAAMf,EAAMU,GAAYK,CAAM,EAAGd,EAAMQ,EAAYM,CAAM,EACzD,OAAOH,IAAU,OACX,CACE,IAAK,KAAK,IAAIZ,EAAKY,CAAK,EACxB,IAAK,KAAK,IAAIX,EAAKW,CAAK,CAC5B,EACEE,EAAcd,EAAKC,CAAG,CAChC,CACO,SAASe,EAASC,EAAS,CAC9B,IAAMC,EAASD,EAAQ,OAAQ,CAAE,OAAAE,EAAQ,aAAAC,CAAa,EAAIC,EAAUH,CAAM,EACpE,CACE,OAAQA,EACR,aAAc,CAClB,EACEA,EACN,OAAgBP,EAATQ,EAAuBL,EAAcG,EAAQ,MAAOG,CAAY,EAAmBH,EAAQ,KAA1B,CAC5E,CACO,SAASK,EAAaC,EAAQC,EAAQ,CACzC,IAAMC,EAAKF,EAAO,EAAIC,EAAO,EAAGE,EAAKH,EAAO,EAAIC,EAAO,EACvD,MAAO,CAAE,GAAIC,EAAI,GAAIC,EAAI,SAAU,KAAK,KAAKD,GAAM,EAAIC,GAAM,CAAC,CAAE,CACpE,CACO,SAASC,EAAYJ,EAAQC,EAAQ,CACxC,OAAOF,EAAaC,EAAQC,CAAM,EAAE,QACxC,CACO,SAASI,GAA0BC,EAAWC,EAAUC,EAAQ,CACnE,GAAIlB,EAASgB,CAAS,EAClB,OAAQA,EAAY,KAAK,GAAM,IAEnC,OAAQA,EAAW,CACf,IAAK,MACD,MAAO,CAAC,KAAK,GAAK,EACtB,IAAK,YACD,MAAO,CAAC,KAAK,GAAK,EACtB,IAAK,QACD,MAAO,GACX,IAAK,eACD,OAAO,KAAK,GAAK,EACrB,IAAK,SACD,OAAO,KAAK,GAAK,EACrB,IAAK,cACD,MAAQ,GAAI,KAAK,GAAM,EAC3B,IAAK,OACD,OAAO,KAAK,GAChB,IAAK,WACD,MAAQ,GAAK,KAAK,GAAM,EAC5B,IAAK,SACD,OAAO,KAAK,MAAME,EAAO,EAAID,EAAS,EAAGC,EAAO,EAAID,EAAS,CAAC,EAClE,IAAK,UACD,OAAO,KAAK,MAAMA,EAAS,EAAIC,EAAO,EAAGD,EAAS,EAAIC,EAAO,CAAC,EAClE,QACI,OAAOnC,EAAU,EAAI,KAAK,GAAK,CACvC,CACJ,CACO,SAASoC,GAAwBH,EAAW,CAC/C,IAAMI,EAAeC,EAAO,OAC5B,OAAAD,EAAa,OAAS,EACtBA,EAAa,MAAQJ,EACdI,CACX,CAyBO,SAASE,GAAkCC,EAAM,CACpD,MAAO,CACH,EAAGA,EAAK,UAAU,GAAKC,EAAU,EAAID,EAAK,KAAK,MAC/C,EAAGA,EAAK,UAAU,GAAKC,EAAU,EAAID,EAAK,KAAK,MACnD,CACJ,CAQO,SAASE,GAAWC,EAAO,CAC9B,OAAOA,EAASA,EAAM,SAAS,GAAG,EAAI,WAAWA,CAAK,EAAI,IAAM,WAAWA,CAAK,EAAK,CACzF,CC9IA,IAAMC,GAAU,CACZ,MAAO,QAAQ,MACf,MAAO,QAAQ,MACf,KAAM,QAAQ,KACd,IAAK,QAAQ,IACb,QAAS,QAAQ,IACjB,QAAS,QAAQ,IACrB,EASO,SAASC,GAAY,CACxB,OAAOC,EACX,CAsBO,SAASC,GAAQ,CACpB,OAAO,OAAO,OAAW,KAAe,CAAC,QAAU,OAAO,OAAO,SAAa,KAAe,CAAC,OAAO,QACzG,CACO,SAASC,IAAgB,CAC5B,MAAO,CAACD,EAAM,GAAK,OAAO,WAAe,GAC7C,CACO,SAASE,GAAeC,EAAO,CAClC,GAAKF,GAAc,EAGnB,OAAO,WAAWE,CAAK,CAC3B,CACO,SAASC,GAAqBC,EAAU,CAC3C,GAAI,EAAAL,EAAM,GAAK,OAAO,iBAAqB,KAG3C,OAAO,IAAI,iBAAiBK,CAAQ,CACxC,CACO,SAASC,GAAUC,EAAOC,EAAO,CACpC,OAAOD,IAAUC,GAAUC,EAAQD,CAAK,GAAKA,EAAM,QAAQD,CAAK,EAAI,EACxE,CAQO,SAASG,GAAiBC,EAAO,CACpC,OAAO,KAAK,MAAMC,EAAU,EAAID,EAAM,MAAM,CAChD,CACO,SAASE,GAAcF,EAAOG,EAAOC,EAAW,GAAM,CACzD,OAAOJ,EAAMG,IAAU,QAAaC,EAAWD,EAAQH,EAAM,OAASD,GAAiBC,CAAK,CAAC,CACjG,CACO,SAASK,GAAcC,EAAOC,EAAMC,EAAQC,EAAQC,EAAW,CAClE,OAAOC,GAAgBC,GAAgBN,EAAOG,GAAU,CAAC,EAAGF,EAAMC,EAAQE,CAAS,CACvF,CACO,SAASC,GAAgBE,EAAQN,EAAMC,EAAQE,EAAW,CAC7D,IAAII,EAAS,GACb,OAAI,CAACJ,GAAaA,IAAc,YAC5BI,EAASD,EAAO,IAAMN,EAAK,OAASC,EAAO,GAE3CM,IAAW,CAACJ,GAAaA,IAAc,UACvCI,EAASD,EAAO,MAAQL,EAAO,GAE/BM,IAAW,CAACJ,GAAaA,IAAc,WACvCI,EAASD,EAAO,KAAON,EAAK,MAAQC,EAAO,GAE3CM,IAAW,CAACJ,GAAaA,IAAc,SACvCI,EAASD,EAAO,OAASL,EAAO,GAE7BM,CACX,CACO,SAASF,GAAgBN,EAAOG,EAAQ,CAC3C,MAAO,CACH,OAAQH,EAAM,EAAIG,EAClB,KAAMH,EAAM,EAAIG,EAChB,MAAOH,EAAM,EAAIG,EACjB,IAAKH,EAAM,EAAIG,CACnB,CACJ,CACO,SAASM,EAAWC,KAAgBC,EAAS,CAChD,QAAWC,KAAUD,EAAS,CAC1B,GAA4BC,GAAW,KACnC,SAEJ,GAAI,CAACC,EAASD,CAAM,EAAG,CACnBF,EAAcE,EACd,QACJ,CACA,IAAME,EAAgB,MAAM,QAAQF,CAAM,EACtCE,IAAkBD,EAASH,CAAW,GAAK,CAACA,GAAe,CAAC,MAAM,QAAQA,CAAW,GACrFA,EAAc,CAAC,EAEV,CAACI,IAAkBD,EAASH,CAAW,GAAK,CAACA,GAAe,MAAM,QAAQA,CAAW,KAC1FA,EAAc,CAAC,GAEnB,QAAWK,KAAOH,EAAQ,CACtB,GAAIG,IAAQ,YACR,SAEJ,IAAMC,EAAaJ,EAAQK,EAAQD,EAAWD,CAAG,EAAGG,EAAWR,EAC/DQ,EAASH,CAAG,EACRF,EAASI,CAAK,GAAK,MAAM,QAAQA,CAAK,EAChCA,EAAM,IAAKE,GAAMV,EAAWS,EAASH,CAAG,EAAGI,CAAC,CAAC,EAC7CV,EAAWS,EAASH,CAAG,EAAGE,CAAK,CAC7C,CACJ,CACA,OAAOP,CACX,CAwGO,SAASU,EAA0BC,EAAKC,EAAU,CACrD,OAAOC,EAAQF,CAAG,EAAIA,EAAI,IAAI,CAACG,EAAMC,IAAUH,EAASE,EAAMC,CAAK,CAAC,EAAIH,EAASD,EAAK,CAAC,CAC3F,CACO,SAASK,EAAyBL,EAAKI,EAAOE,EAAU,CAC3D,OAAOJ,EAAQF,CAAG,EAAIO,GAAcP,EAAKI,EAAOE,CAAQ,EAAIN,CAChE,CAIO,SAASQ,GAAkCC,EAASC,EAAS,CAChE,IAAMC,EAAaF,EAAQ,MAAOG,EAAmBH,EAAQ,UAAWI,EAAM,CAC1E,UAAWC,EAAcF,EAAiB,KAAK,EAAI,IACnD,OAAQA,EAAiB,OACzB,MAAOE,EAAcL,EAAQ,KAAK,EAAIC,EACtC,IAAKK,EAAYJ,CAAU,EAAID,EAC/B,IAAKM,GAAYL,CAAU,EAAID,EAC/B,MAAO,EACP,SAAUI,EAAcF,EAAiB,KAAK,EAC9C,KAAM,CACV,EACA,GAAIA,EAAiB,OAAQ,CAEzB,OADAC,EAAI,MAAQ,EAAIC,EAAcF,EAAiB,KAAK,EAC5CA,EAAiB,KAAM,CAC3B,IAAK,WACDC,EAAI,OAAS,aACb,MACJ,IAAK,WACDA,EAAI,OAAS,aACb,MACJ,IAAK,SACDA,EAAI,OAASI,EAAU,GAAK,GAAM,aAAe,aACjD,KACR,CACA,IAAMC,EAAaN,EAAiB,OAAS,OAC7C,OAAQA,EAAiB,WAAY,CACjC,IAAK,MACDC,EAAI,MAAQA,EAAI,IACZK,IACAL,EAAI,OAAS,cAEjB,MACJ,IAAK,MACDA,EAAI,MAAQA,EAAI,IACZK,IACAL,EAAI,OAAS,cAEjB,MACJ,IAAK,SACL,QACIA,EAAI,MAAQM,EAAcN,CAAG,EACzBK,IACAL,EAAI,OAASI,EAAU,GAAK,GAAM,aAAe,cAErD,KACR,CACJ,CACA,OAAAJ,EAAI,aAAeA,EAAI,MAChBA,CACX,CACA,SAASO,GAAkBC,EAAgBC,EAAY,CAEnD,GAAI,EADcD,EAAe,OAAS,WAC1B,CACZ,GAAM,CAAE,KAAME,EAAG,GAAGC,CAAK,EAAIH,EAC7B,OAAOG,CACX,CAEA,MADmB,MAAOH,EAEf,CACH,EAAIA,EAAe,EAAI,IAAOC,EAAW,MACzC,EAAID,EAAe,EAAI,IAAOC,EAAW,MAC7C,EAGO,CACH,MAAQD,EAAe,MAAQ,IAAOC,EAAW,MACjD,OAASD,EAAe,OAAS,IAAOC,EAAW,MACvD,CAER,CACO,SAASG,GAAYC,EAAUJ,EAAY,CAC9C,OAAOF,GAAkBM,EAAUJ,CAAU,CACjD,CAIO,SAASK,EAAUC,EAAK,CAC3B,OAAO,OAAOA,GAAQ,SAC1B,CACO,SAASC,EAASD,EAAK,CAC1B,OAAO,OAAOA,GAAQ,QAC1B,CACO,SAASE,EAASF,EAAK,CAC1B,OAAO,OAAOA,GAAQ,QAC1B,CACO,SAASG,GAAWH,EAAK,CAC5B,OAAO,OAAOA,GAAQ,UAC1B,CACO,SAASI,EAASJ,EAAK,CAC1B,OAAO,OAAOA,GAAQ,UAAYA,IAAQ,IAC9C,CACO,SAASK,EAAQL,EAAK,CACzB,OAAO,MAAM,QAAQA,CAAG,CAC5B,CC/UA,IAAMM,GAAmB,SAAUC,GAAgB,MAAOC,GAAgB,IAAI,IACvE,SAASC,GAAgBC,EAAS,CACrCF,GAAc,IAAIE,EAAQ,IAAKA,CAAO,CAC1C,CACA,SAASC,GAAQC,EAAGC,EAAG,EAAG,CAOtB,OANI,EAAI,IACJ,GAAK,GAEL,EAAI,IACJ,GAAK,GAEL,EAAI,EAAI,EACDD,GAAKC,EAAID,GAAK,EAAI,EAEzB,EAAI,EAAI,EACDC,EAEP,EAAI,EAAI,EACDD,GAAKC,EAAID,IAAM,EAAI,EAAI,GAAK,EAEhCA,CACX,CACA,SAASE,GAAaC,EAAO,CACzB,OAAW,CAAC,CAAEL,CAAO,IAAKF,GACtB,GAAIO,EAAM,WAAWL,EAAQ,YAAY,EACrC,OAAOA,EAAQ,YAAYK,CAAK,EAGxC,IAAMC,EAAiB,6CAA8CC,EAAWF,EAAM,QAAQC,EAAgB,CAACE,EAAG,EAAGC,EAAGC,EAAGC,IAChH,EAAI,EAAIF,EAAIA,EAAIC,EAAIA,GAAKC,IAAM,OAAYA,EAAIA,EAAI,GAC7D,EAAGC,EAAQ,yDAA0DC,EAASD,EAAM,KAAKL,CAAQ,EAClG,OAAOM,EACD,CACE,EAAGA,EAAO,CAAC,IAAM,OAAY,SAASA,EAAO,CAAC,EAAG,EAAE,EAAI,IAAO,EAC9D,EAAG,SAASA,EAAO,CAAC,EAAG,EAAE,EACzB,EAAG,SAASA,EAAO,CAAC,EAAG,EAAE,EACzB,EAAG,SAASA,EAAO,CAAC,EAAG,EAAE,CAC7B,EACE,MACV,CACO,SAASC,EAAgBT,EAAOU,EAAOC,EAAW,GAAM,CAC3D,GAAI,CAACX,EACD,OAEJ,IAAMY,EAAQC,EAASb,CAAK,EAAI,CAAE,MAAOA,CAAM,EAAIA,EACnD,GAAIa,EAASD,EAAM,KAAK,EACpB,OAAOE,GAAWF,EAAM,MAAOF,EAAOC,CAAQ,EAElD,GAAII,EAAQH,EAAM,KAAK,EACnB,OAAOH,EAAgB,CACnB,MAAOO,GAAcJ,EAAM,MAAOF,EAAOC,CAAQ,CACrD,CAAC,EAEL,OAAW,CAAC,CAAEhB,CAAO,IAAKF,GAAe,CACrC,IAAMwB,EAAMtB,EAAQ,iBAAiBiB,CAAK,EAC1C,GAAIK,EACA,OAAOA,CAEf,CACJ,CACO,SAASH,GAAWd,EAAOU,EAAOC,EAAW,GAAM,CACtD,GAAI,CAACX,EACD,OAEJ,IAAMY,EAAQC,EAASb,CAAK,EAAI,CAAE,MAAOA,CAAM,EAAIA,EACnD,GAAIa,EAASD,EAAM,KAAK,EACpB,OAAOA,EAAM,QAAUrB,GAAmB2B,GAAkB,EAAIC,GAAYP,EAAM,KAAK,EAE3F,GAAIG,EAAQH,EAAM,KAAK,EACnB,OAAOE,GAAW,CACd,MAAOE,GAAcJ,EAAM,MAAOF,EAAOC,CAAQ,CACrD,CAAC,EAEL,OAAW,CAAC,CAAEhB,CAAO,IAAKF,GAAe,CACrC,IAAMwB,EAAMtB,EAAQ,YAAYiB,CAAK,EACrC,GAAIK,EACA,OAAOA,CAEf,CACJ,CAKO,SAASG,GAAgBC,EAAOC,EAAOC,EAAW,GAAM,CAC3D,IAAMC,EAAMC,EAAgBJ,EAAOC,EAAOC,CAAQ,EAClD,OAAOC,EAAME,GAASF,CAAG,EAAI,MACjC,CACO,SAASE,GAASL,EAAO,CAC5B,IAAMM,EAAKN,EAAM,EAAI,IAAKO,EAAKP,EAAM,EAAI,IAAKQ,EAAKR,EAAM,EAAI,IAAKS,EAAM,KAAK,IAAIH,EAAIC,EAAIC,CAAE,EAAGE,EAAM,KAAK,IAAIJ,EAAIC,EAAIC,CAAE,EAAGG,EAAM,CAC5H,EAAG,EACH,GAAIF,EAAMC,GAAO,EACjB,EAAG,CACP,EACA,OAAID,IAAQC,IACRC,EAAI,EAAIA,EAAI,EAAI,IAAOF,EAAMC,IAAQD,EAAMC,IAAQD,EAAMC,IAAQ,EAAMD,EAAMC,GAC7EC,EAAI,EACAL,IAAOG,GACAF,EAAKC,IAAOC,EAAMC,GAClBC,EAAI,EAAIJ,IAAOE,EAAM,GAAOD,EAAKF,IAAOG,EAAMC,GAAO,GAAOJ,EAAKC,IAAOE,EAAMC,IAE7FC,EAAI,GAAK,IACTA,EAAI,GAAK,IACTA,EAAI,GAAK,GACLA,EAAI,EAAI,IACRA,EAAI,GAAK,KAETA,EAAI,GAAK,MACTA,EAAI,GAAK,KAENA,CACX,CAIO,SAASC,GAAYC,EAAO,CAC/B,OAAOC,GAAaD,CAAK,CAC7B,CACO,SAASE,EAASC,EAAK,CAC1B,IAAMC,EAAS,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,CAAE,EAAGC,EAAa,CAC9C,EAAGF,EAAI,EAAI,IACX,EAAGA,EAAI,EAAI,IACX,EAAGA,EAAI,EAAI,GACf,EACA,GAAI,CAACE,EAAW,EACZD,EAAO,EAAIA,EAAO,EAAIA,EAAO,EAAIC,EAAW,MAE3C,CACD,IAAMC,EAAID,EAAW,EAAI,GACnBA,EAAW,GAAK,EAAIA,EAAW,GAC/BA,EAAW,EAAIA,EAAW,EAAIA,EAAW,EAAIA,EAAW,EAAGE,EAAI,EAAIF,EAAW,EAAIC,EACxFF,EAAO,EAAII,GAAQD,EAAGD,EAAGD,EAAW,EAAI,EAAI,CAAC,EAC7CD,EAAO,EAAII,GAAQD,EAAGD,EAAGD,EAAW,CAAC,EACrCD,EAAO,EAAII,GAAQD,EAAGD,EAAGD,EAAW,EAAI,EAAI,CAAC,CACjD,CACA,OAAAD,EAAO,EAAI,KAAK,MAAMA,EAAO,EAAI,GAAG,EACpCA,EAAO,EAAI,KAAK,MAAMA,EAAO,EAAI,GAAG,EACpCA,EAAO,EAAI,KAAK,MAAMA,EAAO,EAAI,GAAG,EAC7BA,CACX,CACO,SAASK,GAAWC,EAAM,CAC7B,IAAMC,EAAYT,EAASQ,CAAI,EAC/B,MAAO,CACH,EAAGA,EAAK,EACR,EAAGC,EAAU,EACb,EAAGA,EAAU,EACb,EAAGA,EAAU,CACjB,CACJ,CACO,SAASC,GAAkBC,EAAK,CACnC,IAAMC,EAAWD,GAAO,EACxB,MAAO,CACH,EAAG,KAAK,MAAME,EAAcC,EAAcF,EAAU,GAAG,CAAC,CAAC,EACzD,EAAG,KAAK,MAAMC,EAAcC,EAAcF,EAAU,GAAG,CAAC,CAAC,EACzD,EAAG,KAAK,MAAMC,EAAcC,EAAcF,EAAU,GAAG,CAAC,CAAC,CAC7D,CACJ,CACO,SAASG,EAAgBC,EAAOC,EAAS,CAC5C,MAAO,QAAQD,EAAM,CAAC,KAAKA,EAAM,CAAC,KAAKA,EAAM,CAAC,KAAKC,GAAW,CAAC,GACnE,CACO,SAASC,GAAgBF,EAAOC,EAAS,CAC5C,MAAO,QAAQD,EAAM,CAAC,KAAKA,EAAM,CAAC,MAAMA,EAAM,CAAC,MAAMC,GAAW,CAAC,GACrE,CACO,SAASE,GAASC,EAAQC,EAAQC,EAAOC,EAAO,CACnD,IAAIC,EAAOJ,EAAQK,EAAOJ,EAC1B,OAAIG,EAAK,IAAM,SACXA,EAAOxB,EAASoB,CAAM,GAEtBK,EAAK,IAAM,SACXA,EAAOzB,EAASqB,CAAM,GAEnB,CACH,EAAGK,GAAIF,EAAK,EAAGC,EAAK,EAAGH,EAAOC,CAAK,EACnC,EAAGG,GAAIF,EAAK,EAAGC,EAAK,EAAGH,EAAOC,CAAK,EACnC,EAAGG,GAAIF,EAAK,EAAGC,EAAK,EAAGH,EAAOC,CAAK,CACvC,CACJ,CACO,SAASI,GAAaC,EAAIC,EAAIC,EAAW,CAC5C,GAAIA,IAAcC,GACd,OAAOrB,GAAkB,EAExB,GAAIoB,IAAcE,GAAe,CAClC,IAAMC,EAAcL,EAAG,aAAa,GAAKA,EAAG,eAAe,EAAGM,EAAYL,GAAI,aAAa,GAAKA,GAAI,eAAe,EACnH,GAAII,GAAeC,GAAaL,EAC5B,OAAOV,GAASc,EAAaC,EAAWN,EAAG,UAAU,EAAGC,EAAG,UAAU,CAAC,EAErE,CACD,IAAMM,EAAWF,GAAeC,EAChC,GAAIC,EACA,OAAOnC,EAASmC,CAAQ,CAEhC,CACJ,KAEI,QAAOL,CAEf,CACO,SAASM,GAAmBC,EAAUC,EAAOC,EAAS,CACzD,IAAMvB,EAAQwB,EAASH,CAAQ,EAAIA,EAAWA,EAAS,MACvD,OAAIrB,IAAUe,GACNQ,EACOE,EAAgB,CACnB,MAAOzB,CACX,CAAC,EAEDsB,EACOP,GAEJC,GAEFhB,IAAUgB,GACRA,GAGAS,EAAgB,CACnB,MAAOzB,CACX,CAAC,CAET,CACO,SAAS0B,GAAoBC,EAAW,CAC3C,OAAOA,IAAc,OACf,CACE,EAAGA,EAAU,EAAE,MACf,EAAGA,EAAU,EAAE,MACf,EAAGA,EAAU,EAAE,KACnB,EACE,MACV,CACO,SAASC,GAAuB3C,EAAK4C,EAAkBC,EAAc,CACxE,IAAMC,EAAW,CACb,EAAG,CACC,OAAQ,GACR,MAAO9C,EAAI,CACf,EACA,EAAG,CACC,OAAQ,GACR,MAAOA,EAAI,CACf,EACA,EAAG,CACC,OAAQ,GACR,MAAOA,EAAI,CACf,CACJ,EACA,OAAI4C,IACAG,GAAkBD,EAAS,EAAGF,EAAiB,EAAGC,CAAY,EAC9DE,GAAkBD,EAAS,EAAGF,EAAiB,EAAGC,CAAY,EAC9DE,GAAkBD,EAAS,EAAGF,EAAiB,EAAGC,CAAY,GAE3DC,CACX,CACA,SAASC,GAAkBC,EAAYC,EAAgBJ,EAAc,CACjEG,EAAW,OAASC,EAAe,OAC/BD,EAAW,QACXA,EAAW,SAAYE,EAAcD,EAAe,KAAK,EAAI,IAAOJ,EACpEG,EAAW,MAAQ,EAAIE,EAAcD,EAAe,KAAK,EACzDD,EAAW,OAAS,aACpBA,EAAW,MAAQ,EACnBA,EAAW,SAAWE,EAAcD,EAAe,KAAK,EACxDD,EAAW,KAAO,EAClBA,EAAW,UAAYE,EAAcD,EAAe,KAAK,EAAI,IACxDA,EAAe,OAChBD,EAAW,UAAYG,EAAU,EACjCH,EAAW,OAASG,EAAU,GAElCH,EAAW,aAAeA,EAAW,OAGrCA,EAAW,SAAW,CAE9B,CC9QO,SAASI,GAASC,EAASC,EAAOC,EAAK,CAC1CF,EAAQ,UAAU,EAClBA,EAAQ,OAAOC,EAAM,EAAGA,EAAM,CAAC,EAC/BD,EAAQ,OAAOE,EAAI,EAAGA,EAAI,CAAC,EAC3BF,EAAQ,UAAU,CACtB,CACO,SAASG,GAAaH,EAASI,EAAIC,EAAIC,EAAI,CAC9CN,EAAQ,UAAU,EAClBA,EAAQ,OAAOI,EAAG,EAAGA,EAAG,CAAC,EACzBJ,EAAQ,OAAOK,EAAG,EAAGA,EAAG,CAAC,EACzBL,EAAQ,OAAOM,EAAG,EAAGA,EAAG,CAAC,EACzBN,EAAQ,UAAU,CACtB,CACO,SAASO,GAAUP,EAASQ,EAAWC,EAAW,CACrDT,EAAQ,UAAYS,GAAa,gBACjCT,EAAQ,SAAS,EAAG,EAAGQ,EAAU,MAAOA,EAAU,MAAM,CAC5D,CACO,SAASE,GAAWV,EAASQ,EAAWG,EAAOC,EAAS,CACtDD,IAGLX,EAAQ,YAAcY,EACtBZ,EAAQ,UAAUW,EAAO,EAAG,EAAGH,EAAU,MAAOA,EAAU,MAAM,EAChER,EAAQ,YAAc,EAC1B,CACO,SAASa,GAAMb,EAASQ,EAAW,CACtCR,EAAQ,UAAU,EAAG,EAAGQ,EAAU,MAAOA,EAAU,MAAM,CAC7D,CACO,SAASM,GAAaC,EAAM,CAC/B,GAAM,CAAE,UAAAC,EAAW,QAAAhB,EAAS,SAAAiB,EAAU,MAAAC,EAAO,YAAAC,EAAa,eAAAC,EAAgB,UAAAC,EAAW,OAAAC,EAAQ,QAAAV,EAAS,OAAAW,EAAQ,UAAAC,CAAW,EAAIT,EACvHU,EAAMR,EAAS,YAAY,EAAGS,EAAQT,EAAS,UAAYA,EAAS,aAAeA,EAAS,SAAS,MAAQ,GAAIU,EAAa,CAChI,IAAK,KAAK,IAAID,CAAK,EACnB,IAAK,KAAK,IAAIA,CAAK,CACvB,EAAGE,EAAgB,CACf,EAAGD,EAAW,KAAOH,EAAU,GAAK,GACpC,EAAGG,EAAW,KAAOH,EAAU,GAAK,GACpC,EAAG,CAACG,EAAW,KAAOH,EAAU,GAAK,GACrC,EAAGG,EAAW,KAAOH,EAAU,GAAK,EACxC,EACAxB,EAAQ,aAAa4B,EAAc,EAAGA,EAAc,EAAGA,EAAc,EAAGA,EAAc,EAAGH,EAAI,EAAGA,EAAI,CAAC,EACrGzB,EAAQ,UAAU,EACdoB,IACApB,EAAQ,yBAA2BqB,GAEvC,IAAMQ,EAAcZ,EAAS,YACzBM,EAAO,QAAUM,IACjB7B,EAAQ,WAAauB,EAAO,KAC5BvB,EAAQ,YAAc8B,EAAgBD,CAAW,EACjD7B,EAAQ,cAAgBuB,EAAO,OAAO,EACtCvB,EAAQ,cAAgBuB,EAAO,OAAO,GAEtCJ,EAAY,OACZnB,EAAQ,UAAYmB,EAAY,MAEpC,IAAMY,EAAcd,EAAS,aAAe,EAC5CjB,EAAQ,UAAY+B,EAChBZ,EAAY,SACZnB,EAAQ,YAAcmB,EAAY,QAEtCa,GAAUhB,EAAWhB,EAASiB,EAAUK,EAAQV,EAASM,CAAK,EAC1Da,EAAc,GACd/B,EAAQ,OAAO,EAEfiB,EAAS,OACTjB,EAAQ,UAAU,EAElBiB,EAAS,MACTjB,EAAQ,KAAK,EAEjBiC,GAAqBjB,EAAWhB,EAASiB,EAAUK,EAAQV,EAASM,CAAK,EACzElB,EAAQ,yBAA2B,cACnCA,EAAQ,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,CACzC,CACO,SAASgC,GAAUhB,EAAWhB,EAASiB,EAAUK,EAAQV,EAASM,EAAO,CAC5E,GAAI,CAACD,EAAS,MACV,OAEJ,IAAMiB,EAASlB,EAAU,QAAQ,IAAIC,EAAS,KAAK,EAC9CiB,GAGLA,EAAO,KAAKlC,EAASiB,EAAUK,EAAQV,EAASM,EAAOF,EAAU,OAAO,UAAU,CACtF,CACO,SAASiB,GAAqBjB,EAAWhB,EAASiB,EAAUK,EAAQV,EAASM,EAAO,CACvF,GAAI,CAACD,EAAS,MACV,OAEJ,IAAMiB,EAASlB,EAAU,QAAQ,IAAIC,EAAS,KAAK,EAC/C,CAACiB,GAAU,CAACA,EAAO,aAGvBA,EAAO,YAAYlC,EAASiB,EAAUK,EAAQV,EAASM,EAAOF,EAAU,OAAO,UAAU,CAC7F,CACO,SAASmB,GAAWnC,EAASoC,EAAQlB,EAAO,CAC1CkB,EAAO,MAGZA,EAAO,KAAKpC,EAASkB,CAAK,CAC9B,CACO,SAASmB,GAAmBrC,EAASoC,EAAQnB,EAAUC,EAAO,CAC5DkB,EAAO,cAGZA,EAAO,aAAapC,EAASiB,EAAUC,CAAK,CAChD,CACO,SAASoB,GAASC,EAAOC,EAAMC,EAAO,CACzC,MAAO,CACH,EAAGF,EAAM,EACT,EAAGA,EAAM,EACT,EAAGA,EAAM,GAAKC,IAAS,SAAW,GAAK,GAAKC,CAChD,CACJ,CC5GA,SAASC,GAAkBC,EAAQC,EAAWC,EAAK,CAC/C,IAAMC,EAAWF,EAAUC,CAAG,EAC1BC,IAAa,SACbH,EAAOE,CAAG,GAAKF,EAAOE,CAAG,GAAK,GAAKC,EAE3C,CACO,IAAMC,GAAN,KAAa,CAChB,YAAYC,EAAW,CACnB,KAAK,UAAYA,EACjB,KAAK,uBAA0BC,GAAa,CACxC,QAAWC,KAAW,KAAK,kBACvBA,EAAQ,WAAaA,EAAQ,UAAUD,CAAQ,CAEvD,EACA,KAAK,sBAAwB,CAACE,EAAKF,EAAUG,EAAQC,EAAUC,EAAaC,IAAc,CACtF,QAAWL,KAAW,KAAK,iBAAkB,CACzC,GAAIA,EAAQ,eAAgB,CACxB,GAAM,CAAE,KAAAM,EAAM,OAAAC,CAAO,EAAIP,EAAQ,eAAeD,EAAUE,EAAKC,EAAQC,CAAQ,EAC3EG,IACAF,EAAY,KAAOE,GAEnBC,IACAH,EAAY,OAASG,EAE7B,CACA,GAAIP,EAAQ,mBAAoB,CAC5B,IAAMQ,EAAmBR,EAAQ,mBAAmBD,CAAQ,EAC5D,QAAWJ,KAAOa,EACdhB,GAAkBa,EAAWG,EAAkBb,CAAG,CAE1D,CACAK,EAAQ,YAAcA,EAAQ,WAAWD,CAAQ,CACrD,CACJ,EACA,KAAK,oBAAsB,IAAM,CAC7B,QAAWU,KAAU,KAAK,eACtBA,EAAO,QAAUA,EAAO,OAAO,CAEvC,EACA,KAAK,yBAA4BV,GAAa,CAC1C,IAAIW,EAAQC,EACZ,QAAWF,KAAU,KAAK,cAOtB,GANI,CAACC,GAAUD,EAAO,oBAClBC,EAASE,GAAgBH,EAAO,kBAAkBV,CAAQ,CAAC,GAE3D,CAACY,GAAUF,EAAO,sBAClBE,EAASC,GAAgBH,EAAO,oBAAoBV,CAAQ,CAAC,GAE7DW,GAAUC,EACV,MAGR,MAAO,CAACD,EAAQC,CAAM,CAC1B,EACA,KAAK,WAAa,IAAM,CACpB,IAAME,EAAU,KAAK,UAAU,cAAeC,EAAQD,EAAQ,eAAe,MAAOE,EAAQD,EAAM,MAAOE,EAAWC,EAAgBF,CAAK,EACzI,GAAIC,EAAU,CACV,IAAME,EAAa,CACf,GAAGF,EACH,EAAGF,EAAM,OACb,EACA,KAAK,iBAAmBK,EAAgBD,EAAYA,EAAW,CAAC,CACpE,CACJ,EACA,KAAK,WAAa,IAAM,CACpB,IAAME,EAAU,KAAK,QAASP,EAAU,KAAK,UAAU,cACvD,GAAKO,EAGL,CAAI,KAAK,aACL,KAAK,eAAiBC,EAAW,CAAC,EAAGD,EAAQ,KAAK,EAClD,KAAK,oBAAoB,GAGzB,KAAK,oBAAoB,EAE7B,QAAWzB,KAAOkB,EAAQ,MAAO,CAC7B,GAAI,CAAClB,GAAO,CAACkB,EAAQ,MACjB,SAEJ,IAAMS,EAAQT,EAAQ,MAAMlB,CAAG,EAC1B2B,GAGLF,EAAQ,MAAM,YAAYzB,EAAK2B,EAAO,WAAW,CACrD,EACJ,EACA,KAAK,WAAa,SAAY,CAC1B,IAAMT,EAAU,KAAK,UAAU,cAAeU,EAAQV,EAAQ,UAAU,KAAK,MAAOW,EAAYD,EAAM,KACtG,GAAKA,EAAM,OAGX,GAAIC,EAAU,MAAO,CACjB,IAAMC,EAAYR,EAAgBO,EAAU,KAAK,EACjD,GAAI,CAACC,EACD,OAEJ,IAAMF,EAAQV,EAAQ,UAAU,KAAK,MACrC,KAAK,WAAa,CACd,MAAO,CACH,GAAGY,CACP,EACA,QAAS,EAAIF,EAAM,MACvB,CACJ,MAEI,MAAM,IAAI,QAAQ,CAACG,EAASC,IAAW,CACnC,GAAI,CAACH,EAAU,MACX,OAEJ,IAAMI,EAAM,SAAS,cAAc,KAAK,EACxCA,EAAI,iBAAiB,OAAQ,IAAM,CAC/B,KAAK,WAAa,CACd,MAAOA,EACP,QAAS,EAAIL,EAAM,MACvB,EACAG,EAAQ,CACZ,CAAC,EACDE,EAAI,iBAAiB,QAAUC,GAAQ,CACnCF,EAAOE,EAAI,KAAK,CACpB,CAAC,EACDD,EAAI,IAAMJ,EAAU,KACxB,CAAC,CAET,EACA,KAAK,WAAcM,GAAc,CAC7B,KAAK,KAAM7B,GAAQ8B,GAAU9B,EAAK,KAAK,KAAM6B,CAAS,CAAC,CAC3D,EACA,KAAK,YAAc,CAACE,EAAOC,IAAY,CACnC,KAAK,KAAMhC,GAAQiC,GAAWjC,EAAK,KAAK,KAAM+B,EAAOC,CAAO,CAAC,CACjE,EACA,KAAK,aAAe,IAAM,CACtB,IAAMb,EAAU,KAAK,QAChBA,IAGL,KAAK,sBAAuBe,GAAaA,EAAS,WAAW,CAAC,EAC9D,KAAK,WAAW,EAChB,KAAK,eAAe,EACpB,KAAK,sBAAuBA,GAAaA,EAAS,QAAQf,EAAS,CAAE,WAAY,EAAK,CAAC,CAAC,EAC5F,EACA,KAAK,oBAAsB,IAAM,CAC7B,IAAMA,EAAU,KAAK,QAASgB,EAAgB,KAAK,eACnD,GAAI,EAAEhB,GAAWgB,GACb,OAEJ,IAAMC,EAAQjB,EAAQ,MACtBiB,EAAM,SAAWD,EAAc,SAC/BC,EAAM,OAASD,EAAc,OAC7BC,EAAM,IAAMD,EAAc,IAC1BC,EAAM,KAAOD,EAAc,KAC3BC,EAAM,MAAQD,EAAc,MAC5BC,EAAM,OAASD,EAAc,MACjC,EACA,KAAK,sBAAyBE,GAAa,CAClC,KAAK,mBAGVA,EAAS,KAAK,iBAAiB,CACnC,EACA,KAAK,oBAAsB,IAAM,CAC7B,IAAMlB,EAAU,KAAK,QACrB,GAAI,CAACA,EACD,OAEJ,IAAMmB,EAAW,YAAaF,EAAQjB,EAAQ,MAC9CiB,EAAM,YAAY,WAAY,QAASE,CAAQ,EAC/CF,EAAM,YAAY,UAAW,KAAK,UAAU,cAAc,WAAW,OAAO,SAAS,EAAE,EAAGE,CAAQ,EAClGF,EAAM,YAAY,MAAO,IAAKE,CAAQ,EACtCF,EAAM,YAAY,OAAQ,IAAKE,CAAQ,EACvCF,EAAM,YAAY,QAAS,OAAQE,CAAQ,EAC3CF,EAAM,YAAY,SAAU,OAAQE,CAAQ,CAChD,EACA,KAAK,KAAO,CACR,OAAQ,EACR,MAAO,CACX,EACA,KAAK,SAAW,KAChB,KAAK,WAAa,GAClB,KAAK,iBAAmB,CAAC,EACzB,KAAK,kBAAoB,CAAC,EAC1B,KAAK,eAAiB,CAAC,EACvB,KAAK,cAAgB,CAAC,CAC1B,CACA,IAAI,aAAc,CACd,OAAO,KAAK,UAAU,cAAc,WAAW,MACnD,CACA,OAAQ,CACJ,IAAM1B,EAAU,KAAK,UAAU,cAAeU,EAAQV,EAAQ,UAAU,KAAK,MAAOW,EAAY,KAAK,WACjGX,EAAQ,eAAe,OACvB,KAAK,MAAM,EAENU,EAAM,QAAUA,EAAM,OAAS,GAAKC,EACrCA,EAAU,MACV,KAAK,WAAWL,EAAgBK,EAAU,MAAOA,EAAU,OAAO,CAAC,EAE9DA,EAAU,OACf,KAAK,YAAYA,EAAU,MAAOA,EAAU,OAAO,EAIvD,KAAK,KAAMvB,GAAQ,CACfuC,GAAMvC,EAAK,KAAK,IAAI,CACxB,CAAC,CAET,CACA,SAAU,CAEN,GADA,KAAK,KAAK,EACN,KAAK,WAAY,CACjB,IAAMmB,EAAU,KAAK,QACrBA,GAAWA,EAAQ,OAAO,CAC9B,MAEI,KAAK,oBAAoB,EAE7B,KAAK,iBAAmB,CAAC,EACzB,KAAK,kBAAoB,CAAC,EAC1B,KAAK,eAAiB,CAAC,EACvB,KAAK,cAAgB,CAAC,CAC1B,CACA,KAAKqB,EAAI,CACL,IAAMxC,EAAM,KAAK,SACjB,GAAKA,EAGL,OAAOwC,EAAGxC,CAAG,CACjB,CACA,aAAaF,EAAU2C,EAAO,CAC1B,GAAI3C,EAAS,UAAYA,EAAS,UAC9B,OAEJ,IAAMG,EAASH,EAAS,UAAU,EAClC,GAAIG,GAAU,EACV,OAEJ,IAAMyC,EAAU5C,EAAS,aAAa,EAAG6C,EAAU7C,EAAS,eAAe,GAAK4C,EAC5E,CAACjC,EAAQC,CAAM,EAAI,KAAK,yBAAyBZ,CAAQ,EACxDW,IACDA,EAASiC,GAERhC,IACDA,EAASiC,GAET,GAAClC,GAAU,CAACC,IAGhB,KAAK,KAAMV,GAAQ,CACf,IAAMH,EAAY,KAAK,UAAWe,EAAUf,EAAU,cAAe+C,EAAgB9C,EAAS,QAAQ,OAAQ+C,GAAkB,EAAI/C,EAAS,eAAiB8C,EAAc,YAAaZ,EAAUlC,EAAS,OAAO,SAAWA,EAAS,SAAS,OAAS,EAAGgD,EAAgBhD,EAAS,eAAiBkC,EAAS9B,EAAW8B,EAAUa,EAAgBE,EAAiBD,EAAgBD,EAAgBzC,EAAY,CAAC,EAAGD,EAAc,CAC/Z,KAAMM,EAASuC,GAAgBvC,EAAQP,CAAQ,EAAI,MACvD,EACAC,EAAY,OAASO,EAASsC,GAAgBtC,EAAQqC,CAAc,EAAI5C,EAAY,KACpF,KAAK,sBAAsBH,EAAKF,EAAUG,EAAQC,EAAUC,EAAaC,CAAS,EAClF6C,GAAa,CACT,UAAApD,EACA,QAASG,EACT,SAAAF,EACA,MAAA2C,EACA,YAAAtC,EACA,eAAgBS,EAAQ,eAAe,OACvC,UAAWA,EAAQ,eAAe,UAClC,OAAQX,GAAU,EAAIH,EAAS,eAAiB8C,EAAc,SAC9D,QAAS1C,EACT,OAAQJ,EAAS,QAAQ,OACzB,UAAAM,CACJ,CAAC,EACD,KAAK,uBAAuBN,CAAQ,CACxC,CAAC,CACL,CACA,mBAAmBU,EAAQV,EAAU2C,EAAO,CACxC,KAAK,KAAMzC,GAAQkD,GAAmBlD,EAAKQ,EAAQV,EAAU2C,CAAK,CAAC,CACvE,CACA,WAAWjC,EAAQiC,EAAO,CACtB,KAAK,KAAMzC,GAAQmD,GAAWnD,EAAKQ,EAAQiC,CAAK,CAAC,CACrD,CACA,MAAM,MAAO,CACT,KAAK,sBAAuBW,GAAQA,EAAI,WAAW,CAAC,EACpD,KAAK,kBAAoBC,GAAsBC,GAAY,CACvD,QAAWC,KAAUD,EACbC,EAAO,OAAS,cAAgBA,EAAO,gBAAkB,SACzD,KAAK,aAAa,CAG9B,CAAC,EACD,KAAK,OAAO,EACZ,KAAK,WAAW,EAChB,KAAK,WAAW,EAChB,GAAI,CACA,MAAM,KAAK,WAAW,CAC1B,OACO,EAAG,CACNC,EAAU,EAAE,MAAM,CAAC,CACvB,CACA,KAAK,eAAe,EACpB,KAAK,sBAAuBJ,GAAQ,CAC3B,KAAK,SAGVA,EAAI,QAAQ,KAAK,QAAS,CAAE,WAAY,EAAK,CAAC,CAClD,CAAC,EACD,KAAK,aAAa,EAClB,KAAK,YAAY,EACjB,KAAK,MAAM,CACf,CACA,gBAAiB,CACb,IAAMxC,EAAU,KAAK,UAAU,cAAe6C,EAAa7C,EAAQ,WAAYO,EAAU,KAAK,QAC9F,GAAI,CAACA,EACD,OAEJ,IAAMuC,EAAevC,EAAQ,MAC7B,GAAKuC,EAGL,IAAID,EAAW,MAAO,CAClB,IAAM3C,EAAQE,EAAgByC,EAAW,KAAK,EAC9CC,EAAa,gBAAkB5C,EAAQI,EAAgBJ,EAAO2C,EAAW,OAAO,EAAI,EACxF,MAEIC,EAAa,gBAAkB,GAEnCA,EAAa,gBAAkBD,EAAW,OAAS,GACnDC,EAAa,mBAAqBD,EAAW,UAAY,GACzDC,EAAa,iBAAmBD,EAAW,QAAU,GACrDC,EAAa,eAAiBD,EAAW,MAAQ,GACrD,CACA,aAAc,CACV,KAAK,eAAiB,CAAC,EACvB,OAAW,CAAC,CAAEjD,CAAM,IAAK,KAAK,UAAU,QAChCA,EAAO,QACP,KAAK,eAAe,KAAKA,CAAM,GAE/BA,EAAO,mBAAqBA,EAAO,sBACnC,KAAK,cAAc,KAAKA,CAAM,CAG1C,CACA,cAAe,CACX,KAAK,iBAAmB,CAAC,EACzB,KAAK,kBAAoB,CAAC,EAC1B,QAAWT,KAAW,KAAK,UAAU,UAAU,SACvCA,EAAQ,WACR,KAAK,kBAAkB,KAAKA,CAAO,GAEnCA,EAAQ,gBAAkBA,EAAQ,oBAAsBA,EAAQ,aAChE,KAAK,iBAAiB,KAAKA,CAAO,CAG9C,CACA,WAAW4D,EAAQ,CACX,KAAK,YAAc,KAAK,SACxB,KAAK,QAAQ,OAAO,EAExB,KAAK,WACDA,EAAO,SAAWC,KAAsBD,EAAO,QACzCA,EAAO,QAAQC,CAAkB,IAAM,OACvC,KAAK,WACf,KAAK,QAAUD,EACf,KAAK,QAAQ,WAAa,OAC1B,KAAK,eAAiBvC,EAAW,CAAC,EAAG,KAAK,QAAQ,KAAK,EACvD,KAAK,KAAK,OAASuC,EAAO,aAC1B,KAAK,KAAK,MAAQA,EAAO,YACzB,KAAK,SAAW,KAAK,QAAQ,WAAW,IAAI,EAC5C,KAAK,sBAAuBP,GAAQ,CAC3B,KAAK,SAGVA,EAAI,QAAQ,KAAK,QAAS,CAAE,WAAY,EAAK,CAAC,CAClD,CAAC,EACD,KAAK,UAAU,OAAO,KAAK,EAC3B,KAAK,eAAe,CACxB,CACA,OAAQ,CACJ,IAAMxC,EAAU,KAAK,UAAU,cAC/B,KAAK,KAAMZ,GAAQ,CACXY,EAAQ,eAAe,QAAUA,EAAQ,eAAe,OACxD2B,GAAMvC,EAAK,KAAK,IAAI,EACpB,KAAK,WAAW,KAAK,gBAAgB,GAGrC,KAAK,WAAW,CAExB,CAAC,CACL,CACA,QAAS,CACL,GAAI,CAAC,KAAK,QACN,MAAO,GAEX,IAAMH,EAAY,KAAK,UAAWgE,EAAUhE,EAAU,OAAO,WAAYiE,EAAOjE,EAAU,OAAO,KAAMkE,EAAU,CAC7G,MAAO,KAAK,QAAQ,YAAcF,EAClC,OAAQ,KAAK,QAAQ,aAAeA,CACxC,EACA,GAAIE,EAAQ,SAAWD,EAAK,QACxBC,EAAQ,QAAUD,EAAK,OACvBC,EAAQ,SAAW,KAAK,QAAQ,QAChCA,EAAQ,QAAU,KAAK,QAAQ,MAC/B,MAAO,GAEX,IAAMC,EAAU,CAAE,GAAGF,CAAK,EAC1B,YAAK,QAAQ,MAAQA,EAAK,MAAQ,KAAK,QAAQ,YAAcD,EAC7D,KAAK,QAAQ,OAASC,EAAK,OAAS,KAAK,QAAQ,aAAeD,EAC5D,KAAK,UAAU,UACf,KAAK,aAAe,CAChB,MAAOC,EAAK,MAAQE,EAAQ,MAC5B,OAAQF,EAAK,OAASE,EAAQ,MAClC,GAEG,EACX,CACA,MAAO,CACH,KAAK,sBAAuBZ,GAAQA,EAAI,WAAW,CAAC,EACpD,KAAK,kBAAoB,OACzB,KAAK,KAAMpD,GAAQuC,GAAMvC,EAAK,KAAK,IAAI,CAAC,CAC5C,CACA,MAAM,cAAe,CACjB,GAAI,CAAC,KAAK,SAAW,CAAC,KAAK,OAAO,EAC9B,OAEJ,IAAMH,EAAY,KAAK,UAAWoE,EAAepE,EAAU,oBAAoB,EAC/EA,EAAU,UAAU,WAAW,EAC/B,KAAK,oBAAoB,EACrBoE,GACA,MAAMpE,EAAU,QAAQ,CAEhC,CACJ,ECzaA,SAASqE,EAAeC,EAASC,EAAOC,EAASC,EAAKC,EAAS,CAC3D,GAAID,EAAK,CACL,IAAIE,EAAa,CAAE,QAAS,EAAK,EAC7BC,EAAUF,CAAO,EACjBC,EAAW,QAAUD,EAEhBA,IAAY,SACjBC,EAAaD,GAEjBJ,EAAQ,iBAAiBC,EAAOC,EAASG,CAAU,CACvD,KACK,CACD,IAAME,EAAgBH,EACtBJ,EAAQ,oBAAoBC,EAAOC,EAASK,CAAa,CAC7D,CACJ,CACO,IAAMC,GAAN,KAAqB,CACxB,YAAYC,EAAW,CACnB,KAAK,UAAYA,EACjB,KAAK,mBAAsBC,GAAM,CAC7B,IAAMD,EAAY,KAAK,UAAWL,EAAUK,EAAU,cACtD,GAAI,KAAK,SAAU,CACf,IAAME,EAAqBF,EAAU,cAAc,MAAOG,EAAWD,EAAmB,SACxF,GAAI,CAACC,EACD,OAEJD,EAAmB,cAAgB,CAAE,GAAGC,CAAS,EACjDD,EAAmB,UAAY,IAAI,KAAK,EAAE,QAAQ,EAClD,IAAME,EAAUT,EAAQ,cAAc,OAAO,QAC7CU,EAA0BD,EAAQ,KAAOE,GAAS,KAAK,UAAU,gBAAgBA,CAAI,CAAC,CAC1F,CACIL,EAAE,OAAS,YACX,WAAW,IAAM,KAAK,kBAAkB,EAAG,GAAG,CAEtD,EACA,KAAK,mBAAsBA,GAAM,CAC7B,IAAMM,EAAaN,EAAGD,EAAY,KAAK,UAAWL,EAAUK,EAAU,QAASQ,EAAgBb,EAAQ,cAAec,EAAYF,EAAW,QAAUC,EAAc,KAAOA,EAAc,MAAOE,EAAQf,EAAQ,OAAO,KAAMe,GAAUA,EAAM,OAASD,CAAS,EAC5PC,GAASA,EAAM,QAAQ,MACvBV,EAAU,UAAUS,CAAS,CAErC,EACA,KAAK,wBAA0B,IAAM,CACjC,IAAMT,EAAY,KAAK,UAAWL,EAAUK,EAAU,cACtD,KAAK,kBAAkB,EAClBL,EAAQ,cAGT,UAAY,SAAS,QACrBK,EAAU,WAAa,GACvBA,EAAU,MAAM,IAGhBA,EAAU,WAAa,GACnBA,EAAU,mBAAmB,EAC7BA,EAAU,KAAK,EAAI,EAGnBA,EAAU,KAAK,EAAI,GAG/B,EACA,KAAK,oBAAsB,SAAY,CAC/B,KAAK,iBACL,aAAa,KAAK,cAAc,EAChC,OAAO,KAAK,gBAEhB,KAAK,eAAiB,WAAW,SAAY,CACzC,IAAMW,EAAS,KAAK,UAAU,OAC9BA,GAAW,MAAMA,EAAO,aAAa,CACzC,EAAG,KAAK,UAAU,cAAc,cAAc,OAAO,OAAO,MAAQ,GAAI,CAC5E,EACA,KAAK,8BAAgC,CAACC,EAAoBlB,IAAQ,CAC9D,IAAMmB,EAAW,KAAK,UAAWb,EAAY,KAAK,UAAWL,EAAUK,EAAU,cAC3Ec,EAAkBd,EAAU,cAAc,QAChD,GAAI,CAACc,EACD,OAEJ,IAAMC,EAAOD,EAAiBE,EAAWhB,EAAU,OAAO,QACtDgB,IACAA,EAAS,MAAM,cAAgBD,IAASC,EAAW,UAAY,SAE7DrB,EAAQ,cAAc,OAAO,QAAQ,QAAUA,EAAQ,cAAc,OAAO,QAAQ,UAG1FL,EAAewB,EAAiBG,GAAgBJ,EAAS,UAAWnB,CAAG,EACvEJ,EAAewB,EAAiBI,GAAiBL,EAAS,WAAYnB,CAAG,EACzEJ,EAAewB,EAAiBK,GAAgBN,EAAS,UAAWnB,CAAG,EAClEC,EAAQ,cAAc,OAAO,QAAQ,QAItCL,EAAewB,EAAiBM,GAAeP,EAAS,cAAenB,CAAG,EAC1EJ,EAAewB,EAAiBO,GAAcR,EAAS,QAASnB,CAAG,EACnEJ,EAAewB,EAAiBQ,GAAgBT,EAAS,UAAWnB,CAAG,GALvEJ,EAAewB,EAAiBM,GAAeP,EAAS,SAAUnB,CAAG,EAOzEJ,EAAewB,EAAiBF,EAAoBC,EAAS,WAAYnB,CAAG,EAC5EJ,EAAewB,EAAiBS,GAAkBV,EAAS,YAAanB,CAAG,EAC/E,EACA,KAAK,iBAAoBA,GAAQ,CAC7B,IAAMmB,EAAW,KAAK,UAAWb,EAAY,KAAK,UAAWL,EAAUK,EAAU,cAAewB,EAAa7B,EAAQ,cAAc,UAAWqB,EAAWhB,EAAU,OAAO,QACtKY,EAAqBa,GACrBD,IAAe,UACfxB,EAAU,cAAc,QAAU,OAClCY,EAAqBc,IAEhBF,IAAe,UAAYR,EAChChB,EAAU,cAAc,QAAUgB,EAAS,eAAiBA,EAAS,WAGrEhB,EAAU,cAAc,QAAUgB,EAEtC,KAAK,kBAAkBtB,CAAG,EAC1B,KAAK,cAAcA,CAAG,EACtB,KAAK,8BAA8BkB,EAAoBlB,CAAG,EACtD,UACAJ,EAAe,SAAUqC,GAAuBd,EAAS,iBAAkBnB,EAAK,EAAK,CAE7F,EACA,KAAK,kBAAqBA,GAAQ,CAC9B,IAAMmB,EAAW,KAAK,UAAWe,EAAaC,GAAe,8BAA8B,EAC3F,GAAKD,EAGL,IAAIA,EAAW,mBAAqB,OAAW,CAC3CtC,EAAesC,EAAY,SAAUf,EAAS,YAAanB,CAAG,EAC9D,MACJ,CACIkC,EAAW,cAAgB,SAG3BlC,EACAkC,EAAW,YAAYf,EAAS,cAAc,EAG9Ce,EAAW,eAAef,EAAS,cAAc,GAEzD,EACA,KAAK,cAAiBnB,GAAQ,CAC1B,IAAMmB,EAAW,KAAK,UAAWb,EAAY,KAAK,UAClD,GAAI,CADmEA,EAAU,cACpE,cAAc,OAAO,OAC9B,OAEJ,GAAI,OAAO,eAAmB,IAAa,CACvCV,EAAe,OAAQwC,GAAajB,EAAS,OAAQnB,CAAG,EACxD,MACJ,CACA,IAAMsB,EAAWhB,EAAU,OAAO,QAC9B,KAAK,iBAAmB,CAACN,GACrBsB,GACA,KAAK,gBAAgB,UAAUA,CAAQ,EAE3C,KAAK,gBAAgB,WAAW,EAChC,OAAO,KAAK,iBAEP,CAAC,KAAK,iBAAmBtB,GAAOsB,IACrC,KAAK,gBAAkB,IAAI,eAAe,MAAOe,GAAY,CAC3CA,EAAQ,KAAM9B,GAAMA,EAAE,SAAWe,CAAQ,GAIvD,MAAM,KAAK,oBAAoB,CACnC,CAAC,EACD,KAAK,gBAAgB,QAAQA,CAAQ,EAE7C,EACA,KAAK,WAAa,IAAM,CACpB,GAAM,CAAE,cAAAgB,CAAc,EAAI,KAAK,UAC/B,GAAI,CAACA,EACD,OAEJ,GAAM,CAAE,MAAAC,CAAM,EAAID,EAClBC,EAAM,SAAW,GACjBA,EAAM,aAAeA,EAAM,QAC/B,EACA,KAAK,iBAAoBhC,GAAM,CAC3B,IAAMD,EAAY,KAAK,UAAWL,EAAUK,EAAU,cAAe,CAAE,MAAAiC,CAAM,EAAIjC,EAAU,cAC3FiC,EAAM,OAAS,GACf,IAAIC,EAAU,GACRC,EAAgBF,EAAM,SAC5B,GAAI,GAACE,GAAiB,CAACxC,EAAQ,cAAc,OAAO,QAAQ,QAG5D,QAAW,CAAC,CAAEyC,CAAM,IAAKpC,EAAU,QAC/B,GAAKoC,EAAO,qBAGZF,EAAUE,EAAO,mBAAmBD,CAAa,EAC7CD,GACA,MAGHA,GACD,KAAK,mBAAmBjC,CAAC,EAE7BgC,EAAM,SAAW,GACrB,EACA,KAAK,kBAAoB,IAAM,CAC3B,IAAMD,EAAgB,KAAK,UAAU,cACrC,GAAI,CAACA,EACD,OAEJ,IAAMC,EAAQD,EAAc,MAC5B,OAAOC,EAAM,SACb,OAAOA,EAAM,cACb,OAAOA,EAAM,aACbD,EAAc,OAASP,GACvBQ,EAAM,OAAS,GACfA,EAAM,SAAW,EACrB,EACA,KAAK,gBAAmBhC,GAAM,CAC1B,IAAMD,EAAY,KAAK,UAAWL,EAAUK,EAAU,cAAegC,EAAgBhC,EAAU,cAAegB,EAAWhB,EAAU,OAAO,QAC1I,GAAI,CAACgC,GAAiB,CAACA,EAAc,QACjC,OAEJA,EAAc,MAAM,OAAS,GAC7B,IAAIK,EACJ,GAAIpC,EAAE,KAAK,WAAW,SAAS,EAAG,CAC9B,KAAK,SAAW,GAChB,IAAMqC,EAAarC,EACnB,GAAI+B,EAAc,UAAY,QAC1B,GAAIhB,EAAU,CACV,IAAMuB,EAAavB,EAAS,sBAAsB,EAClDqB,EAAM,CACF,EAAGC,EAAW,QAAUC,EAAW,KACnC,EAAGD,EAAW,QAAUC,EAAW,GACvC,CACJ,UAEK5C,EAAQ,cAAc,YAAc,SAAU,CACnD,IAAM6C,EAASF,EAAW,OAAQG,EAASH,EAAW,cACtD,GAAIE,GAAUC,GAAUzB,EAAU,CAC9B,IAAM0B,EAAaF,EAAO,sBAAsB,EAAGG,EAAaF,EAAO,sBAAsB,EAAGG,EAAa5B,EAAS,sBAAsB,EAC5IqB,EAAM,CACF,EAAGC,EAAW,QAAU,EAAII,EAAW,MAAQC,EAAW,KAAOC,EAAW,MAC5E,EAAGN,EAAW,QAAU,EAAII,EAAW,KAAOC,EAAW,IAAMC,EAAW,IAC9E,CACJ,MAEIP,EAAM,CACF,EAAGC,EAAW,SAAWA,EAAW,QACpC,EAAGA,EAAW,SAAWA,EAAW,OACxC,CAER,MACSA,EAAW,SAAWtB,IAC3BqB,EAAM,CACF,EAAGC,EAAW,SAAWA,EAAW,QACpC,EAAGA,EAAW,SAAWA,EAAW,OACxC,EAER,SAEI,KAAK,SAAWrC,EAAE,OAAS,YACvBe,EAAU,CACV,IAAM6B,EAAa5C,EAAG6C,EAAYD,EAAW,QAAQA,EAAW,QAAQ,OAAS,CAAC,EAAGD,EAAa5B,EAAS,sBAAsB,EACjIqB,EAAM,CACF,EAAGS,EAAU,SAAWF,EAAW,MAAQ,GAC3C,EAAGE,EAAU,SAAWF,EAAW,KAAO,EAC9C,CACJ,CAEJ,IAAMG,EAAU/C,EAAU,OAAO,WAC7BqC,IACAA,EAAI,GAAKU,EACTV,EAAI,GAAKU,GAEbf,EAAc,MAAM,SAAWK,EAC/BL,EAAc,OAASf,EAC3B,EACA,KAAK,UAAahB,GAAM,CACpB,IAAM+C,EAAM/C,EAAGgD,EAAU,MAAM,KAAKD,EAAI,cAAc,EACtD,QAAWE,KAASD,EAChB,KAAK,SAAS,OAAOC,EAAM,UAAU,EAEzC,KAAK,kBAAkB,CAC3B,EACA,KAAK,eAAkBjD,GAAM,CACzB,IAAM+C,EAAM/C,EAAGgD,EAAU,MAAM,KAAKD,EAAI,cAAc,EACtD,QAAWE,KAASD,EAChB,KAAK,SAAS,OAAOC,EAAM,UAAU,EAEzC,KAAK,iBAAiBjD,CAAC,CAC3B,EACA,KAAK,YAAeA,GAAM,CACtB,IAAM+C,EAAM/C,EAAGgD,EAAU,MAAM,KAAKD,EAAI,cAAc,EACtD,QAAWE,KAASD,EAChB,KAAK,SAAS,IAAIC,EAAM,WAAY,YAAY,IAAI,CAAC,EAEzD,KAAK,gBAAgBjD,CAAC,CAC1B,EACA,KAAK,SAAW,GAChB,KAAK,SAAW,IAAI,IACpB,KAAK,UAAY,CACb,UAAW,IAAM,KAAK,WAAW,EACjC,WAAY,IAAM,KAAK,kBAAkB,EACzC,UAAYA,GAAM,KAAK,gBAAgBA,CAAC,EACxC,QAAUA,GAAM,KAAK,iBAAiBA,CAAC,EACvC,WAAaA,GAAM,KAAK,YAAYA,CAAC,EACrC,UAAYA,GAAM,KAAK,gBAAgBA,CAAC,EACxC,SAAWA,GAAM,KAAK,UAAUA,CAAC,EACjC,YAAcA,GAAM,KAAK,UAAUA,CAAC,EACpC,cAAgBA,GAAM,KAAK,eAAeA,CAAC,EAC3C,iBAAkB,IAAM,KAAK,wBAAwB,EACrD,YAAcA,GAAM,KAAK,mBAAmBA,CAAC,EAC7C,eAAiBA,GAAM,KAAK,mBAAmBA,CAAC,EAChD,OAAQ,IAAM,CACV,KAAK,oBAAoB,CAC7B,CACJ,CACJ,CACA,cAAe,CACX,KAAK,iBAAiB,EAAI,CAC9B,CACA,iBAAkB,CACd,KAAK,iBAAiB,EAAK,CAC/B,CACJ,EC7TO,IAAMkD,EAAN,MAAMC,CAAa,CACtB,aAAc,CACV,KAAK,MAAQ,EACjB,CACA,OAAO,OAAOC,EAAQC,EAAM,CACxB,IAAMC,EAAQ,IAAIH,EAClB,OAAAG,EAAM,KAAKF,CAAM,EACbC,IAAS,SACLE,EAASF,CAAI,GAAKG,EAAQH,CAAI,EAC9BC,EAAM,KAAK,CAAE,MAAOD,CAAK,CAAC,EAG1BC,EAAM,KAAKD,CAAI,GAGhBC,CACX,CACA,KAAKD,EAAM,CACHA,GAAM,QAAU,SAGpB,KAAK,MAAQA,EAAK,MACtB,CACJ,ECvBO,IAAMI,GAAN,KAAiB,CACpB,aAAc,CACV,KAAK,MAAQ,IAAIC,EACjB,KAAK,MAAM,MAAQ,GACnB,KAAK,MAAQ,GACb,KAAK,SAAW,GAChB,KAAK,OAAS,GACd,KAAK,KAAO,GACZ,KAAK,QAAU,CACnB,CACA,KAAKC,EAAM,CACFA,IAGDA,EAAK,QAAU,SACf,KAAK,MAAQD,EAAa,OAAO,KAAK,MAAOC,EAAK,KAAK,GAEvDA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAElBA,EAAK,WAAa,SAClB,KAAK,SAAWA,EAAK,UAErBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAEjBA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,SAE5B,CACJ,ECjCO,IAAMC,GAAN,KAA0B,CAC7B,aAAc,CACV,KAAK,MAAQ,IAAIC,EACjB,KAAK,MAAM,MAAQ,OACnB,KAAK,QAAU,CACnB,CACA,KAAKC,EAAM,CACFA,IAGDA,EAAK,QAAU,SACf,KAAK,MAAQD,EAAa,OAAO,KAAK,MAAOC,EAAK,KAAK,GAEvDA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,SAE5B,CACJ,EChBO,IAAMC,GAAN,KAAqB,CACxB,aAAc,CACV,KAAK,UAAY,kBACjB,KAAK,MAAQ,IAAIC,GACjB,KAAK,OAAS,EAClB,CACA,KAAKC,EAAM,CACP,GAAKA,EAML,IAHIA,EAAK,YAAc,SACnB,KAAK,UAAYA,EAAK,WAEtBA,EAAK,QAAU,OAAW,CAC1B,IAAMC,EAAQD,EAAK,MACbE,EAASC,EAASH,EAAK,KAAK,EAAI,CAAE,MAAOA,EAAK,KAAM,EAAIA,EAAK,MACnE,KAAK,MAAM,KAAKC,EAAM,QAAU,OAAYA,EAAQ,CAAE,MAAOC,CAAM,CAAC,CACxE,CACIF,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAE3B,CACJ,ECxBO,IAAMI,GAAN,KAAiB,CACpB,aAAc,CACV,KAAK,OAAS,GACd,KAAK,OAAS,CAClB,CACA,KAAKC,EAAM,CACFA,IAGDA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAE3B,CACJ,EChBO,IAAMC,GAAN,KAAiB,CACpB,aAAc,CACV,KAAK,OAAS,GACd,KAAK,KAAO,CAAC,CACjB,CACA,KAAKC,EAAM,CACFA,IAGDA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAEzB,CACJ,ECfO,IAAMC,GAAN,KAAe,CAClB,aAAc,CACV,KAAK,UAAY,CAAC,EAClB,KAAK,OAAS,GACd,KAAK,KAAO,CAAC,EACb,KAAK,KAAO,QAChB,CACA,IAAI,IAAK,CACL,OAAO,KAAK,SAChB,CACA,IAAI,GAAGC,EAAO,CACV,KAAK,UAAYA,CACrB,CACA,IAAI,WAAY,CACZ,OAAO,KAAK,GAChB,CACA,IAAI,UAAUA,EAAO,CACjB,KAAK,IAAMA,CACf,CACA,IAAI,KAAM,CACN,OAAOC,EAA0B,KAAK,UAAYC,GAAMA,EAAE,QAAQ,IAAK,EAAE,CAAC,CAC9E,CACA,IAAI,IAAIF,EAAO,CACX,KAAK,UAAYC,EAA0BD,EAAQ,GAAM,IAAI,CAAC,EAAE,CACpE,CACA,KAAKG,EAAM,CACP,GAAI,CAACA,EACD,OAEJ,IAAMC,EAAMD,EAAK,KAAOA,EAAK,WAAaA,EAAK,GAC3CC,IAAQ,SACR,KAAK,IAAMA,GAEXD,EAAK,YAAc,SACnB,KAAK,UAAYA,EAAK,WAEtBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAEjBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,KAEzB,CACJ,EC/CO,IAAME,GAAN,KAAe,CAClB,aAAc,CACV,KAAK,OAAS,GACd,KAAK,MAAQ,EACb,KAAK,OAAS,EAClB,CACA,KAAKC,EAAM,CACFA,IAGDA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAElBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAE3B,CACJ,ECnBO,IAAMC,GAAN,KAAiB,CACpB,aAAc,CACV,KAAK,OAAS,GACd,KAAK,KAAO,CAAC,EACb,KAAK,SAAW,IAAIC,EACxB,CACA,KAAKC,EAAM,CACFA,IAGDA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAErB,KAAK,SAAS,KAAKA,EAAK,QAAQ,EACpC,CACJ,ECnBO,IAAMC,GAAN,KAAkB,CACrB,aAAc,CACV,KAAK,MAAQ,GACb,KAAK,OAAS,EAClB,CACA,KAAKC,EAAM,CACHA,IAAS,SAGTA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAElBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAE3B,CACJ,ECXO,IAAMC,GAAN,KAAa,CAChB,aAAc,CACV,KAAK,QAAU,IAAIC,GACnB,KAAK,MAAQ,IAAIC,GACjB,KAAK,QAAU,IAAIC,GACnB,KAAK,OAAS,IAAIC,EACtB,CACA,IAAI,SAAU,CACV,OAAO,KAAK,OAChB,CACA,IAAI,QAAQC,EAAO,CACf,KAAK,QAAUA,CACnB,CACA,IAAI,OAAQ,CACR,OAAO,KAAK,KAChB,CACA,IAAI,MAAMA,EAAO,CACb,KAAK,MAAQA,CACjB,CACA,IAAI,SAAU,CACV,OAAO,KAAK,OAChB,CACA,IAAI,QAAQA,EAAO,CACf,KAAK,QAAUA,CACnB,CACA,KAAKC,EAAM,CACP,GAAI,CAACA,EACD,OAEJ,KAAK,QAAQ,KAAKA,EAAK,SAAWA,EAAK,OAAO,EAC9C,IAAMC,EAAQD,EAAK,OAASA,EAAK,MAC7BC,IAAU,SACV,KAAK,MAAQC,EAA0BD,EAAQE,GAAM,CACjD,IAAMC,EAAM,IAAIR,GAChB,OAAAQ,EAAI,KAAKD,CAAC,EACHC,CACX,CAAC,GAEL,KAAK,QAAQ,KAAKJ,EAAK,SAAWA,EAAK,OAAO,EAC1CK,EAAUL,EAAK,MAAM,EACrB,KAAK,OAAO,OAASA,EAAK,OAG1B,KAAK,OAAO,KAAKA,EAAK,MAAM,CAEpC,CACJ,ECnDO,IAAMM,GAAN,KAAY,CACf,YAAYC,EAAQC,EAAW,CAC3B,KAAK,QAAUD,EACf,KAAK,WAAaC,CACtB,CACA,KAAKC,EAAM,CAIP,GAHI,CAACA,GAGD,CAAC,KAAK,WACN,OAEJ,IAAMC,EAAc,KAAK,QAAQ,QAAQ,YAAY,IAAI,KAAK,UAAU,EACxE,GAAKA,EAGL,QAAWC,KAAcD,EAChBC,EAAW,iBAGhBA,EAAW,gBAAgB,KAAMF,CAAI,CAE7C,CACJ,ECrBO,IAAMG,GAAN,KAAoB,CACvB,YAAYC,EAAQC,EAAW,CAC3B,KAAK,UAAY,SACjB,KAAK,OAAS,IAAIC,GAClB,KAAK,MAAQ,IAAIC,GAAMH,EAAQC,CAAS,CAC5C,CACA,IAAI,WAAY,CACZ,OAAO,KAAK,SAChB,CACA,IAAI,UAAUG,EAAO,CACjB,KAAK,UAAYA,CACrB,CACA,KAAKC,EAAM,CACP,GAAI,CAACA,EACD,OAEJ,IAAMC,EAAYD,EAAK,WAAaA,EAAK,UACrCC,IAAc,SACd,KAAK,UAAYA,GAErB,KAAK,OAAO,KAAKD,EAAK,MAAM,EAC5B,KAAK,MAAM,KAAKA,EAAK,KAAK,CAC9B,CACJ,ECxBO,IAAME,GAAN,KAAqB,CACxB,KAAKC,EAAM,CACFA,IAGDA,EAAK,WACL,KAAK,SAAW,CACZ,EAAGA,EAAK,SAAS,GAAK,GACtB,EAAGA,EAAK,SAAS,GAAK,GACtB,KAAMA,EAAK,SAAS,MAAQ,SAChC,GAEAA,EAAK,UACL,KAAK,QAAUC,EAAW,CAAC,EAAGD,EAAK,OAAO,GAElD,CACJ,EChBO,IAAME,GAAN,KAAiB,CACpB,aAAc,CACV,KAAK,SAAW,IAChB,KAAK,QAAU,CAAC,EAChB,KAAK,KAAO,QAChB,CACA,KAAKC,EAAM,CACFA,IAGDA,EAAK,WAAa,SAClB,KAAK,SAAWA,EAAK,UAErBA,EAAK,OAAS,SACVA,EAAK,OAAS,SACd,KAAK,KAAO,SAGZ,KAAK,KAAO,UAGhBA,EAAK,UAAY,SACjB,KAAK,QAAUC,EAAW,CAAC,EAAGD,EAAK,OAAO,GAElD,CACJ,EC1BO,IAAME,GAAN,KAAmB,CACtB,aAAc,CACV,KAAK,KAAO,GACZ,KAAK,KAAO,MACZ,KAAK,MAAQ,EACjB,CACA,KAAKC,EAAM,CACFA,IAGDA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAEjBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAEjBA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAE1B,CACJ,EClBO,IAAMC,GAAN,KAAY,CACf,aAAc,CACV,KAAK,KAAO,GACZ,KAAK,QAAU,IAAIC,EACvB,CACA,KAAKC,EAAM,CACFA,IAGDA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAErB,KAAK,QAAQ,KAAKA,EAAK,OAAO,EAC1BA,EAAK,UAAY,SACjB,KAAK,QAAUC,EAAW,CAAC,EAAGD,EAAK,OAAO,GAElD,CACJ,EClBO,IAAME,GAAN,KAAqB,CACxB,aAAc,CACV,KAAK,MAAQ,EACb,KAAK,OAAS,GACd,KAAK,OAAS,EACd,KAAK,MAAQ,EACb,KAAK,MAAQ,EACb,KAAK,MAAQ,EACb,KAAK,KAAO,EAChB,CACA,KAAKC,EAAM,CACFA,IAGDA,EAAK,QAAU,SACf,KAAK,MAAQC,EAAcD,EAAK,KAAK,GAErCA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,SAAW,SAChB,KAAK,OAASC,EAAcD,EAAK,MAAM,GAEvCA,EAAK,QAAU,SACf,KAAK,MAAQC,EAAcD,EAAK,KAAK,GAErCA,EAAK,QAAU,SACf,KAAK,MAAQC,EAAcD,EAAK,KAAK,GAErCA,EAAK,QAAU,SACf,KAAK,MAAQC,EAAcD,EAAK,KAAK,GAErCA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAEzB,CACJ,ECpCO,IAAME,GAAN,KAAmB,CACtB,aAAc,CACV,KAAK,EAAI,IAAIC,GACb,KAAK,EAAI,IAAIA,GACb,KAAK,EAAI,IAAIA,EACjB,CACA,KAAKC,EAAM,CACFA,IAGL,KAAK,EAAE,KAAKA,EAAK,CAAC,EAClB,KAAK,EAAE,KAAKA,EAAK,CAAC,EAClB,KAAK,EAAE,KAAKA,EAAK,CAAC,EACtB,CACJ,ECZO,IAAMC,EAAN,MAAMC,UAAwBC,CAAa,CAC9C,aAAc,CACV,MAAM,EACN,KAAK,UAAY,IAAIC,EACzB,CACA,OAAO,OAAOC,EAAQC,EAAM,CACxB,IAAMC,EAAQ,IAAIL,EAClB,OAAAK,EAAM,KAAKF,CAAM,EACbC,IAAS,SACLE,EAASF,CAAI,GAAKG,EAAQH,CAAI,EAC9BC,EAAM,KAAK,CAAE,MAAOD,CAAK,CAAC,EAG1BC,EAAM,KAAKD,CAAI,GAGhBC,CACX,CACA,KAAKD,EAAM,CAEP,GADA,MAAM,KAAKA,CAAI,EACX,CAACA,EACD,OAEJ,IAAMI,EAAiBJ,EAAK,UACxBI,IAAmB,SACfA,EAAe,SAAW,OAC1B,KAAK,UAAU,EAAE,KAAKA,CAAc,EAGpC,KAAK,UAAU,KAAKJ,EAAK,SAAS,EAG9C,CACJ,ECpCO,IAAMK,GAAN,KAAuB,CAC1B,aAAc,CACV,KAAK,MAAQ,CACjB,CACA,KAAKC,EAAM,CACFA,GAGDA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,MAE1B,CACJ,ECZO,IAAMC,GAAN,KAAwB,CAC3B,aAAc,CACV,KAAK,OAAS,GACd,KAAK,QAAU,CACnB,CACA,KAAKC,EAAM,CACFA,IAGDA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,SAE5B,CACJ,ECfO,IAAMC,GAAN,KAAuB,CAC1B,aAAc,CACV,KAAK,MAAQ,EACb,KAAK,OAAS,GACd,KAAK,MAAQ,EACb,KAAK,MAAQ,EACb,KAAK,MAAQ,EACb,KAAK,KAAO,EAChB,CACA,KAAKC,EAAM,CACFA,IAGDA,EAAK,QAAU,SACf,KAAK,MAAQC,EAAcD,EAAK,KAAK,GAErCA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,QAAU,SACf,KAAK,MAAQC,EAAcD,EAAK,KAAK,GAErCA,EAAK,QAAU,SACf,KAAK,MAAQC,EAAcD,EAAK,KAAK,GAErCA,EAAK,QAAU,SACf,KAAK,MAAQC,EAAcD,EAAK,KAAK,GAErCA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAEzB,CACJ,EACaE,GAAN,cAAqCH,EAAiB,CACzD,aAAc,CACV,MAAM,EACN,KAAK,KAAO,OACZ,KAAK,WAAa,QACtB,CACA,KAAKC,EAAM,CACP,MAAM,KAAKA,CAAI,EACVA,IAGDA,EAAK,eAAiB,SACtB,KAAK,aAAeA,EAAK,cAEzBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAEjBA,EAAK,aAAe,SACpB,KAAK,WAAaA,EAAK,YAE/B,CACJ,ECvDO,IAAMG,GAAN,KAAa,CAChB,aAAc,CACV,KAAK,OAAS,GACd,KAAK,aAAe,CACxB,CACA,KAAKC,EAAM,CACFA,IAGDA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,eAAiB,SACtB,KAAK,aAAeA,EAAK,cAEjC,CACJ,ECZO,IAAMC,EAAN,KAAsB,CACzB,aAAc,CACV,KAAK,OAAS,IAAIC,GAClB,KAAK,MAAQ,CACjB,CACA,KAAKC,EAAM,CACFA,IAGDC,EAAUD,EAAK,MAAM,EACrB,KAAK,OAAO,OAASA,EAAK,OAG1B,KAAK,OAAO,KAAKA,EAAK,MAAM,EAE5BA,EAAK,QAAU,SACf,KAAK,MAAQE,EAAcF,EAAK,MAAO,KAAK,OAAO,OAAS,KAAK,OAAO,aAAe,MAAS,GAExG,CACJ,ECtBO,IAAMG,GAAN,cAAoCC,CAAgB,CACvD,aAAc,CACV,MAAM,EACN,KAAK,OAAO,aAAe,GAC3B,KAAK,MAAQ,CACjB,CACJ,ECNO,IAAMC,GAAN,KAAsB,CACzB,aAAc,CACV,KAAK,WAAa,IAAIC,GACtB,KAAK,SAAW,IAAIA,EACxB,CACA,KAAKC,EAAM,CACFA,IAGL,KAAK,WAAW,KAAKA,EAAK,UAAU,EACpC,KAAK,SAAS,KAAKA,EAAK,QAAQ,EACpC,CACJ,ECTO,IAAMC,GAAN,KAAiB,CACpB,aAAc,CACV,KAAK,OAAS,IAAIC,GAClB,KAAK,OAAS,IAAIC,GAClB,KAAK,OAAS,GACd,KAAK,SAAW,GAChB,KAAK,KAAO,SACZ,KAAK,QAAU,IAAIC,EACvB,CACA,KAAKC,EAAM,CACFA,IAGL,KAAK,OAAO,KAAKA,EAAK,MAAM,EAC5B,KAAK,OAAO,KAAKA,EAAK,MAAM,EACxBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,WAAa,SAClB,KAAK,SAAWC,EAAcD,EAAK,QAAQ,GAE3CA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAErB,KAAK,QAAQ,KAAKA,EAAK,OAAO,EAClC,CACJ,EC7BO,IAAME,GAAN,KAAgB,CACnB,aAAc,CACV,KAAK,OAAS,EACd,KAAK,MAAQ,EACjB,CACA,KAAKC,EAAM,CACFA,IAGDA,EAAK,SAAW,SAChB,KAAK,OAASC,EAAcD,EAAK,MAAM,GAEvCA,EAAK,QAAU,SACf,KAAK,MAAQC,EAAcD,EAAK,KAAK,GAE7C,CACJ,EChBO,IAAME,GAAN,KAAkB,CACrB,aAAc,CACV,KAAK,SAAW,IAChB,KAAK,OAAS,GACd,KAAK,OAAS,CACV,EAAG,IACH,EAAG,GACP,CACJ,CACA,IAAI,SAAU,CACV,OAAO,KAAK,OAAO,CACvB,CACA,IAAI,QAAQC,EAAO,CACf,KAAK,OAAO,EAAIA,CACpB,CACA,IAAI,SAAU,CACV,OAAO,KAAK,OAAO,CACvB,CACA,IAAI,QAAQA,EAAO,CACf,KAAK,OAAO,EAAIA,CACpB,CACA,KAAKC,EAAM,CACP,GAAI,CAACA,EACD,OAEAA,EAAK,WAAa,SAClB,KAAK,SAAWC,EAAcD,EAAK,QAAQ,GAE3CA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEvB,IAAME,EAAUF,EAAK,QAAQ,GAAKA,EAAK,QACnCE,IAAY,SACZ,KAAK,OAAO,EAAIA,GAEpB,IAAMC,EAAUH,EAAK,QAAQ,GAAKA,EAAK,QACnCG,IAAY,SACZ,KAAK,OAAO,EAAIA,EAExB,CACJ,ECzCO,IAAMC,GAAN,KAAiB,CACpB,aAAc,CACV,KAAK,EAAI,GACT,KAAK,EAAI,GACT,KAAK,KAAO,UACZ,KAAK,OAAS,CAClB,CACA,KAAKC,EAAM,CACFA,IAGDA,EAAK,IAAM,SACX,KAAK,EAAIA,EAAK,GAEdA,EAAK,IAAM,SACX,KAAK,EAAIA,EAAK,GAEdA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAEjBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAE3B,CACJ,ECvBO,IAAMC,GAAN,KAAkB,CACrB,aAAc,CACV,KAAK,aAAe,KACpB,KAAK,OAAS,GACd,KAAK,QAAU,GACf,KAAK,SAAW,EACpB,CACA,KAAKC,EAAM,CACFA,IAGDA,EAAK,eAAiB,SACtB,KAAK,aAAeC,EAAcD,EAAK,YAAY,GAEnDA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,SAEpBA,EAAK,WAAa,SAClB,KAAK,SAAWC,EAAcD,EAAK,QAAQ,GAEnD,CACJ,ECvBO,IAAME,GAAN,KAAe,CAClB,aAAc,CACV,KAAK,MAAQ,GACb,KAAK,MAAQ,IAAIC,EACjB,KAAK,OAAS,GACd,KAAK,QAAU,CAAC,CACpB,CACA,KAAKC,EAAM,CACFA,IAGDA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAEtB,KAAK,MAAM,KAAKA,EAAK,KAAK,EACtBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEvB,KAAK,UAAYA,EAAK,UAClBA,EAAK,UACL,KAAK,QAAUC,EAAW,KAAK,QAASD,EAAK,OAAO,GAE5D,CACJ,ECxBO,IAAME,GAAN,KAAoB,CACvB,KAAKC,EAAM,CACFA,IAGDA,EAAK,QAAU,SACf,KAAK,MAAQC,EAAa,OAAO,KAAK,MAAOD,EAAK,KAAK,GAEvDA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAE1B,CACJ,ECZO,IAAME,GAAN,KAAgB,CACnB,aAAc,CACV,KAAK,OAAS,GACd,KAAK,OAAS,GACd,KAAK,KAAO,IAAIC,EACpB,CACA,IAAI,WAAY,CACZ,OAAO,KAAK,KAAK,KACrB,CACA,IAAI,UAAUC,EAAO,CACjB,KAAK,KAAK,KAAK,CAAE,MAAOA,CAAM,CAAC,CACnC,CACA,KAAKC,EAAM,CACFA,IAGDA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,SAEnBA,EAAK,OAAS,QAAaA,EAAK,YAAc,SAC9C,KAAK,KAAK,KAAKA,EAAK,MAAQ,CAAE,MAAOA,EAAK,SAAU,CAAC,EAErDA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAE3B,CACJ,EC3BO,IAAMC,GAAN,KAAe,CAClB,aAAc,CACV,KAAK,QAAU,KACnB,CACA,KAAKC,EAAM,CACFA,IAGDA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,SAExB,KAAK,OAASA,EAAK,QAAUA,EAAK,QAClC,KAAK,KAAOA,EAAK,MAAQA,EAAK,QAC9B,KAAK,MAAQA,EAAK,OAASA,EAAK,QAChC,KAAK,IAAMA,EAAK,KAAOA,EAAK,QAChC,CACJ,ECdO,IAAMC,GAAN,KAAW,CACd,aAAc,CACV,KAAK,aAAe,EACpB,KAAK,OAAS,EAClB,CACA,KAAKC,EAAM,CACFA,IAGDA,EAAK,eAAiB,SACtB,KAAK,aAAeC,EAAcD,EAAK,YAAY,GAEnDA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,WACL,KAAK,SAAWE,EAAW,CAAC,EAAGF,EAAK,QAAQ,GAEpD,CACJ,ECXO,IAAMG,GAAN,KAAW,CACd,aAAc,CACV,KAAK,MAAQ,IAAIC,GACjB,KAAK,QAAU,IAAIC,GACnB,KAAK,OAAS,IAAIC,GAClB,KAAK,MAAQ,EACb,KAAK,SAAW,CAAC,EACjB,KAAK,UAAY,OACjB,KAAK,MAAQ,EACb,KAAK,OAAS,GACd,KAAK,QAAU,IAAIC,GACnB,KAAK,KAAO,IAAIC,GAChB,KAAK,SAAW,IAAIC,GACpB,KAAK,OAAS,GACd,KAAK,KAAO,GACZ,KAAK,MAAQ,EACb,KAAK,KAAO,IAAIC,GAChB,KAAK,SAAW,GAChB,KAAK,MAAQ,IAAIC,GACjB,KAAK,QAAU,GACf,KAAK,KAAO,EAChB,CACA,IAAI,QAAS,CACT,OAAO,KAAK,UAChB,CACA,IAAI,OAAOC,EAAO,CACd,KAAK,WAAaA,CACtB,CACA,IAAI,YAAa,CACb,MAAO,EACX,CACA,IAAI,WAAWC,EAAG,CAClB,CACA,IAAI,OAAQ,CACR,OAAO,KAAK,IAChB,CACA,IAAI,MAAMD,EAAO,CACb,KAAK,KAAOA,CAChB,CACA,IAAI,SAAU,CACV,OAAO,KAAK,SAAS,OACzB,CACA,IAAI,QAAQA,EAAO,CACf,KAAK,SAAS,QAAUA,CAC5B,CACA,IAAI,UAAW,CACX,OAAO,KAAK,OAChB,CACA,IAAI,SAASA,EAAO,CAChB,KAAK,QAAUA,CACnB,CACA,KAAKE,EAAM,CACP,GAAI,CAACA,EACD,OAEJ,KAAK,MAAM,KAAKC,EAASD,EAAK,KAAK,EAAI,CAAE,MAAOA,EAAK,KAAM,EAAIA,EAAK,KAAK,EACzE,KAAK,QAAQ,KAAKA,EAAK,OAAO,EAC9B,KAAK,OAAO,KAAKA,EAAK,MAAM,EACxBA,EAAK,QAAU,SACf,KAAK,MAAQE,EAAcF,EAAK,KAAK,GAErCA,EAAK,YAAc,SACnB,KAAK,UAAYA,EAAK,WAEtBA,EAAK,WAAa,SAClB,KAAK,SAAWC,EAASD,EAAK,QAAQ,EAChC,CACE,WAAYA,EAAK,SACjB,SAAUA,EAAK,QACnB,EACE,CAAE,GAAGA,EAAK,QAAS,GAEzBA,EAAK,QAAU,SACf,KAAK,MAAQE,EAAcF,EAAK,KAAK,GAErCA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEvB,KAAK,QAAQ,KAAKA,EAAK,OAAO,EAC9B,IAAMG,EAAWH,EAAK,UAAYA,EAAK,SAAWA,EAAK,SACnDG,IAAa,SACTC,EAASD,CAAQ,EACjB,KAAK,SAAS,KAAKA,CAAQ,EAG3B,KAAK,SAAS,KAAK,CACf,QAASA,CACb,CAAC,GAGT,KAAK,KAAK,KAAKH,EAAK,MAAQA,EAAK,KAAK,EAClCA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAEjBA,EAAK,QAAU,SACf,KAAK,MAAQE,EAAcF,EAAK,KAAK,GAEzC,KAAK,KAAK,KAAKA,EAAK,IAAI,EACpBA,EAAK,WAAa,SAClB,KAAK,SAAWA,EAAK,UAEzB,KAAK,MAAM,KAAKA,EAAK,KAAK,EACtBA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,SAEpBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,KAEzB,CACJ,ECzHO,IAAMK,GAAN,cAA+BC,EAAuB,CACzD,aAAc,CACV,MAAM,EACN,KAAK,QAAU,OACf,KAAK,MAAQ,CACjB,CACA,IAAI,aAAc,CACd,OAAO,KAAK,YAChB,CACA,IAAI,YAAYC,EAAO,CACnB,KAAK,aAAeA,CACxB,CACA,KAAKC,EAAM,CACHA,GAAM,cAAgB,QAAaA,EAAK,eAAiB,SACzDA,EAAK,aAAeA,EAAK,aAE7B,MAAM,KAAKA,CAAI,EACVA,GAGDA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,QAE5B,CACJ,ECtBO,IAAMC,GAAN,cAAsBC,CAAgB,CACzC,aAAc,CACV,MAAM,EACN,KAAK,UAAY,IAAIC,GACrB,KAAK,OAAO,aAAe,GAC3B,KAAK,MAAQ,CACjB,CACA,IAAI,MAAO,CACP,OAAO,KAAK,SAChB,CACA,IAAI,KAAKC,EAAO,CACZ,KAAK,UAAYA,CACrB,CACA,KAAKC,EAAM,CACP,GAAI,CAACA,EACD,OAEJ,MAAM,KAAKA,CAAI,EACf,IAAMC,EAAYD,EAAK,WAAaA,EAAK,KACrCC,IAAc,SACd,KAAK,UAAU,KAAKA,CAAS,EAC7B,KAAK,MAAQC,EAAc,KAAK,MAAO,KAAK,UAAU,OAAS,KAAK,UAAU,aAAe,MAAS,EAE9G,CACJ,EC3BO,IAAMC,GAAN,KAAuB,CAC1B,aAAc,CACV,KAAK,OAAS,GACd,KAAK,MAAQ,KACb,KAAK,OAAS,IAClB,CACA,IAAI,MAAO,CACP,OAAO,KAAK,KAChB,CACA,IAAI,KAAKC,EAAO,CACZ,KAAK,MAAQA,CACjB,CACA,IAAI,QAAS,CACT,OAAO,KAAK,MAChB,CACA,IAAI,OAAOA,EAAO,CACd,KAAK,OAASA,CAClB,CACA,IAAI,YAAa,CACb,OAAO,KAAK,IAChB,CACA,IAAI,WAAWA,EAAO,CAClB,KAAK,KAAOA,CAChB,CACA,KAAKC,EAAM,CACP,GAAI,CAACA,EACD,OAEAA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEvB,IAAMC,EAAQD,EAAK,OAASA,EAAK,MAAQA,EAAK,WAC1CC,IAAU,SACV,KAAK,MAAQA,GAEjB,IAAMC,EAASF,EAAK,QAAUA,EAAK,OAC/BE,IAAW,SACX,KAAK,OAASA,EAEtB,CACJ,ECvCO,IAAMC,GAAN,KAAsB,CACzB,aAAc,CACV,KAAK,QAAU,IAAIC,GACnB,KAAK,MAAQ,EACb,KAAK,MAAQ,CACjB,CACA,IAAI,KAAM,CACN,OAAO,KAAK,KAChB,CACA,IAAI,IAAIC,EAAO,CACX,KAAK,MAAQA,CACjB,CACA,KAAKC,EAAM,CACP,GAAI,CAACA,EACD,OAEJ,KAAK,QAAQ,KAAKA,EAAK,OAAO,EAC9B,IAAMC,EAAQD,EAAK,OAASA,EAAK,IAC7BC,IAAU,SACV,KAAK,MAAQA,GAEbD,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,MAE1B,CACJ,ECzBO,IAAME,GAAN,KAAa,CAChB,aAAc,CACV,KAAK,KAAO,EACZ,KAAK,MAAQ,IAAIC,EACjB,KAAK,OAAS,GACd,KAAK,OAAS,CACV,EAAG,EACH,EAAG,CACP,EACA,KAAK,MAAM,MAAQ,MACvB,CACA,KAAKC,EAAM,CACFA,IAGDA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAErB,KAAK,MAAQD,EAAa,OAAO,KAAK,MAAOC,EAAK,KAAK,EACnDA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,SAAW,SAGhBA,EAAK,OAAO,IAAM,SAClB,KAAK,OAAO,EAAIA,EAAK,OAAO,GAE5BA,EAAK,OAAO,IAAM,SAClB,KAAK,OAAO,EAAIA,EAAK,OAAO,IAEpC,CACJ,EChCA,IAAMC,GAAU,YAAaC,GAAa,OAAQC,GAAW,QAASC,GAAc,SAAUC,GAAa,UAAWC,GAAgB,OACzHC,GAAN,KAAY,CACf,aAAc,CACV,KAAK,UAAY,CAACC,EAAMC,EAASC,EAAQC,IAAgB,CACrD,GAAI,CAACH,EACD,OAEJ,IAAMI,EAAcC,EAAQL,CAAI,EAAGM,EAAaF,EAAc,CAAC,EAAI,CAAC,EAAGG,EAAsBH,IAAgBC,EAAQ,KAAK,QAAQJ,CAAO,CAAC,EAAGO,EAAqBJ,IAAgBC,EAAQ,KAAK,QAAQH,CAAM,CAAC,EAC1MK,IACA,KAAK,QAAQN,CAAO,EAAIK,GAExBE,GAAsBL,IACtB,KAAK,QAAQD,CAAM,EAAII,GAE3B,KAAK,QAAQL,CAAO,EAAIQ,EAAW,KAAK,QAAQR,CAAO,GAAKK,EAAYN,CAAI,GACxE,CAAC,KAAK,QAAQE,CAAM,GAAKC,KACzB,KAAK,QAAQD,CAAM,EAAIO,EAAW,KAAK,QAAQP,CAAM,GAAKI,EAAYN,CAAI,EAElF,EACA,KAAK,MAAQ,GACb,KAAK,KAAO,GACZ,KAAK,QAAU,CAAC,EAChB,KAAK,KAAO,QAChB,CACA,IAAI,WAAY,CACZ,OAAQ,KAAK,QAAQP,EAAO,GAAK,KAAK,QAAQC,EAAU,CAC5D,CACA,IAAI,UAAUgB,EAAO,CACjB,KAAK,QAAQhB,EAAU,EAAI,KAAK,QAAQD,EAAO,EAAIiB,CACvD,CACA,IAAI,QAAS,CACT,OAAO,KAAK,OAChB,CACA,IAAI,OAAOA,EAAO,CACd,KAAK,QAAUA,CACnB,CACA,IAAI,OAAQ,CACR,OAAQ,KAAK,QAAQf,EAAQ,GAAK,KAAK,QAAQC,EAAW,CAC9D,CACA,IAAI,MAAMc,EAAO,CACb,KAAK,QAAQd,EAAW,EAAI,KAAK,QAAQD,EAAQ,EAAIe,CACzD,CACA,IAAI,QAAS,CACT,OAAO,KAAK,KAChB,CACA,IAAI,OAAOA,EAAO,CACd,KAAK,MAAQA,CACjB,CACA,IAAI,SAAU,CACV,OAAQ,KAAK,QAAQb,EAAU,GAAK,KAAK,QAAQC,EAAa,CAClE,CACA,IAAI,QAAQY,EAAO,CACf,KAAK,QAAQZ,EAAa,EAAI,KAAK,QAAQD,EAAU,EAAIa,CAC7D,CACA,IAAI,QAAS,CACT,MAAO,CAAC,CACZ,CACA,IAAI,OAAOC,EAAQ,CACnB,CACA,KAAKC,EAAM,CACP,GAAI,CAACA,EACD,OAEJ,IAAMC,EAAUD,EAAK,SAAWA,EAAK,OACrC,GAAIC,IAAY,OACZ,QAAWC,KAASD,EAAS,CACzB,IAAMb,EAAOa,EAAQC,CAAK,EACtBd,IACA,KAAK,QAAQc,CAAK,EAAIL,EAAW,KAAK,QAAQK,CAAK,GAAK,CAAC,EAAGd,CAAI,EAExE,CAEJ,KAAK,UAAUY,EAAK,UAAWnB,GAASC,GAAY,EAAI,EACxD,KAAK,UAAUkB,EAAK,QAASf,GAAYC,GAAe,EAAK,EAC7D,KAAK,UAAUc,EAAK,OAASA,EAAK,OAAQjB,GAAUC,GAAa,EAAI,EACjEgB,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAElBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAEjBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,KAEzB,CACJ,ECrFO,IAAMG,GAAN,cAA4BC,EAAuB,CACtD,aAAc,CACV,MAAM,EACN,KAAK,QAAU,OACf,KAAK,MAAQ,CACjB,CACA,IAAI,UAAW,CACX,OAAO,KAAK,YAChB,CACA,IAAI,SAASC,EAAO,CAChB,KAAK,aAAeA,CACxB,CACA,KAAKC,EAAM,CACHA,GAAM,WAAa,QAAaA,EAAK,eAAiB,SACtDA,EAAK,aAAeA,EAAK,UAE7B,MAAM,KAAKA,CAAI,EACVA,GAGDA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,QAE5B,CACJ,ECtBO,IAAMC,GAAN,cAAmBC,CAAgB,CACtC,aAAc,CACV,MAAM,EACN,KAAK,UAAY,IAAIC,GACrB,KAAK,OAAO,aAAe,EAC3B,KAAK,MAAQ,CACjB,CACA,IAAI,MAAO,CACP,OAAO,KAAK,SAChB,CACA,IAAI,KAAKC,EAAO,CACZ,KAAK,UAAYA,CACrB,CACA,KAAKC,EAAM,CAEP,GADA,MAAM,KAAKA,CAAI,EACX,CAACA,EACD,OAEJ,IAAMC,EAAYD,EAAK,WAAaA,EAAK,KACrCC,IAAc,SACd,KAAK,UAAU,KAAKA,CAAS,EAC7B,KAAK,MAAQC,EAAc,KAAK,MAAO,KAAK,UAAU,OAAS,KAAK,UAAU,aAAe,MAAS,EAE9G,CACJ,ECzBO,IAAMC,GAAN,KAAa,CAChB,aAAc,CACV,KAAK,MAAQ,CACjB,CACA,KAAKC,EAAM,CACFA,IAGDA,EAAK,QAAU,SACf,KAAK,MAAQC,EAAgB,OAAO,KAAK,MAAOD,EAAK,KAAK,GAE1DA,EAAK,QAAU,SACf,KAAK,MAAQE,EAAcF,EAAK,KAAK,GAErCA,EAAK,UAAY,SACjB,KAAK,QAAUE,EAAcF,EAAK,OAAO,GAEjD,CACJ,ECnBO,IAAMG,GAAN,cAAqBC,CAAgB,CACxC,aAAc,CACV,MAAM,EACN,KAAK,YAAc,EACnB,KAAK,SAAW,EAChB,KAAK,aAAe,CACxB,CACA,KAAKC,EAAM,CACP,MAAM,KAAKA,CAAI,EACVA,IAGDA,EAAK,cAAgB,SACrB,KAAK,YAAcA,EAAK,aAExBA,EAAK,WAAa,SAClB,KAAK,SAAWA,EAAK,UAErBA,EAAK,eAAiB,SACtB,KAAK,aAAeA,EAAK,cAEjC,CACJ,ECXO,IAAMC,GAAN,KAAuB,CAC1B,YAAYC,EAAQC,EAAW,CAC3B,KAAK,QAAUD,EACf,KAAK,WAAaC,EAClB,KAAK,OAAS,IAAIC,GAClB,KAAK,WAAa,IAAIC,GACtB,KAAK,MAAQ,IAAIC,EACjB,KAAK,MAAM,MAAQ,OACnB,KAAK,OAAS,CAAC,EACf,KAAK,KAAO,IAAIC,GAChB,KAAK,OAAS,IAAIC,GAClB,KAAK,QAAU,IAAIC,GACnB,KAAK,iBAAmB,GACxB,KAAK,OAAS,IAAIC,GAClB,KAAK,MAAQ,IAAIC,GACjB,KAAK,KAAO,IAAIC,GAChB,KAAK,OAAS,IAAIC,GAClB,KAAK,OAAS,IAAIC,EACtB,CACA,KAAKC,EAAM,CACP,GAAI,CAACA,EACD,OAIJ,GAFA,KAAK,OAAO,KAAKA,EAAK,MAAM,EAC5B,KAAK,MAAM,KAAKT,EAAgB,OAAO,KAAK,MAAOS,EAAK,KAAK,CAAC,EAC1DA,EAAK,SAAW,OAChB,QAAWC,KAASD,EAAK,OAAQ,CAC7B,IAAME,EAAOF,EAAK,OAAOC,CAAK,EAC1BC,IAAS,SACT,KAAK,OAAOD,CAAK,EAAIE,EAAW,KAAK,OAAOF,CAAK,GAAK,CAAC,EAAGC,CAAI,EAEtE,CAEJ,KAAK,KAAK,KAAKF,EAAK,IAAI,EACxB,KAAK,OAAO,KAAKA,EAAK,MAAM,EAC5B,KAAK,QAAQ,KAAKA,EAAK,OAAO,EAC1BA,EAAK,mBAAqB,SAC1B,KAAK,iBAAmBA,EAAK,kBAEjC,KAAK,MAAM,KAAKA,EAAK,KAAK,EAC1B,KAAK,KAAK,KAAKA,EAAK,IAAI,EACxB,KAAK,OAAO,KAAKA,EAAK,MAAM,EAC5B,KAAK,OAAO,KAAKA,EAAK,MAAM,EAC5B,IAAMI,EAAaJ,EAAK,MAAM,YAAcA,EAAK,MAAM,OACnDI,IAAe,SACf,KAAK,WAAW,OAASA,GAE7B,KAAK,WAAW,KAAKJ,EAAK,UAAU,EAChCA,EAAK,gBAAkB,SACvB,KAAK,cAAgBG,EAAW,CAAC,EAAGH,EAAK,aAAa,GAE1D,IAAMK,EAAeL,EAAK,QAAUA,EAAK,OAAO,OAQhD,GAPIK,IACA,KAAK,OAASC,EAA0BD,EAAeE,GAAM,CACzD,IAAMC,EAAM,IAAIV,GAChB,OAAAU,EAAI,KAAKD,CAAC,EACHC,CACX,CAAC,GAED,KAAK,WAAY,CACjB,IAAMC,EAAW,KAAK,QAAQ,QAAQ,SAAS,IAAI,KAAK,UAAU,EAClE,GAAIA,EACA,QAAWC,KAAWD,EACdC,EAAQ,aACRA,EAAQ,YAAY,KAAMV,CAAI,EAI1C,IAAMW,EAAc,KAAK,QAAQ,QAAQ,YAAY,IAAI,KAAK,UAAU,EACxE,GAAIA,EACA,QAAWC,KAAcD,EACjBC,EAAW,sBACXA,EAAW,qBAAqB,KAAMZ,CAAI,CAI1D,CACJ,CACJ,ECzFO,SAASa,GAAYC,KAAYC,EAAkB,CACtD,QAAWC,KAAiBD,EACxBD,EAAQ,KAAKE,CAAa,CAElC,CACO,SAASC,GAAqBC,EAAQC,KAAcJ,EAAkB,CACzE,IAAMD,EAAU,IAAIM,GAAiBF,EAAQC,CAAS,EACtD,OAAAN,GAAYC,EAAS,GAAGC,CAAgB,EACjCD,CACX,CCAO,IAAMO,GAAN,KAAc,CACjB,YAAYC,EAAQC,EAAW,CAC3B,KAAK,kBAAqBC,GACd,KAAK,OAAO,KAAMC,GAAUA,EAAM,QAAQ,OAASA,EAAM,QAAQ,OAASD,CAAI,GAClF,KAAK,OAAO,KAAMC,GAAUA,EAAM,QAAQ,OAASA,EAAM,QAAQ,OAAS,KAAK,EAEvF,KAAK,cAAiBC,GAAW,CAC7B,KAAK,KAAK,KAAK,QAAQ,QAAQ,UAAUA,CAAM,CAAC,CACpD,EACA,KAAK,QAAUJ,EACf,KAAK,WAAaC,EAClB,KAAK,SAAW,GAChB,KAAK,WAAa,IAAII,GACtB,KAAK,eAAiB,IAAIC,GAC1B,KAAK,cAAgB,CAAC,EACtB,KAAK,MAAQ,EACb,KAAK,WAAa,IAAIC,GACtB,KAAK,aAAe,GACpB,KAAK,SAAW,EAChB,KAAK,SAAW,IAChB,KAAK,cAAgB,IAAIC,GAAcR,EAAQC,CAAS,EACxD,KAAK,gBAAkB,CAAC,EACxB,KAAK,UAAYQ,GAAqB,KAAK,QAAS,KAAK,UAAU,EACnE,KAAK,YAAc,GACnB,KAAK,uBAAyB,GAC9B,KAAK,WAAa,CAAC,EACnB,KAAK,OAAS,GACd,KAAK,MAAQ,CAAC,EACd,KAAK,OAAS,CAAC,EACf,KAAK,QAAU,GACnB,CACA,IAAI,gBAAiB,CACjB,OAAO,KAAK,UAChB,CACA,IAAI,eAAeC,EAAO,CACtB,KAAK,WAAW,KAAKA,CAAK,CAC9B,CACA,IAAI,WAAY,CACZ,OAAO,KAAK,QAChB,CACA,IAAI,UAAUA,EAAO,CACjB,KAAK,SAAWA,CACpB,CACA,IAAI,eAAgB,CAChB,OAAO,KAAK,YAChB,CACA,IAAI,cAAcA,EAAO,CACrB,KAAK,aAAeA,CACxB,CACA,KAAKC,EAAM,CACP,GAAI,CAACA,EACD,OAEAA,EAAK,SAAW,QAChBC,EAA0BD,EAAK,OAASP,GAAW,KAAK,cAAcA,CAAM,CAAC,EAE7EO,EAAK,WAAa,SAClB,KAAK,SAAWA,EAAK,UAErBA,EAAK,QAAU,SACf,KAAK,MAAQE,EAAcF,EAAK,KAAK,GAEzC,IAAMG,EAAeH,EAAK,cAAgBA,EAAK,cAC3CG,IAAiB,SACjB,KAAK,aAAeA,GAEpBH,EAAK,WAAa,SAClB,KAAK,SAAWE,EAAcF,EAAK,QAAQ,GAE/C,IAAMI,EAAWJ,EAAK,UAAYA,EAAK,UACnCI,IAAa,SACb,KAAK,SAAWA,GAEhBJ,EAAK,cAAgB,SACrB,KAAK,YAAcA,EAAK,aAExBA,EAAK,yBAA2B,SAChC,KAAK,uBAAyBA,EAAK,wBAEnCA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,SAExB,KAAK,WAAW,KAAKA,EAAK,UAAU,EACpC,IAAMK,EAAaL,EAAK,YAAcA,EAAK,eACvCM,EAAUD,CAAU,EACpB,KAAK,WAAW,OAASA,EAGzB,KAAK,WAAW,KAAKA,CAAU,EAEnC,KAAK,eAAe,KAAKL,EAAK,cAAc,EAC5C,KAAK,cAAc,KAAKA,EAAK,aAAa,EACtCA,EAAK,kBACL,KAAK,gBAAkBA,EAAK,gBAAgB,IAAKO,GAAM,CACnD,IAAMC,EAAM,IAAIC,GAChB,OAAAD,EAAI,KAAKD,CAAC,EACHC,CACX,CAAC,GAEL,KAAK,UAAU,KAAKR,EAAK,SAAS,EAClC,KAAK,MAAQU,EAAW,KAAK,MAAOV,EAAK,KAAK,EAC9C,KAAK,QAAQ,QAAQ,YAAY,KAAMA,CAAI,EACvCA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEvB,IAAMW,EAAc,KAAK,QAAQ,QAAQ,YAAY,IAAI,KAAK,UAAU,EACxE,GAAIA,EACA,QAAWC,KAAcD,EACjBC,EAAW,aACXA,EAAW,YAAY,KAAMZ,CAAI,EAI7C,GAAIA,EAAK,aAAe,OACpB,QAAWa,KAAcb,EAAK,WAAY,CACtC,IAAMc,EAAgB,IAAIC,GAC1BD,EAAc,KAAKD,CAAU,EAC7B,KAAK,WAAW,KAAKC,CAAa,CACtC,CAGJ,GADA,KAAK,WAAW,KAAK,CAACE,EAAGC,IAAMD,EAAE,SAAWC,EAAE,QAAQ,EAClDjB,EAAK,SAAW,OAChB,QAAWR,KAASQ,EAAK,OAAQ,CAC7B,IAAMkB,EAAgB,KAAK,OAAO,KAAMX,GAAMA,EAAE,OAASf,EAAM,IAAI,EACnE,GAAK0B,EAMDA,EAAc,KAAK1B,CAAK,MANR,CAChB,IAAM2B,EAAW,IAAIC,GACrBD,EAAS,KAAK3B,CAAK,EACnB,KAAK,OAAO,KAAK2B,CAAQ,CAC7B,CAIJ,CAEJ,KAAK,cAAc,KAAO,KAAK,kBAAkB,MAAM,GAAG,KAC1D,KAAK,cAAc,MAAQ,KAAK,kBAAkB,OAAO,GAAG,IAChE,CACA,cAAcE,EAAOC,EAASC,EAAgB,CAC1C,KAAK,KAAKA,CAAc,EACxB,IAAMC,EAAoB,KAAK,WAAW,KAAMjB,GAAMA,EAAE,OAAS,UAAY,OAASA,EAAE,SAAW,OAAO,WAAaA,EAAE,SAAWe,EAAUD,CAAK,EACnJ,YAAK,KAAKG,GAAmB,OAAO,EAC7BA,GAAmB,QAC9B,CACA,SAASC,EAAM,CACX,GAAIA,EAAM,CACN,IAAMC,EAAc,KAAK,OAAO,KAAMlC,GAAUA,EAAM,OAASiC,CAAI,EAC/DC,GACA,KAAK,KAAKA,EAAY,OAAO,CAErC,KACK,CACD,IAAMC,EAAaC,GAAe,8BAA8B,EAAGC,EAAiBF,GAAcA,EAAW,QAASG,EAAe,KAAK,kBAAkBD,EAAiB,OAAS,OAAO,EACzLC,GACA,KAAK,KAAKA,EAAa,OAAO,CAEtC,CACJ,CACJ,ECvKO,IAAMC,GAAN,KAAyB,CAC5B,YAAYC,EAAQC,EAAW,CAC3B,KAAK,UAAYA,EACjB,KAAK,QAAUD,EACf,KAAK,aAAeA,EAAO,QAAQ,eAAe,KAAK,UAAW,EAAI,EACtE,KAAK,qBAAuB,CAAC,EAC7B,KAAK,qBAAuB,CAAC,CACjC,CACA,MAAM,iBAAiBE,EAAO,CAC1B,QAAWC,KAAc,KAAK,qBAC1BA,EAAW,UAAU,GAAM,MAAMA,EAAW,SAASD,CAAK,CAElE,CACA,gBAAgBE,EAAM,CAClB,QAAWD,KAAc,KAAK,qBAC1BA,EAAW,iBAAmBA,EAAW,gBAAgBC,CAAI,CAErE,CACA,MAAO,CACH,KAAK,qBAAuB,CAAC,EAC7B,KAAK,qBAAuB,CAAC,EAC7B,QAAWD,KAAc,KAAK,aAAc,CACxC,OAAQA,EAAW,KAAM,CACrB,IAAK,WACD,KAAK,qBAAqB,KAAKA,CAAU,EACzC,MACJ,IAAK,YACD,KAAK,qBAAqB,KAAKA,CAAU,EACzC,KACR,CACAA,EAAW,KAAK,CACpB,CACJ,CACA,MAAM,kBAAkBE,EAAUH,EAAO,CACrC,QAAWC,KAAc,KAAK,qBAC1BA,EAAW,MAAME,EAAUH,CAAK,EAEpC,QAAWC,KAAc,KAAK,qBAC1BA,EAAW,UAAUE,CAAQ,GAAM,MAAMF,EAAW,SAASE,EAAUH,CAAK,CAEpF,CACA,MAAM,MAAMG,EAAU,CAClB,QAAWF,KAAc,KAAK,qBAC1BA,EAAW,UAAU,GAAKA,EAAW,MAAME,CAAQ,EAEvD,QAAWF,KAAc,KAAK,qBAC1BA,EAAW,UAAUE,CAAQ,GAAKF,EAAW,MAAME,CAAQ,CAEnE,CACJ,ECxCA,IAAMC,GAAcC,GAAS,CACzB,GAAI,CAACC,GAAUD,EAAK,QAASA,EAAK,UAAU,EACxC,OAEJ,IAAME,EAAWF,EAAK,OAAS,EAC3BA,EAAK,MAAQA,EAAK,SAAWE,EAC7BF,EAAK,MAAM,CAACA,EAAK,MAAM,EAElBA,EAAK,MAAQE,GAClBF,EAAK,MAAMA,EAAK,MAAM,CAE9B,EACaG,GAAN,KAAe,CAClB,YAAYC,EAAQC,EAAIC,EAAWC,EAAUC,EAAiBC,EAAO,CACjE,KAAK,UAAYH,EACjB,KAAK,cAAgB,CAACA,EAAWC,EAAUG,EAAQC,EAAW,IAAM,CAChE,OAAW,CAAC,CAAEC,CAAM,IAAKN,EAAU,QAAS,CACxC,IAAMO,EAAYD,EAAO,mBAAqB,OAAYA,EAAO,iBAAiBL,EAAU,IAAI,EAAI,OACpG,GAAIM,EACA,OAAOC,EAAS,OAAOD,EAAU,EAAGA,EAAU,EAAGH,CAAM,CAE/D,CACA,IAAMK,EAAaT,EAAU,OAAO,KAAMU,EAAgBC,GAAkC,CACxF,KAAMF,EACN,SAAUR,CACd,CAAC,EAAGW,EAAMJ,EAAS,OAAOE,EAAc,EAAGA,EAAc,EAAGN,CAAM,EAAGS,EAAS,KAAK,UAAU,EAAGC,EAAW,KAAK,QAAQ,KAAK,SAAUC,EAAiBC,GAAY,CAChKvB,GAAW,CACP,QAAAuB,EACA,WAAY,CAAC,SAAU,mBAAmB,EAC1C,MAAOJ,EAAI,EACX,SAAUZ,EAAU,OAAO,KAAK,MAChC,MAAQiB,GAAWL,EAAI,GAAKK,EAC5B,OAAAJ,CACJ,CAAC,CACL,EAAGK,EAAeF,GAAY,CAC1BvB,GAAW,CACP,QAAAuB,EACA,WAAY,CAAC,SAAU,iBAAiB,EACxC,MAAOJ,EAAI,EACX,SAAUZ,EAAU,OAAO,KAAK,OAChC,MAAQiB,GAAWL,EAAI,GAAKK,EAC5B,OAAAJ,CACJ,CAAC,CACL,EAKA,OAJAE,EAAcD,EAAS,MAAQA,EAAS,OAAO,EAC/CC,EAAcD,EAAS,OAASA,EAAS,OAAO,EAChDI,EAAYJ,EAAS,KAAOA,EAAS,OAAO,EAC5CI,EAAYJ,EAAS,QAAUA,EAAS,OAAO,EAC3C,KAAK,cAAcF,EAAKP,CAAQ,EACzB,KAAK,cAAcL,EAAW,OAAWI,EAAQC,EAAW,CAAC,EAEjEO,CACX,EACA,KAAK,mBAAqB,IAAM,CAC5B,IAAMO,EAAeC,GAAwB,KAAK,SAAS,EAAGC,EAAMF,EAAa,KAAK,EAAGG,EAAc,KAAK,QAAQ,KACpH,GAAIA,EAAY,YAAc,UAAYA,EAAY,YAAc,UAChE,OAAOD,EAEX,IAAME,EAAO,KAAK,GAAK,IAAOC,EAAcF,EAAY,MAAM,KAAK,EAAGG,EAAa,KAAK,GAAK,IAAOD,EAAcF,EAAY,MAAM,MAAM,EAAGI,EAAQ,CACjJ,KAAMD,EAAYF,EAAM,EACxB,MAAOE,EAAYF,EAAM,CAC7B,EACA,OAAKD,EAAY,WACbD,EAAI,OAASM,EAAcC,EAAcF,EAAM,KAAMA,EAAM,KAAK,CAAC,GAEjEJ,EAAY,QAAU,OAAOA,EAAY,OAAU,WACnDD,EAAI,QAAUQ,EAAU,GAErBR,CACX,EACA,KAAK,cAAgB,CAACT,EAAKP,EAAW,IAAM,CACxC,IAAMyB,EAAoB,KAAK,QAAQ,WAAYjB,EAAS,KAAK,UAAU,EAC3E,GAAI,CAACiB,EAAkB,OACnB,MAAO,GAEX,IAAMC,EAAiBD,EAAkB,QACzC,GAAIC,EAAe,OACf,MAAO,GAEX,IAAMC,EAAUD,EAAe,QAC/B,GAAIC,GAAW,GAAK3B,EAAW2B,EAC3B,MAAM,IAAI,MAAM,GAAGC,CAAW,8CAA8C,EAEhF,MAAO,CAAC,CAAC,KAAK,UAAU,UAAU,KAAMC,GAAaC,EAAYvB,EAAKsB,EAAS,QAAQ,EAAIrB,EAASqB,EAAS,UAAU,CAAC,CAC5H,EACA,KAAK,cAAiBE,GAAU,CAC5B,GAAI,CAACA,GAAS,CAAC,KAAK,MAAS,CAAC,KAAK,WAAa,CAAC,KAAK,KAAK,MACvD,OAAOA,EAEX,IAAMC,EAAa,KAAK,KAAK,YAAc,KAAK,KAAK,SAAW,EAAI,EAAGC,EAAU,KAAK,KAAK,WAAa,KAAK,GAAK,EAAI,EACtH,OADkI,KAAK,QAAQ,KAAK,KAAK,OAAS,GAAKA,IAAY,KAAK,GAAKD,EAAW,EAAI,EAIxM,KAAK,UACE,KAAK,UAEZ,KAAK,KAAK,MACHE,GAASH,EAAO,KAAK,KAAK,MAAM,KAAM,KAAK,KAAK,MAAM,KAAK,EAE/DA,EARIA,CASf,EACA,KAAK,cAAiBnC,GAAa,CAC/B,IAAMD,EAAY,KAAK,UAAWwC,EAAchB,EAAc,KAAK,QAAQ,OAAO,KAAK,EACvF,KAAK,SAAW,KAAK,cAAcxB,EAAWC,EAAUwC,EAAMD,EAAa,EAAGxC,EAAU,OAAO,CAAC,EAChG,KAAK,gBAAkB,KAAK,SAAS,KAAK,EAC1C,IAAMS,EAAaT,EAAU,OAAO,KAOpC,OANA,KAAK,WAAa,CACd,GAAG0C,GAAY,KAAK,QAAQ,KAAK,OAAQjC,CAAU,EACnD,OAAQ,KAAK,QAAQ,KAAK,OAAO,QAAU,EAC3C,KAAM,KAAK,QAAQ,KAAK,OAAO,MAAQ,SAC3C,EACA,KAAK,UAAYkC,GAA0B,KAAK,QAAQ,KAAK,UAAW,KAAK,SAAU,KAAK,UAAU,EAC9F,KAAK,QAAQ,KAAK,UAAW,CACjC,IAAK,SACD,KAAK,QAAU,SACf,MACJ,IAAK,UACD,KAAK,QAAU,UACf,KACR,CACA,KAAK,OAASC,EAAO,MACzB,EACA,KAAK,eAAiB,CAACC,EAAcC,IAAqB,CACtD,IAAMC,EAAYF,EAAa,QAAQ,KAAK,KAAK,EACjD,GAAKE,EAGL,OAAOC,EAAW,CACd,MAAOH,EAAa,MACpB,KAAMA,EAAa,IACvB,EAAGI,EAAyBF,EAAW,KAAK,GAAID,CAAgB,CAAC,CACrE,EACA,KAAK,QAAUhD,EACf,KAAK,KAAKC,EAAIE,EAAUC,EAAiBC,CAAK,CAClD,CACA,QAAQ+C,EAAU,CACd,GAAI,KAAK,aAAe,KAAK,UACzB,OAEJ,KAAK,UAAY,GACjB,KAAK,OAAO,QAAU,GACtB,KAAK,KAAK,QAAU,GACpB,IAAMlD,EAAY,KAAK,UAAWmD,EAAgB,KAAK,cACvD,OAAW,CAAC,CAAE7C,CAAM,IAAKN,EAAU,QAC3BM,EAAO,mBACPA,EAAO,kBAAkB,KAAM4C,CAAQ,EAG/C,QAAWE,KAAWpD,EAAU,UAAU,SAClCoD,EAAQ,mBACRA,EAAQ,kBAAkB,KAAMF,CAAQ,EAG5CC,GACAA,EAAc,MAAM,IAAI,CAEhC,CACA,KAAKE,EAAO,CACR,IAAMrD,EAAY,KAAK,UACvB,OAAW,CAAC,CAAEM,CAAM,IAAKN,EAAU,QAC/BA,EAAU,OAAO,mBAAmBM,EAAQ,KAAM+C,CAAK,EAE3DrD,EAAU,OAAO,aAAa,KAAMqD,CAAK,CAC7C,CACA,cAAe,CACX,OAAO,KAAK,cAAc,KAAK,OAAO,OAASC,GAAoB,KAAK,KAAK,CAAC,CAClF,CACA,SAAU,CACN,OAAQ,KAAK,UAAU,GAAK,EAAI,KAAK,GAAM,CAC/C,CACA,aAAc,CACV,MAAO,CACH,EAAG,KAAK,SAAS,EAAI,KAAK,OAAO,EACjC,EAAG,KAAK,SAAS,EAAI,KAAK,OAAO,EACjC,EAAG,KAAK,SAAS,CACrB,CACJ,CACA,WAAY,CACR,OAAO,KAAK,OAAO,QAAU,KAAK,KAAK,KAC3C,CACA,gBAAiB,CACb,OAAO,KAAK,cAAc,KAAK,OAAO,OAASA,GAAoB,KAAK,WAAW,CAAC,CACxF,CACA,KAAKvD,EAAIE,EAAUC,EAAiBC,EAAO,CACvC,IAAMH,EAAY,KAAK,UAAWF,EAAS,KAAK,QAChD,KAAK,GAAKC,EACV,KAAK,MAAQI,EACb,KAAK,KAAO,GACZ,KAAK,aAAe,GACpB,KAAK,MAAQ,GACb,KAAK,aAAe,EACpB,KAAK,UAAY,GACjB,KAAK,YAAc,GACnB,KAAK,SAAW,EAChB,KAAK,UAAY,GACjB,KAAK,OAAS,CACV,YAAa,CAAC,CAClB,EACA,KAAK,QAAU,SACf,KAAK,mBAAqB,GAC1B,IAAMoD,EAAUvD,EAAU,OAAO,WAAYwD,EAAcxD,EAAU,cAAeyD,EAAmBC,GAAqB,KAAK,QAAS1D,EAAWwD,EAAY,SAAS,EAAGG,EAAYF,EAAiB,MAAM,KAAM,CAAE,iBAAAX,CAAiB,EAAIW,EAC7O,KAAK,MAAQR,EAAyBU,EAAW,KAAK,GAAIb,CAAgB,EAC1E,IAAMD,EAAeY,EAAiB,MACtC,GAAIvD,GAAmBA,EAAgB,OAASA,EAAgB,MAAM,KAAM,CACxE,IAAM0D,EAAoB1D,EAAgB,MAAM,KAAM2D,EAAQZ,EAAyBW,EAAmB,KAAK,GAAId,CAAgB,EAC/He,IACA,KAAK,MAAQA,EACbhB,EAAa,KAAK3C,EAAgB,KAAK,EAE/C,CACA,KAAK,UAAY,KAAK,eAAe2C,EAAcC,CAAgB,EACnEW,EAAiB,KAAKvD,CAAe,EACrC,IAAM6C,EAAY,KAAK,UACnBA,GACAU,EAAiB,KAAKV,EAAU,SAAS,EAE7C,IAAMe,EAAgB,IAAIC,GAAcjE,EAAQE,CAAS,EACzD8D,EAAc,KAAK9D,EAAU,cAAc,aAAa,EACxD8D,EAAc,KAAKL,EAAiB,aAAa,EACjD,KAAK,cAAgBK,EACrB,KAAK,KAAOf,GAAW,MAAQU,EAAiB,MAAM,KACtD,KAAK,MAAQV,GAAW,OAASU,EAAiB,MAAM,MACxD,KAAK,QAAUA,EACf,IAAMO,EAAc,KAAK,QAAQ,KAAK,KACtC,KAAK,UAAYC,EAASD,EAAY,KAAK,EAAI,IAC3CA,EAAY,YACZ,KAAK,cAAgB,KAAK,QAAQ,QAAQ,iBAAiBA,EAAY,SAAS,EAC5E,KAAK,eAAiBhE,EAAU,QAAQgE,EAAY,UAAW,KAAK,aAAa,GACjF,KAAK,cAAc,KAAKhE,CAAS,GAGzCA,EAAU,OAAO,aAAa,IAAI,EAClC,KAAK,KAAOkE,GAAkC,KAAK,QAAQ,KAAMX,CAAO,EACxE,KAAK,OAAS,CACV,QAAS,EACb,EACA,KAAK,KAAO,CACR,QAAS,GACT,OAAQ,CACZ,EACA,KAAK,cAActD,CAAQ,EAC3B,KAAK,gBAAkB,KAAK,mBAAmB,EAC/C,KAAK,SAAW,KAAK,gBAAgB,KAAK,EAC1C,KAAK,UAAY,EAAIuB,EAAc,KAAK,QAAQ,KAAK,KAAK,EAC1D,IAAM2C,EAAYnE,EAAU,UAC5BmE,EAAU,UAAYA,EAAU,WAAaA,EAAU,WAAa,KAAK,SAAS,EAClFA,EAAU,WAAa,KAAK,SAAS,EACrC,KAAK,aAAe,KAAK,SAAS,EAAInE,EAAU,QAChD,KAAK,MAAQ,GACb,IAAIoE,EAASpE,EAAU,QAAQ,IAAI,KAAK,KAAK,EACxCoE,IACDA,EAAS,KAAK,QAAQ,QAAQ,eAAe,KAAK,KAAK,EACnDA,GACApE,EAAU,QAAQ,IAAI,KAAK,MAAOoE,CAAM,GAG5CA,GAAUA,EAAO,WACjBA,EAAO,UAAU,IAAI,EAEzB,IAAMC,EAAgBD,GAAQ,cAC1BC,IACA,KAAK,MAAQA,EAAc,IAAI,GAEnC,KAAK,SAAW,GAChB,KAAK,YAAcC,EAAgB,KAAK,QAAQ,OAAO,KAAK,EAC5D,QAAWlB,KAAWpD,EAAU,UAAU,SACtCoD,EAAQ,KAAK,IAAI,EAErB,QAAWmB,KAASvE,EAAU,UAAU,OACpCuE,EAAM,MAAQA,EAAM,KAAK,IAAI,EAE7BH,GAAUA,EAAO,cACjBA,EAAO,aAAapE,EAAW,IAAI,EAEvC,OAAW,CAAC,CAAEM,CAAM,IAAKN,EAAU,QAC/BM,EAAO,iBAAmBA,EAAO,gBAAgB,IAAI,CAE7D,CACA,gBAAiB,CACb,IAAMO,EAAS,KAAK,UAAU,EAAGJ,EAAa,KAAK,UAAU,OAAO,KAAMR,EAAW,KAAK,SAC1F,OAAQA,EAAS,GAAK,CAACY,GACnBZ,EAAS,GAAK,CAACY,GACfZ,EAAS,GAAKQ,EAAW,OAASI,GAClCZ,EAAS,GAAKQ,EAAW,MAAQI,CACzC,CACA,WAAY,CACR,MAAO,CAAC,KAAK,WAAa,CAAC,KAAK,UAAY,KAAK,eAAe,CACpE,CACA,OAAQ,CACJ,QAAWuC,KAAW,KAAK,UAAU,UAAU,SAC3CA,EAAQ,OAASA,EAAQ,MAAM,IAAI,CAE3C,CACJ,EC9SO,IAAMoB,GAAN,KAAY,CACf,YAAYC,EAAUC,EAAU,CAC5B,KAAK,SAAWD,EAChB,KAAK,SAAWC,CACpB,CACJ,ECLO,IAAMC,GAAN,KAAY,CACf,YAAYC,EAAGC,EAAG,CACd,KAAK,SAAW,CACZ,EAAGD,EACH,EAAGC,CACP,CACJ,CACJ,ECLO,IAAMC,EAAN,MAAMC,UAAkBC,EAAM,CACjC,YAAYC,EAAGC,EAAGC,EAAOC,EAAQ,CAC7B,MAAMH,EAAGC,CAAC,EACV,KAAK,KAAO,CACR,OAAQE,EACR,MAAOD,CACX,CACJ,CACA,SAASE,EAAO,CACZ,IAAMC,EAAI,KAAK,KAAK,MAAOC,EAAI,KAAK,KAAK,OAAQC,EAAM,KAAK,SAC5D,OAAOH,EAAM,GAAKG,EAAI,GAAKH,EAAM,GAAKG,EAAI,EAAIF,GAAKD,EAAM,GAAKG,EAAI,GAAKH,EAAM,GAAKG,EAAI,EAAID,CAC9F,CACA,WAAWE,EAAO,CACVA,aAAiBC,GACjBD,EAAM,WAAW,IAAI,EAEzB,IAAMH,EAAI,KAAK,KAAK,MAAOC,EAAI,KAAK,KAAK,OAAQI,EAAO,KAAK,SAAUC,EAAOH,EAAM,SAAUI,EAAQJ,aAAiBV,EAAYU,EAAM,KAAO,CAAE,MAAO,EAAG,OAAQ,CAAE,EAAGK,EAAKD,EAAM,MAAOE,EAAKF,EAAM,OACtM,OAAOD,EAAK,EAAID,EAAK,EAAIL,GAAKM,EAAK,EAAIE,EAAKH,EAAK,GAAKC,EAAK,EAAID,EAAK,EAAIJ,GAAKK,EAAK,EAAIG,EAAKJ,EAAK,CACpG,CACJ,EClBO,IAAMK,EAAN,MAAMC,UAAeC,EAAM,CAC9B,YAAYC,EAAGC,EAAGC,EAAQ,CACtB,MAAMF,EAAGC,CAAC,EACV,KAAK,OAASC,CAClB,CACA,SAASC,EAAO,CACZ,OAAOC,EAAYD,EAAO,KAAK,QAAQ,GAAK,KAAK,MACrD,CACA,WAAWE,EAAO,CACd,IAAMC,EAAO,KAAK,SAAUC,EAAOF,EAAM,SAAUG,EAAU,CAAE,EAAG,KAAK,IAAID,EAAK,EAAID,EAAK,CAAC,EAAG,EAAG,KAAK,IAAIC,EAAK,EAAID,EAAK,CAAC,CAAE,EAAGG,EAAI,KAAK,OACtI,GAAIJ,aAAiBP,EAAQ,CACzB,IAAMY,EAAOD,EAAIJ,EAAM,OAAQM,EAAO,KAAK,KAAKH,EAAQ,GAAK,EAAIA,EAAQ,GAAK,CAAC,EAC/E,OAAOE,EAAOC,CAClB,SACSN,aAAiBO,EAAW,CACjC,GAAM,CAAE,MAAAC,EAAO,OAAAC,CAAO,EAAIT,EAAM,KAChC,OAD8C,KAAK,IAAIG,EAAQ,EAAIK,EAAO,CAAC,EAAI,KAAK,IAAIL,EAAQ,EAAIM,EAAQ,CAAC,GAC5FL,GAAK,GACjBD,EAAQ,GAAKC,EAAII,GAASL,EAAQ,GAAKC,EAAIK,GAC5CN,EAAQ,GAAKK,GACbL,EAAQ,GAAKM,CACrB,CACA,MAAO,EACX,CACJ,ECvBO,IAAMC,GAAN,MAAMC,CAAS,CAClB,YAAYC,EAAWC,EAAU,CAC7B,KAAK,UAAYD,EACjB,KAAK,SAAWC,EAChB,KAAK,WAAa,IAAM,CACpB,GAAM,CAAE,EAAAC,EAAG,EAAAC,CAAE,EAAI,KAAK,UAAU,SAAU,CAAE,MAAAC,EAAO,OAAAC,CAAO,EAAI,KAAK,UAAU,KAAM,CAAE,SAAAJ,CAAS,EAAI,KAClG,QAASK,EAAI,EAAGA,EAAI,EAAGA,IACnB,KAAK,MAAM,KAAK,IAAIP,EAAS,IAAIQ,EAAUL,EAAKE,EAAQ,GAAME,EAAI,GAAIH,EAAKE,EAAS,GAAM,KAAK,MAAMC,EAAI,CAAC,EAAKA,EAAI,GAAKF,EAAQ,EAAGC,EAAS,CAAC,EAAGJ,CAAQ,CAAC,EAE7J,KAAK,SAAW,EACpB,EACA,KAAK,QAAU,CAAC,EAChB,KAAK,SAAW,GAChB,KAAK,MAAQ,CAAC,CAClB,CACA,OAAOO,EAAO,CACV,OAAK,KAAK,UAAU,SAASA,EAAM,QAAQ,EAGvC,KAAK,QAAQ,OAAS,KAAK,UAC3B,KAAK,QAAQ,KAAKA,CAAK,EAChB,KAEN,KAAK,UACN,KAAK,WAAW,EAEb,KAAK,MAAM,KAAMC,GAAQA,EAAI,OAAOD,CAAK,CAAC,GATtC,EAUf,CACA,MAAME,EAAOC,EAAOC,EAAO,CACvB,IAAMC,EAAMD,GAAS,CAAC,EACtB,GAAI,CAACF,EAAM,WAAW,KAAK,SAAS,EAChC,MAAO,CAAC,EAEZ,QAAWI,KAAK,KAAK,QACb,CAACJ,EAAM,SAASI,EAAE,QAAQ,GAC1BC,EAAYL,EAAM,SAAUI,EAAE,QAAQ,EAAIA,EAAE,SAAS,UAAU,IAC9D,CAACH,GAASA,EAAMG,EAAE,QAAQ,IAG/BD,EAAI,KAAKC,EAAE,QAAQ,EAEvB,GAAI,KAAK,SACL,QAAWL,KAAO,KAAK,MACnBA,EAAI,MAAMC,EAAOC,EAAOE,CAAG,EAGnC,OAAOA,CACX,CACA,YAAYG,EAAUC,EAAQN,EAAO,CACjC,OAAO,KAAK,MAAM,IAAIO,EAAOF,EAAS,EAAGA,EAAS,EAAGC,CAAM,EAAGN,CAAK,CACvE,CACA,eAAeK,EAAUG,EAAMR,EAAO,CAClC,OAAO,KAAK,MAAM,IAAIJ,EAAUS,EAAS,EAAGA,EAAS,EAAGG,EAAK,MAAOA,EAAK,MAAM,EAAGR,CAAK,CAC3F,CACJ,EClDA,IAAMS,GAAgB,EAChBC,GAAkBC,GACb,IAAIC,EAAU,CAACD,EAAW,MAAQ,EAAG,CAACA,EAAW,OAAS,EAAIA,EAAW,MAAQ,EAAK,EAAIA,EAAW,OAAS,EAAK,CAAC,EAElHE,GAAN,KAAgB,CACnB,YAAYC,EAAQC,EAAW,CAC3B,KAAK,cAAgB,CAACC,EAASC,EAAaC,IAAU,CAClD,GAAI,CAACF,EAAQ,OAAO,SAAS,OACzB,OAEJ,IAAMG,EAAgBH,EAAQ,OAAQI,EAAgB,KAAK,mBAAmBD,EAAc,OAAO,EAAGE,EAAqBF,EAAc,MAAOG,EAAoBH,EAAc,MAAQ,EAAIA,EAAc,MAAQE,EAAoBE,EAAkB,KAAK,IAAIF,EAAoBC,CAAiB,EAAIF,EAAgBH,EAAaO,EAAiB,KAAK,IAAI,KAAK,MAAO,KAAK,OAAQC,GAAMA,EAAE,QAAUP,CAAK,EAAE,MAAM,EAC3Z,KAAK,MAAQC,EAAc,MAAQC,EAC/BI,EAAiBD,EACjB,KAAK,KAAK,KAAK,IAAIA,EAAkBC,CAAc,EAAG,OAAWR,EAASE,CAAK,EAE1EM,EAAiBD,GACtB,KAAK,eAAeC,EAAiBD,EAAiBL,CAAK,CAEnE,EACA,KAAK,mBAAsBQ,GAAmB,CAC1C,IAAMX,EAAY,KAAK,WACvB,GAAI,CAACA,EAAU,OAAO,SAAW,CAACW,EAAe,OAC7C,MAAO,GAEX,IAAMC,EAASZ,EAAU,OAAO,QAASa,EAAUb,EAAU,OAAO,WACpE,OAAQY,EAAO,MAAQA,EAAO,QAAWD,EAAe,OAASE,GAAW,EAAIF,EAAe,KACnG,EACA,KAAK,cAAgB,CAACG,EAAUC,EAAiBZ,EAAOa,IAAgB,CACpE,GAAI,CACA,IAAIC,EAAW,KAAK,KAAK,IAAI,EACzBA,EACAA,EAAS,KAAK,KAAK,QAASH,EAAUC,EAAiBZ,CAAK,EAG5Dc,EAAW,IAAIC,GAAS,KAAK,QAAS,KAAK,QAAS,KAAK,WAAYJ,EAAUC,EAAiBZ,CAAK,EAEzG,IAAIgB,EAAS,GAIb,OAHIH,IACAG,EAASH,EAAYC,CAAQ,GAE5BE,GAGL,KAAK,OAAO,KAAKF,CAAQ,EACzB,KAAK,QAAQ,KAAKA,CAAQ,EAC1B,KAAK,UACL,KAAK,QAAQ,cAAc,gBAAiB,CACxC,UAAW,KAAK,WAChB,KAAM,CACF,SAAAA,CACJ,CACJ,CAAC,EACMA,GAXH,MAYR,OACOG,EAAG,CACNC,EAAU,EAAE,QAAQ,GAAGC,CAAW,qBAAqBF,CAAC,EAAE,EAC1D,MACJ,CACJ,EACA,KAAK,gBAAkB,CAACG,EAAOpB,EAAOqB,IAAa,CAC/C,IAAMP,EAAW,KAAK,OAAOM,CAAK,EAClC,GAAI,CAACN,GAAYA,EAAS,QAAUd,EAChC,MAAO,GAEXc,EAAS,QAAQO,CAAQ,EACzB,IAAMC,EAAO,KAAK,QAAQ,QAAQR,CAAQ,EAC1C,YAAK,OAAO,OAAOM,EAAO,CAAC,EAC3B,KAAK,QAAQ,OAAOE,EAAM,CAAC,EAC3B,KAAK,KAAK,KAAKR,CAAQ,EACvB,KAAK,QAAQ,cAAc,kBAAmB,CAC1C,UAAW,KAAK,WAChB,KAAM,CACF,SAAAA,CACJ,CACJ,CAAC,EACM,EACX,EACA,KAAK,QAAUlB,EACf,KAAK,WAAaC,EAClB,KAAK,QAAU,EACf,KAAK,OAAS,CAAC,EACf,KAAK,QAAU,CAAC,EAChB,KAAK,KAAO,CAAC,EACb,KAAK,MAAQ,EACb,KAAK,UAAY,GACjB,KAAK,WAAa,EAClB,KAAK,oBAAsB,IAAI0B,GAAmB3B,EAAQC,CAAS,EACnE,IAAMJ,EAAaI,EAAU,OAAO,KACpC,KAAK,SAAW,IAAI2B,GAAShC,GAAeC,CAAU,EAAGF,EAAa,EACtE,KAAK,OAAS,KAAK,QAAQ,QAAQ,UAAUM,EAAW,EAAI,EAC5D,KAAK,SAAW,KAAK,QAAQ,QAAQ,YAAYA,EAAW,EAAI,CACpE,CACA,IAAI,OAAQ,CACR,OAAO,KAAK,OAAO,MACvB,CACA,oBAAqB,CACjB,IAAMA,EAAY,KAAK,WAAYC,EAAUD,EAAU,cACvD,QAAWiB,KAAYhB,EAAQ,gBAC3B,KAAK,YAAYgB,EAAS,SAAWW,GAAYX,EAAS,SAAUjB,EAAU,OAAO,IAAI,EAAI,OAAWiB,EAAS,OAAO,CAEhI,CACA,YAAYH,EAAUC,EAAiBZ,EAAOa,EAAa,CACvD,IAAMhB,EAAY,KAAK,WAAYC,EAAUD,EAAU,cAAe6B,EAAQ5B,EAAQ,UAAU,OAAO,MACvG,GAAI4B,EAAQ,EAAG,CACX,IAAMC,EAAgB,KAAK,MAAQ,EAAID,EACnCC,EAAgB,GAChB,KAAK,eAAeA,CAAa,CAEzC,CACA,OAAO,KAAK,cAAchB,EAAUC,EAAiBZ,EAAOa,CAAW,CAC3E,CACA,OAAQ,CACJ,KAAK,OAAS,CAAC,EACf,KAAK,QAAU,CAAC,CACpB,CACA,SAAU,CACN,KAAK,OAAS,CAAC,EACf,KAAK,QAAU,CAAC,EAChB,KAAK,OAAS,CAAC,EACf,KAAK,SAAW,CAAC,CACrB,CACA,MAAM,KAAKe,EAAO,CACd,IAAM/B,EAAY,KAAK,WACvBA,EAAU,OAAO,MAAM,EACvB,MAAM,KAAK,OAAO+B,CAAK,EACvB,OAAW,CAAC,CAAEC,CAAM,IAAKhC,EAAU,QAC/BA,EAAU,OAAO,WAAWgC,EAAQD,CAAK,EAE7C,QAAWE,KAAK,KAAK,QACjBA,EAAE,KAAKF,CAAK,CAEpB,CACA,OAAOG,EAAW,CACd,OAAO,KAAK,OAAO,OAAOA,CAAS,CACvC,CACA,KAAKA,EAAW,CACZ,OAAO,KAAK,OAAO,KAAKA,CAAS,CACrC,CACA,gBAAgBC,EAAM,CAClB,KAAK,oBAAoB,gBAAgBA,CAAI,CACjD,CACA,MAAO,CACH,IAAMnC,EAAY,KAAK,WAAYC,EAAUD,EAAU,cACvD,KAAK,WAAa,EAClB,KAAK,UAAY,GACjB,IAAIoC,EAAU,GACd,KAAK,SAAW,KAAK,QAAQ,QAAQ,YAAYpC,EAAW,EAAI,EAChE,KAAK,oBAAoB,KAAK,EAC9B,OAAW,CAAC,CAAEgC,CAAM,IAAKhC,EAAU,QAI/B,GAHIgC,EAAO,0BAA4B,SACnCI,EAAUJ,EAAO,wBAAwB,GAEzCI,EACA,MAGR,KAAK,oBAAoB,KAAK,EAC9B,OAAW,CAAC,CAAEC,CAAa,IAAKrC,EAAU,eACtCqC,EAAc,KAAKrC,CAAS,EAGhC,GADA,KAAK,mBAAmB,EACpB,CAACoC,EAAS,CACV,QAAWjC,KAASF,EAAQ,UAAU,OAAQ,CAC1C,IAAMqC,EAAerC,EAAQ,UAAU,OAAOE,CAAK,EACnD,QAASoC,EAAI,KAAK,MAAOC,EAAI,EAAGA,EAAIF,EAAa,QAAQ,OAASC,EAAItC,EAAQ,UAAU,OAAO,MAAOsC,IAAKC,IACvG,KAAK,YAAY,OAAWF,EAAcnC,CAAK,CAEvD,CACA,QAASoC,EAAI,KAAK,MAAOA,EAAItC,EAAQ,UAAU,OAAO,MAAOsC,IACzD,KAAK,YAAY,CAEzB,CACJ,CACA,KAAKE,EAAIC,EAAO3B,EAAiBZ,EAAO,CACpC,KAAK,QAAU,GACf,QAASoC,EAAI,EAAGA,EAAIE,EAAIF,IACpB,KAAK,YAAYG,GAAO,SAAU3B,EAAiBZ,CAAK,EAE5D,KAAK,QAAU,EACnB,CACA,MAAM,QAAS,CACX,KAAK,MAAM,EACX,KAAK,KAAK,EACV,MAAM,KAAK,KAAK,CAAE,MAAO,EAAG,OAAQ,CAAE,CAAC,CAC3C,CACA,OAAOc,EAAUd,EAAOqB,EAAU,CAC9B,KAAK,SAAS,KAAK,OAAO,QAAQP,CAAQ,EAAG,OAAWd,EAAOqB,CAAQ,CAC3E,CACA,SAASD,EAAOoB,EAAW,EAAGxC,EAAOqB,EAAU,CAC3C,GAAID,EAAQ,GAAKA,EAAQ,KAAK,MAC1B,OAEJ,IAAIqB,EAAU,EACd,QAASL,EAAIhB,EAAOqB,EAAUD,GAAYJ,EAAI,KAAK,MAAOA,IACtD,KAAK,gBAAgBA,IAAKpC,EAAOqB,CAAQ,GAAKoB,GAEtD,CACA,eAAeD,EAAUxC,EAAO,CAC5B,KAAK,SAAS,EAAGwC,EAAUxC,CAAK,CACpC,CACA,YAAa,CACT,IAAMF,EAAU,KAAK,WAAW,cAAe4C,EAAS5C,EAAQ,UAAU,OAC1E,QAAWE,KAAS0C,EAChB,KAAK,cAAcA,EAAO1C,CAAK,EAAG,EAAGA,CAAK,EAE9C,KAAK,cAAcF,EAAQ,UAAWA,EAAQ,gBAAgB,MAAM,CACxE,CACA,MAAM,OAAO8B,EAAO,CAChB,IAAM/B,EAAY,KAAK,WAAY8C,EAAoB,IAAI,IAC3D,KAAK,SAAW,IAAInB,GAAShC,GAAeK,EAAU,OAAO,IAAI,EAAGN,EAAa,EACjF,OAAW,CAAC,CAAE2C,CAAa,IAAKrC,EAAU,eACtCqC,EAAc,OAAO,EAEzB,OAAW,CAAC,CAAEL,CAAM,IAAKhC,EAAU,QAC/BgC,EAAO,QAAUA,EAAO,OAAOD,CAAK,EAExC,QAAWd,KAAY,KAAK,OAAQ,CAChC,IAAM8B,EAAe/C,EAAU,OAAO,aAClC+C,GAAgB,CAAC9B,EAAS,qBAC1BA,EAAS,SAAS,GAAK8B,EAAa,MACpC9B,EAAS,SAAS,GAAK8B,EAAa,OACpC9B,EAAS,gBAAgB,GAAK8B,EAAa,MAC3C9B,EAAS,gBAAgB,GAAK8B,EAAa,QAE/C9B,EAAS,mBAAqB,GAC9B,MAAM,KAAK,oBAAoB,MAAMA,CAAQ,EAC7C,OAAW,CAAC,CAAEe,CAAM,IAAK,KAAK,WAAW,QAAS,CAC9C,GAAIf,EAAS,UACT,MAEAe,EAAO,gBACPA,EAAO,eAAef,EAAUc,CAAK,CAE7C,CACA,QAAWiB,KAAS,KAAK,OACrBA,EAAM,UAAU/B,CAAQ,GAAK+B,EAAM,KAAK/B,EAAUc,CAAK,EAE3D,GAAId,EAAS,UAAW,CACpB6B,EAAkB,IAAI7B,CAAQ,EAC9B,QACJ,CACA,KAAK,SAAS,OAAO,IAAIgC,GAAMhC,EAAS,YAAY,EAAGA,CAAQ,CAAC,CACpE,CACA,GAAI6B,EAAkB,KAAM,CACxB,IAAMI,EAAejB,GAAM,CAACa,EAAkB,IAAIb,CAAC,EACnD,KAAK,OAAS,KAAK,OAAOiB,CAAW,EACrC,KAAK,QAAU,KAAK,QAAQ,OAAOA,CAAW,EAC9C,KAAK,KAAK,KAAK,GAAGJ,CAAiB,CACvC,CACA,MAAM,KAAK,oBAAoB,iBAAiBf,CAAK,EACrD,QAAWd,KAAY,KAAK,OAAQ,CAChC,QAAWkC,KAAW,KAAK,SACvBA,EAAQ,OAAOlC,EAAUc,CAAK,EAE9B,CAACd,EAAS,WAAa,CAACA,EAAS,UACjC,MAAM,KAAK,oBAAoB,kBAAkBA,EAAUc,CAAK,CAExE,CAEA,GADA,OAAO/B,EAAU,OAAO,aACpB,KAAK,UAAW,CAChB,IAAMoD,EAAS,KAAK,QACpBA,EAAO,KAAK,CAACC,EAAGC,IAAMA,EAAE,SAAS,EAAID,EAAE,SAAS,GAAKA,EAAE,GAAKC,EAAE,EAAE,EAChE,KAAK,WAAaF,EAAOA,EAAO,OAAS,CAAC,EAAE,SAAS,EACrD,KAAK,UAAY,EACrB,CACJ,CACJ,EC/QO,IAAMG,GAAN,KAAa,CAChB,YAAYC,EAAW,CACnB,KAAK,UAAYA,EACjB,KAAK,WAAa,EAClB,KAAK,aAAe,CACxB,CACA,MAAO,CACH,IAAMA,EAAY,KAAK,UAAWC,EAAUD,EAAU,cACtD,KAAK,WAAa,CAACC,EAAQ,cAAgBC,EAAM,EAAI,EAAI,OAAO,iBAChE,KAAK,aAAe,EACpB,IAAMC,EAAQ,KAAK,WACnB,GAAIH,EAAU,OAAO,QAAS,CAC1B,IAAMI,EAAUJ,EAAU,OAAO,QACjCA,EAAU,OAAO,KAAK,MAAQI,EAAQ,YAAcD,EACpDH,EAAU,OAAO,KAAK,OAASI,EAAQ,aAAeD,CAC1D,CACA,IAAME,EAAYJ,EAAQ,UAAWK,EAAcD,EAAU,KAC7D,KAAK,gBAAkBE,EAAcD,EAAY,QAAQ,QAAQ,EAAIH,EACrE,KAAK,SAAWI,EAAcD,EAAY,QAAQ,QAAQ,EAAIH,EAC9D,KAAK,mBAAqBI,EAAcF,EAAU,KAAK,UAAU,KAAK,EAAIF,CAC9E,CACA,aAAaK,EAAU,CACnB,IAAMP,EAAUO,EAAS,QAASL,EAAQ,KAAK,WAAYG,EAAcL,EAAQ,KAAMQ,EAAeH,EAAY,SAAUI,EAAQF,EAAS,OAC7IE,EAAM,gBAAkBH,EAAcD,EAAY,QAAQ,QAAQ,EAAIH,EACtEO,EAAM,UAAYH,EAAcD,EAAY,KAAK,EAAIH,EACrDO,EAAM,UAAYH,EAAcD,EAAY,KAAK,EAAIH,EACrDO,EAAM,mBAAqBH,EAAcN,EAAQ,KAAK,UAAU,KAAK,EAAIE,EACzE,IAAMQ,EAAcD,EAAM,YAC1BC,EAAY,WAAaF,EAAa,aAAe,OAAYA,EAAa,WAAaN,EAAQ,OACnGQ,EAAY,SAAWF,EAAa,WAAa,OAAYA,EAAa,SAAWN,EAAQ,OAC7FO,EAAM,SAAWH,EAAcD,EAAY,QAAQ,QAAQ,EAAIH,CACnE,CACJ,ECzBA,SAASS,EAAWC,EAAW,CAC3B,OAAOA,GAAa,CAACA,EAAU,SACnC,CACA,SAASC,GAAUC,EAAOC,EAAW,GAAIC,EAAS,GAAO,CACrD,MAAO,CACH,MAAAF,EACA,OAAQE,EAAS,GAAKD,EAAY,GAAKD,EAAS,GACpD,CACJ,CACA,SAASG,GAAqBC,EAAQN,KAAcO,EAAkB,CAClE,IAAMC,EAAU,IAAIC,GAAQH,EAAQN,CAAS,EAC7C,OAAAU,GAAYF,EAAS,GAAGD,CAAgB,EACjCC,CACX,CACA,IAAMG,GAA0B,UAAWC,GAAuB,CAC9D,SAAWC,GAAMA,EAAE,SACnB,KAAM,IAAM,CACZ,EACA,OAAQ,IAAM,CACd,EACA,MAAO,IAAM,CACb,CACJ,EACaC,GAAN,KAAgB,CACnB,YAAYR,EAAQS,EAAIC,EAAe,CACnC,KAAK,GAAKD,EACV,KAAK,qBAAwBE,GAAY,CACrC,GAAI,GAAClB,EAAW,IAAI,GAAK,CAAC,KAAK,cAAc,wBAG7C,QAAWmB,KAASD,EACZC,EAAM,SAAW,KAAK,cAAc,UAGvCA,EAAM,eAAiB,KAAK,KAAO,KAAK,OAAO,CAExD,EACA,KAAK,WAAa,MAAOC,GAAc,CACnC,GAAI,CACA,GAAI,CAAC,KAAK,QACN,KAAK,gBAAkB,QACvBA,EAAY,KAAK,cAAgB,IAAO,KAAK,SAAU,CACvD,KAAK,KAAK,EAAK,EACf,MACJ,CACA,KAAK,gBAAkBA,EACvB,IAAMC,EAAQnB,GAAUkB,EAAY,KAAK,cAAe,KAAK,SAAU,KAAK,MAAM,EAGlF,GAFA,KAAK,YAAYC,EAAM,KAAK,EAC5B,KAAK,cAAgBD,EACjBC,EAAM,MAAQ,IAAM,CACpB,KAAK,KAAK,EAAK,EACf,MACJ,CAEA,GADA,MAAM,KAAK,UAAU,KAAKA,CAAK,EAC3B,CAAC,KAAK,MAAM,EAAG,CACf,KAAK,QAAQ,EACb,MACJ,CACI,KAAK,mBAAmB,GACxB,KAAK,KAAK,EAAK,CAEvB,OACOC,EAAG,CACNC,EAAU,EAAE,MAAM,GAAGC,CAAW,qBAAsBF,CAAC,CAC3D,CACJ,EACA,KAAK,QAAUf,EACf,KAAK,SAAW,IAChB,KAAK,OAAS,GACd,KAAK,OAAS,EACd,KAAK,UAAY,EACjB,KAAK,UAAY,EACjB,KAAK,YAAc,GACnB,KAAK,QAAU,GACf,KAAK,UAAY,GACjB,KAAK,QAAU,GACf,KAAK,cAAgB,EACrB,KAAK,QAAU,IACf,KAAK,WAAa,GAClB,KAAK,eAAiBU,EACtB,KAAK,sBAAwBA,EAC7B,KAAK,OAAS,IAAIQ,GAAO,IAAI,EAC7B,KAAK,OAAS,IAAIC,GAAO,IAAI,EAC7B,KAAK,UAAY,IAAIC,GAAU,KAAK,QAAS,IAAI,EACjD,KAAK,eAAiB,IAAI,IAC1B,KAAK,cAAgB,CACjB,MAAO,CACH,SAAU,GACV,OAAQ,EACZ,CACJ,EACA,KAAK,QAAU,IAAI,IACnB,KAAK,QAAU,IAAI,IACnB,KAAK,SAAWrB,GAAqB,KAAK,QAAS,IAAI,EACvD,KAAK,cAAgBA,GAAqB,KAAK,QAAS,IAAI,EAC5D,KAAK,gBAAkB,IAAIsB,GAAe,IAAI,EAC1C,OAAO,qBAAyB,KAAe,uBAC/C,KAAK,sBAAwB,IAAI,qBAAsBV,GAAY,KAAK,qBAAqBA,CAAO,CAAC,GAEzG,KAAK,QAAQ,cAAc,iBAAkB,CAAE,UAAW,IAAK,CAAC,CACpE,CACA,IAAI,SAAU,CACV,OAAO,KAAK,QAChB,CACA,IAAI,eAAgB,CAChB,OAAO,KAAK,cAChB,CACA,gBAAgBW,EAAU,CACtB,GAAI,CAAC7B,EAAW,IAAI,EAChB,OAEJ,IAAM8B,EAAK,KAAK,cAAc,QAC9B,GAAI,CAACA,EACD,OAEJ,IAAMC,EAAsB,CAACT,EAAGU,EAAKC,IAAW,CAC5C,GAAI,CAACjC,EAAW,IAAI,EAChB,OAEJ,IAAMkC,EAAU,KAAK,OAAO,WAAYC,EAAY,CAChD,EAAGH,EAAI,EAAIE,EACX,EAAGF,EAAI,EAAIE,CACf,EAAGE,EAAY,KAAK,UAAU,SAAS,YAAYD,EAAWF,EAASC,CAAO,EAC9EL,EAASP,EAAGc,CAAS,CACzB,EACMC,EAAgBf,GAAM,CACxB,GAAI,CAACtB,EAAW,IAAI,EAChB,OAEJ,IAAMsC,EAAahB,EAAGU,EAAM,CACxB,EAAGM,EAAW,SAAWA,EAAW,QACpC,EAAGA,EAAW,SAAWA,EAAW,OACxC,EACAP,EAAoBT,EAAGU,EAAK,CAAC,CACjC,EACMO,EAAoB,IAAM,CACvBvC,EAAW,IAAI,IAGpBwC,EAAU,GACVC,EAAa,GACjB,EACMC,EAAmB,IAAM,CACtB1C,EAAW,IAAI,IAGpByC,EAAa,GACjB,EACME,EAAmBrB,GAAM,CAC3B,GAAKtB,EAAW,IAAI,EAGpB,IAAIwC,GAAW,CAACC,EAAY,CACxB,IAAMG,EAAatB,EACfuB,EAAYD,EAAW,QAAQA,EAAW,QAAQ,OAAS,CAAC,EAChE,GAAI,CAACC,IACDA,EAAYD,EAAW,eAAeA,EAAW,eAAe,OAAS,CAAC,EACtE,CAACC,GACD,OAGR,IAAMC,EAAU,KAAK,OAAO,QAASC,EAAaD,EAAUA,EAAQ,sBAAsB,EAAI,OAAWd,EAAM,CAC3G,EAAGa,EAAU,SAAWE,EAAaA,EAAW,KAAO,GACvD,EAAGF,EAAU,SAAWE,EAAaA,EAAW,IAAM,EAC1D,EACAhB,EAAoBT,EAAGU,EAAK,KAAK,IAAIa,EAAU,QAASA,EAAU,OAAO,CAAC,CAC9E,CACAL,EAAU,GACVC,EAAa,GACjB,EACMO,EAAqB,IAAM,CACxBhD,EAAW,IAAI,IAGpBwC,EAAU,GACVC,EAAa,GACjB,EACID,EAAU,GAAOC,EAAa,GAClCX,EAAG,iBAAiB,QAASO,CAAY,EACzCP,EAAG,iBAAiB,aAAcS,CAAiB,EACnDT,EAAG,iBAAiB,YAAaY,CAAgB,EACjDZ,EAAG,iBAAiB,WAAYa,CAAe,EAC/Cb,EAAG,iBAAiB,cAAekB,CAAkB,CACzD,CACA,YAAY7C,EAAO,CACf,KAAK,WAAaA,CACtB,CACA,QAAQ8C,EAAKC,EAAWC,EAAW,GAAO,CACtC,MAAI,CAACnD,EAAW,IAAI,GAAM,CAACmD,GAAY,KAAK,eAAe,IAAIF,CAAG,EACvD,IAEX,KAAK,eAAe,IAAIA,EAAKC,GAAarC,EAAoB,EACvD,GACX,CACA,OAAQ,CACJ,MAAO,CAAC,KAAK,WAAa,KAAK,WAAa,KAAK,SACrD,CACA,SAAU,CACN,GAAI,CAACb,EAAW,IAAI,EAChB,OAEJ,KAAK,KAAK,EACV,KAAK,UAAU,QAAQ,EACvB,KAAK,OAAO,QAAQ,EACpB,OAAW,CAAC,CAAEoD,CAAM,IAAK,KAAK,QAC1BA,EAAO,SAAWA,EAAO,QAAQ,IAAI,EAEzC,QAAWH,KAAO,KAAK,QAAQ,KAAK,EAChC,KAAK,QAAQ,OAAOA,CAAG,EAE3B,KAAK,QAAQ,QAAQ,QAAQ,IAAI,EACjC,KAAK,UAAY,GACjB,IAAMI,EAAU,KAAK,QAAQ,IAAI,EAAGC,EAAMD,EAAQ,UAAWE,GAAMA,IAAM,IAAI,EACzED,GAAO,GACPD,EAAQ,OAAOC,EAAK,CAAC,EAEzB,KAAK,QAAQ,cAAc,qBAAsB,CAAE,UAAW,IAAK,CAAC,CACxE,CACA,KAAKE,EAAO,CACR,GAAI,CAACxD,EAAW,IAAI,EAChB,OAEJ,IAAIyD,EAAcD,EAClB,KAAK,oBAAsB,sBAAsB,MAAOpC,GAAc,CAC9DqC,IACA,KAAK,cAAgB,OACrBA,EAAc,IAElB,MAAM,KAAK,WAAWrC,CAAS,CACnC,CAAC,CACL,CACA,MAAM,OAAOsC,EAAMjD,EAAU,CAAC,EAAG,CAC7B,OAAW,CAAC,CAAEkD,CAAM,IAAK,KAAK,QAAS,CACnC,GAAI,CAACA,EAAO,OACR,SAEJ,IAAMC,EAAM,MAAMD,EAAO,OAAOD,EAAMjD,CAAO,EAC7C,GAAKmD,EAAI,UAGT,OAAOA,EAAI,IACf,CACArC,EAAU,EAAE,MAAM,GAAGC,CAAW,8BAA8BkC,CAAI,YAAY,CAClF,CACA,oBAAqB,CACjB,MAAO,CAAC,KAAK,SAAW,CAAC,KAAK,YAAc1D,EAAW,IAAI,CAC/D,CACA,gBAAgB6D,EAAM,CAClB,GAAK7D,EAAW,IAAI,EAGpB,MAAK,UAAU,gBAAgB6D,CAAI,EACnC,OAAW,CAAC,CAAEF,CAAM,IAAK,KAAK,QAC1BA,EAAO,iBAAmBA,EAAO,gBAAgBE,CAAI,EAE7D,CACA,MAAM,MAAO,CACT,GAAI,CAAC7D,EAAW,IAAI,EAChB,OAEJ,IAAM8D,EAAS,KAAK,QAAQ,QAAQ,mBAAmB,EACvD,QAAWJ,KAAQI,EAAQ,CACvB,IAAMV,EAAS,KAAK,QAAQ,QAAQ,eAAeM,CAAI,EACnDN,GACA,KAAK,QAAQ,IAAIM,EAAMN,CAAM,CAErC,CACA,KAAK,SAAW9C,GAAqB,KAAK,QAAS,KAAM,KAAK,sBAAuB,KAAK,aAAa,EACvG,KAAK,cAAgBA,GAAqB,KAAK,QAAS,KAAM,KAAK,QAAQ,EAC3E,IAAMyD,EAAmB,KAAK,QAAQ,QAAQ,oBAAoB,IAAI,EACtE,OAAW,CAAC/C,EAAI2C,CAAM,IAAKI,EACvB,KAAK,QAAQ,IAAI/C,EAAI2C,CAAM,EAE/B,KAAK,OAAO,KAAK,EACjB,MAAM,KAAK,OAAO,KAAK,EACvB,KAAK,oBAAoB,EACzB,KAAK,OAAO,eAAe,EAC3B,KAAK,OAAO,OAAO,EACnB,KAAK,QAAU,KAAK,cAAc,QAClC,KAAK,UAAYK,EAAc,KAAK,cAAc,QAAQ,EAAI,IAC9D,KAAK,OAASA,EAAc,KAAK,cAAc,KAAK,EAAI,IACxD,KAAK,UAAY,EACjB,KAAK,SAAW,KAAK,cAAc,SAAW,EAAI,KAAK,cAAc,SAAW,IAChF,KAAK,OAAS,KAAK,cAAc,OACjC,OAAW,CAAC,CAAEZ,CAAM,IAAK,KAAK,QAC1BA,EAAO,MAAS,MAAMA,EAAO,KAAK,IAAI,EAE1C,OAAW,CAAC,CAAEO,CAAM,IAAK,KAAK,QAC1BA,EAAO,MAAS,MAAMA,EAAO,KAAK,EAEtC,KAAK,QAAQ,cAAc,gBAAiB,CAAE,UAAW,IAAK,CAAC,EAC/D,KAAK,UAAU,KAAK,EACpB,KAAK,UAAU,WAAW,EAC1B,OAAW,CAAC,CAAEA,CAAM,IAAK,KAAK,QAC1BA,EAAO,gBAAkBA,EAAO,eAAe,EAEnD,KAAK,QAAQ,cAAc,iBAAkB,CAAE,UAAW,IAAK,CAAC,CACpE,CACA,MAAM,UAAUM,EAAM,CACbjE,EAAW,IAAI,IAGpB,KAAK,cAAgBiE,EACrB,MAAM,KAAK,QAAQ,EACvB,CACA,OAAQ,CACJ,GAAKjE,EAAW,IAAI,IAGhB,KAAK,sBAAwB,SAC7B,qBAAqB,KAAK,mBAAmB,EAC7C,OAAO,KAAK,qBAEZ,MAAK,SAGT,QAAW,CAAC,CAAE2D,CAAM,IAAK,KAAK,QAC1BA,EAAO,OAASA,EAAO,MAAM,EAE5B,KAAK,aACN,KAAK,QAAU,IAEnB,KAAK,QAAQ,cAAc,kBAAmB,CAAE,UAAW,IAAK,CAAC,EACrE,CACA,KAAKH,EAAO,CACR,GAAI,CAACxD,EAAW,IAAI,EAChB,OAEJ,IAAMkE,EAAc,KAAK,SAAWV,EACpC,GAAI,KAAK,aAAe,CAAC,KAAK,cAAc,SAAU,CAClD,KAAK,YAAc,GACnB,MACJ,CAIA,GAHI,KAAK,UACL,KAAK,QAAU,IAEfU,EACA,OAAW,CAAC,CAAEP,CAAM,IAAK,KAAK,QACtBA,EAAO,MACPA,EAAO,KAAK,EAIxB,KAAK,QAAQ,cAAc,gBAAiB,CAAE,UAAW,IAAK,CAAC,EAC/D,KAAK,KAAKO,GAAe,EAAK,CAClC,CACA,MAAM,SAAU,CACZ,GAAKlE,EAAW,IAAI,EAGpB,YAAK,KAAK,EACH,KAAK,MAAM,CACtB,CACA,MAAM,OAAQ,CACV,GAAKA,EAAW,IAAI,EAGpB,YAAK,sBAAwB,OAC7B,KAAK,SAAWM,GAAqB,KAAK,QAAS,IAAI,EACvD,KAAK,cAAgBA,GAAqB,KAAK,QAAS,KAAM,KAAK,QAAQ,EACpE,KAAK,QAAQ,CACxB,CACA,SAAS6D,EAAkBC,EAAMC,EAAQ,CAChCrE,EAAW,IAAI,GAGpB,KAAK,QAAQmE,EAAkBC,EAAMC,CAAM,CAC/C,CACA,QAAQC,EAAiBF,EAAMC,EAAQ,CACnC,GAAI,CAACC,GAAmB,CAACtE,EAAW,IAAI,EACpC,OAEJ,IAAMuE,EAAgB,CAAE,GAAG1D,EAAqB,EAChD,GAAI2D,GAAWF,CAAe,EAC1BC,EAAc,SAAWD,EACrBF,IACAG,EAAc,KAAOH,GAErBC,IACAE,EAAc,OAASF,OAG1B,CACD,IAAMI,EAAeF,EACrBA,EAAc,SAAWD,EAAgB,UAAYG,EAAa,SAClEF,EAAc,KAAOD,EAAgB,MAAQG,EAAa,KAC1DF,EAAc,OAASD,EAAgB,QAAUG,EAAa,MAClE,CACA,KAAK,QAAQ7D,GAAyB2D,EAAe,EAAI,CAC7D,CACA,MAAM,OAAQ,CACN,CAACvE,EAAW,IAAI,GAAK,KAAK,UAG9B,MAAM,KAAK,KAAK,EAChB,KAAK,QAAU,GACf,MAAM,IAAI,QAAS0E,GAAY,CAC3B,KAAK,cAAgB,WAAW,SAAY,CACxC,KAAK,gBAAgB,aAAa,EAC9B,KAAK,cAAc,mBAAmB,aAAe,KAAK,uBAC1D,KAAK,sBAAsB,QAAQ,KAAK,cAAc,OAAO,EAEjE,OAAW,CAAC,CAAEf,CAAM,IAAK,KAAK,QAC1BA,EAAO,OAAU,MAAMA,EAAO,MAAM,EAExC,KAAK,QAAQ,cAAc,mBAAoB,CAAE,UAAW,IAAK,CAAC,EAClE,KAAK,KAAK,EACVe,EAAQ,CACZ,EAAG,KAAK,MAAM,CAClB,CAAC,EACL,CACA,MAAO,CACH,GAAI,GAAC1E,EAAW,IAAI,GAAK,CAAC,KAAK,SAG/B,CAAI,KAAK,gBACL,aAAa,KAAK,aAAa,EAC/B,OAAO,KAAK,eAEhB,KAAK,YAAc,GACnB,KAAK,QAAU,GACf,KAAK,gBAAgB,gBAAgB,EACrC,KAAK,MAAM,EACX,KAAK,UAAU,MAAM,EACrB,KAAK,OAAO,KAAK,EACb,KAAK,cAAc,mBAAmB,aAAe,KAAK,uBAC1D,KAAK,sBAAsB,UAAU,KAAK,cAAc,OAAO,EAEnE,OAAW,CAAC,CAAE2D,CAAM,IAAK,KAAK,QAC1BA,EAAO,MAAQA,EAAO,KAAK,EAE/B,QAAWV,KAAO,KAAK,QAAQ,KAAK,EAChC,KAAK,QAAQ,OAAOA,CAAG,EAE3B,KAAK,eAAiB,KAAK,SAC3B,KAAK,QAAQ,cAAc,mBAAoB,CAAE,UAAW,IAAK,CAAC,EACtE,CACA,qBAAsB,CAClB,KAAK,cAAc,WAAa,CAAC,EACjC,IAAM0B,EAAc,KAAK,cAAc,cAAc,KAAK,OAAO,KAAK,MAAO,KAAK,OAAO,WAAY,KAAK,QAAQ,EAElH,OADA,KAAK,cAAc,SAAS,KAAK,aAAa,EAC1C,KAAK,qBAAuBA,EACrB,IAEX,KAAK,mBAAqBA,EACnB,GACX,CACJ,ECxcO,IAAMC,GAAN,KAAsB,CACzB,aAAc,CACV,KAAK,WAAa,IAAI,GAC1B,CACA,iBAAiBC,EAAMC,EAAU,CAC7B,KAAK,oBAAoBD,EAAMC,CAAQ,EACvC,IAAIC,EAAM,KAAK,WAAW,IAAIF,CAAI,EAC7BE,IACDA,EAAM,CAAC,EACP,KAAK,WAAW,IAAIF,EAAME,CAAG,GAEjCA,EAAI,KAAKD,CAAQ,CACrB,CACA,cAAcD,EAAMG,EAAM,CACtB,IAAMC,EAAY,KAAK,WAAW,IAAIJ,CAAI,EAC1CI,GAAaA,EAAU,QAASC,GAAYA,EAAQF,CAAI,CAAC,CAC7D,CACA,iBAAiBH,EAAM,CACnB,MAAO,CAAC,CAAC,KAAK,WAAW,IAAIA,CAAI,CACrC,CACA,wBAAwBA,EAAM,CACrBA,EAID,KAAK,WAAW,OAAOA,CAAI,EAH3B,KAAK,WAAa,IAAI,GAK9B,CACA,oBAAoBA,EAAMC,EAAU,CAChC,IAAMC,EAAM,KAAK,WAAW,IAAIF,CAAI,EACpC,GAAI,CAACE,EACD,OAEJ,IAAMI,EAASJ,EAAI,OAAQK,EAAML,EAAI,QAAQD,CAAQ,EACjDM,EAAM,IAGND,IAAW,EACX,KAAK,WAAW,OAAON,CAAI,EAG3BE,EAAI,OAAOK,EAAK,CAAC,EAEzB,CACJ,EC3CA,SAASC,GAAwBC,EAAWC,EAAKC,EAAcC,EAAQ,GAAO,CAC1E,IAAIC,EAAMH,EAAI,IAAID,CAAS,EAC3B,OAAI,CAACI,GAAOD,KACRC,EAAM,CAAC,GAAGF,EAAa,OAAO,CAAC,EAAE,IAAKG,GAAMA,EAAEL,CAAS,CAAC,EACxDC,EAAI,IAAID,EAAWI,CAAG,GAEnBA,CACX,CACO,IAAME,GAAN,KAAc,CACjB,YAAYC,EAAQ,CAChB,KAAK,QAAUA,EACf,KAAK,QAAU,CAAC,EAChB,KAAK,cAAgB,CACjB,YAAa,IAAI,IACjB,OAAQ,IAAI,IACZ,SAAU,IAAI,GAClB,EACA,KAAK,YAAc,IAAI,IACvB,KAAK,OAAS,IAAI,IAClB,KAAK,SAAW,IAAI,IACpB,KAAK,QAAU,IAAI,IACnB,KAAK,QAAU,IAAI,IACnB,KAAK,eAAiB,IAAI,GAC9B,CACA,cAAcC,EAAMC,EAAgB,CAChC,KAAK,cAAc,YAAY,IAAID,EAAMC,CAAc,CAC3D,CACA,iBAAiBD,EAAME,EAAW,CAC9B,KAAK,cAAc,OAAO,IAAIF,EAAME,CAAS,CACjD,CACA,mBAAmBF,EAAMG,EAAa,CAClC,KAAK,cAAc,SAAS,IAAIH,EAAMG,CAAW,CACrD,CACA,iBAAiBC,EAAMC,EAAe,CAClC,CAAC,KAAK,iBAAiBD,CAAI,GAAK,KAAK,eAAe,IAAIA,EAAMC,CAAa,CAC/E,CACA,UAAUC,EAAQ,CACd,CAAC,KAAK,UAAUA,EAAO,EAAE,GAAK,KAAK,QAAQ,KAAKA,CAAM,CAC1D,CACA,UAAUC,EAAWC,EAASC,EAAW,GAAO,EAC3CA,GAAY,CAAC,KAAK,UAAUF,CAAS,IAAM,KAAK,QAAQ,IAAIA,EAAWC,CAAO,CACnF,CACA,eAAeE,EAAOC,EAAQ,CAC1BC,EAA0BF,EAAQN,GAAS,CACvC,CAAC,KAAK,eAAeA,CAAI,GAAK,KAAK,QAAQ,IAAIA,EAAMO,CAAM,CAC/D,CAAC,CACL,CACA,QAAQnB,EAAW,CACf,KAAK,SAAS,OAAOA,CAAS,EAC9B,KAAK,OAAO,OAAOA,CAAS,EAC5B,KAAK,YAAY,OAAOA,CAAS,CACrC,CACA,oBAAoBA,EAAW,CAC3B,IAAMI,EAAM,IAAI,IAChB,QAAWU,KAAU,KAAK,QACtBA,EAAO,YAAYd,EAAU,aAAa,GAAKI,EAAI,IAAIU,EAAO,GAAIA,EAAO,UAAUd,CAAS,CAAC,EAEjG,OAAOI,CACX,CACA,eAAeJ,EAAWG,EAAQ,GAAO,CACrC,OAAOJ,GAAwBC,EAAW,KAAK,YAAa,KAAK,cAAc,YAAaG,CAAK,CACrG,CACA,UAAUH,EAAWG,EAAQ,GAAO,CAChC,OAAOJ,GAAwBC,EAAW,KAAK,OAAQ,KAAK,cAAc,OAAQG,CAAK,CAC3F,CACA,iBAAiBS,EAAM,CACnB,OAAO,KAAK,eAAe,IAAIA,CAAI,CACvC,CACA,UAAUE,EAAQ,CACd,OAAO,KAAK,QAAQ,KAAM,GAAM,EAAE,KAAOA,CAAM,CACnD,CACA,UAAUO,EAAQ,CACd,OAAO,KAAK,QAAQ,IAAIA,CAAM,CAClC,CACA,eAAeT,EAAM,CACjB,OAAO,KAAK,QAAQ,IAAIA,CAAI,CAChC,CACA,oBAAqB,CACjB,OAAO,KAAK,QAAQ,KAAK,CAC7B,CACA,YAAYZ,EAAWG,EAAQ,GAAO,CAClC,OAAOJ,GAAwBC,EAAW,KAAK,SAAU,KAAK,cAAc,SAAUG,CAAK,CAC/F,CACA,YAAYa,EAASM,EAAe,CAChC,QAAWR,KAAU,KAAK,QACtBA,EAAO,YAAYE,EAASM,CAAa,CAEjD,CACA,qBAAqBtB,EAAWgB,KAAYM,EAAe,CACvD,IAAMC,EAAW,KAAK,SAAS,IAAIvB,CAAS,EAC5C,GAAKuB,EAGL,QAAWC,KAAWD,EAClBC,EAAQ,aAAeA,EAAQ,YAAYR,EAAS,GAAGM,CAAa,CAE5E,CACJ,EC5FA,eAAeG,GAAeC,EAAM,CAChC,IAAMC,EAAMC,EAAyBF,EAAK,IAAKA,EAAK,KAAK,EACzD,GAAI,CAACC,EACD,OAAOD,EAAK,SAEhB,IAAMG,EAAW,MAAM,MAAMF,CAAG,EAChC,OAAIE,EAAS,GACFA,EAAS,KAAK,GAEzBC,EAAU,EAAE,MAAM,GAAGC,CAAW,IAAIF,EAAS,MAAM,+BAA+B,EAC3EH,EAAK,SAChB,CACA,SAASM,GAAcC,EAAQ,CAC3B,MAAO,CAACA,EAAO,IAAM,CAACA,EAAO,SAAW,CAACA,EAAO,KAAO,CAACA,EAAO,OACnE,CACA,SAASC,GAASC,EAAK,CACnB,MAAO,CAACH,GAAcG,CAAG,CAC7B,CACO,IAAMC,GAAN,KAAa,CAChB,aAAc,CACV,KAAK,SAAW,IAAI,IACpB,KAAK,UAAY,CAAC,EAClB,KAAK,iBAAmB,IAAIC,GAC5B,KAAK,aAAe,GACpB,KAAK,QAAU,IAAIC,GAAQ,IAAI,CACnC,CACA,IAAI,SAAU,CACV,IAAMC,EAAM,CAAC,EACb,OAAW,CAACC,EAAMC,CAAM,IAAK,KAAK,SAC9BF,EAAIC,CAAI,EAAIC,EAEhB,OAAOF,CACX,CACA,IAAI,SAAU,CACV,MAAO,QACX,CACA,UAAUG,EAAcD,EAAQ,CACxBE,EAASD,CAAY,EACjBD,IACAA,EAAO,KAAOC,EACd,KAAK,SAAS,IAAIA,EAAcD,CAAM,GAI1C,KAAK,SAAS,IAAIC,EAAa,MAAQ,UAAWA,CAAY,CAEtE,CACA,iBAAiBE,EAAMC,EAAU,CAC7B,KAAK,iBAAiB,iBAAiBD,EAAMC,CAAQ,CACzD,CACA,MAAM,cAAcL,EAAMM,EAAuBC,EAAU,GAAM,CAC7D,KAAK,QAAQ,cAAcP,EAAMM,CAAqB,EACtD,MAAM,KAAK,QAAQC,CAAO,CAC9B,CACA,MAAM,SAASP,EAAMQ,EAAkBD,EAAU,GAAM,CACnD,KAAK,QAAQ,iBAAiBP,EAAMQ,CAAgB,EACpD,MAAM,KAAK,QAAQD,CAAO,CAC9B,CACA,MAAM,mBAAmBP,EAAMS,EAAoBF,EAAU,GAAM,CAC/D,KAAK,QAAQ,mBAAmBP,EAAMS,CAAkB,EACxD,MAAM,KAAK,QAAQF,CAAO,CAC9B,CACA,MAAM,iBAAiBP,EAAMU,EAAWH,EAAU,GAAM,CACpD,KAAK,QAAQ,iBAAiBP,EAAMU,CAAS,EAC7C,MAAM,KAAK,QAAQH,CAAO,CAC9B,CACA,MAAM,UAAUI,EAAQJ,EAAU,GAAM,CACpC,KAAK,QAAQ,UAAUI,CAAM,EAC7B,MAAM,KAAK,QAAQJ,CAAO,CAC9B,CACA,MAAM,UAAUK,EAAQC,EAASC,EAAW,GAAOP,EAAU,GAAM,CAC/D,KAAK,QAAQ,UAAUK,EAAQC,EAASC,CAAQ,EAChD,MAAM,KAAK,QAAQP,CAAO,CAC9B,CACA,MAAM,SAASQ,EAAOC,EAAQC,EAAeC,EAAsBC,EAAkBZ,EAAU,GAAM,CACjG,IAAIa,EACAC,EAAcd,EAASe,EAAUC,EAAiBC,EAClDC,EAAUR,CAAa,GACvBI,EAAcJ,EACdK,EAAW,QAGXA,EAAWL,EAEXQ,EAAUP,CAAoB,GAC9BG,EAAcH,EACdK,EAAkB,QAGlBA,EAAkBL,EAElBO,EAAUN,CAAgB,GAC1BE,EAAcF,EACdK,EAAc,QAGdA,EAAcL,EAEdO,GAAWV,CAAM,EACjBI,EAAe,CACX,YAAaG,EACb,QAASC,EACT,KAAMR,EACN,KAAMM,CACV,EAGAF,EAAeJ,EAEnB,KAAK,QAAQ,eAAeD,EAAOK,CAAY,EAC/C,MAAM,KAAK,QAAQC,CAAW,CAClC,CACA,cAAcjB,EAAMuB,EAAM,CACtB,KAAK,iBAAiB,cAAcvB,EAAMuB,CAAI,CAClD,CACA,KAAM,CACF,OAAO,KAAK,SAChB,CACA,QAAQC,EAAO,CACX,IAAMC,EAAM,KAAK,IAAI,EAAGC,EAAOD,EAAID,CAAK,EACxC,GAAI,CAACE,GAAQA,EAAK,UAAW,CACzBD,EAAI,OAAOD,EAAO,CAAC,EACnB,MACJ,CACA,OAAOE,CACX,CACA,MAAO,CACC,KAAK,eAGT,KAAK,aAAe,GACxB,CACA,MAAM,KAAKC,EAAwBlB,EAAS,CACxC,OAAO,KAAK,cAAckB,EAAwBlB,CAAO,CAC7D,CACA,MAAM,cAAckB,EAAwBC,EAAgBJ,EAAO,CAC/D,IAAInC,EACJ,OAAKC,GAASqC,CAAsB,EAiBhCtC,EAASsC,GAhBTtC,EAAS,CAAC,EACNU,EAAS4B,CAAsB,EAC/BtC,EAAO,GAAKsC,EAGZtC,EAAO,QAAUsC,EAEjBE,EAASD,CAAc,EACvBvC,EAAO,MAAQuC,EAGfvC,EAAO,QAAUuC,GAAkBvC,EAAO,QAE9CA,EAAO,MAAQmC,GAASnC,EAAO,OAK5B,KAAK,YAAYA,CAAM,CAClC,CACA,MAAM,SAASyC,EAAOC,EAAgBP,EAAO,CACzC,IAAIzC,EAAKiD,EACT,OAAIH,EAASE,CAAc,GAAKA,IAAmB,OAC/ChD,EAAM+C,GAGNE,EAAKF,EACL/C,EAAMgD,GAEH,KAAK,YAAY,CAAE,GAAIC,EAAI,IAAAjD,EAAK,MAAAyC,CAAM,CAAC,CAClD,CACA,MAAM,QAAQrB,EAAU,GAAM,CACrBA,GAGL,KAAK,IAAI,EAAE,QAAS,GAAM,EAAE,QAAQ,CAAC,CACzC,CACA,oBAAoBH,EAAMC,EAAU,CAChC,KAAK,iBAAiB,oBAAoBD,EAAMC,CAAQ,CAC5D,CACA,MAAM,IAAI+B,EAAIC,EAASxB,EAASe,EAAO,CACnC,IAAMnC,EAAS,CAAE,MAAAmC,CAAM,EACvB,OAAIzB,EAASiC,CAAE,EACX3C,EAAO,GAAK2C,EAGZ3C,EAAO,QAAU2C,EAEjBC,aAAmB,YACnB5C,EAAO,QAAU4C,EAGjB5C,EAAO,QAAU4C,EAEjBJ,EAASpB,CAAO,EAChBpB,EAAO,MAAQoB,EAGfpB,EAAO,QAAUoB,GAAWpB,EAAO,QAEhC,KAAK,YAAYA,CAAM,CAClC,CACA,MAAM,QAAQ2C,EAAIC,EAASF,EAAgBP,EAAO,CAC9C,IAAMnC,EAAS,CAAC,EAChB,OAAI2C,aAAc,aACd3C,EAAO,QAAU2C,EACjB3C,EAAO,IAAM4C,EACb5C,EAAO,MAAQ0C,IAGf1C,EAAO,GAAK2C,EACZ3C,EAAO,QAAU4C,EACjB5C,EAAO,IAAM0C,EACb1C,EAAO,MAAQmC,GAEZ,KAAK,YAAYnC,CAAM,CAClC,CACA,kBAAkB6C,EAAU,CACxB,IAAMT,EAAM,KAAK,IAAI,EACrB,GAAI,CAACA,EAAI,OACL,MAAM,IAAI,MAAM,GAAGtC,CAAW,+DAA+D,EAEjG,QAAWgD,KAAWV,EAClBU,EAAQ,gBAAgBD,CAAQ,CAExC,CACA,MAAM,YAAY7C,EAAQ,CACtB,IAAM2C,EAAK3C,EAAO,IAAM,cAAc,KAAK,MAAM+C,EAAU,EAAI,GAAK,CAAC,GAAI,CAAE,MAAAZ,EAAO,IAAAzC,CAAI,EAAIM,EAAQoB,EAAU1B,EAAM,MAAMF,GAAe,CAAE,SAAUQ,EAAO,QAAS,IAAAN,EAAK,MAAAyC,CAAM,CAAC,EAAInC,EAAO,QACtLgD,EAAehD,EAAO,SAAW,SAAS,eAAe2C,CAAE,EAC1DK,IACDA,EAAe,SAAS,cAAc,KAAK,EAC3CA,EAAa,GAAKL,EAClB,SAAS,KAAK,OAAOK,CAAY,GAErC,IAAMC,EAAiBtD,EAAyByB,EAASe,CAAK,EAAGC,EAAM,KAAK,IAAI,EAAGc,EAAWd,EAAI,UAAWe,GAAMA,EAAE,KAAOR,CAAE,EAC9H,GAAIO,GAAY,EAAG,CACf,IAAME,EAAM,KAAK,QAAQF,CAAQ,EAC7BE,GAAO,CAACA,EAAI,YACZA,EAAI,QAAQ,EACZhB,EAAI,OAAOc,EAAU,CAAC,EAE9B,CACA,IAAIG,EACJ,GAAIL,EAAa,QAAQ,YAAY,IAAM,SACvCK,EAAWL,EACXK,EAAS,QAAQC,CAAkB,EAAI,YAEtC,CACD,IAAMC,EAAmBP,EAAa,qBAAqB,QAAQ,EAC/DO,EAAiB,QACjBF,EAAWE,EAAiB,CAAC,EAC7BF,EAAS,QAAQC,CAAkB,EAAI,UAGvCD,EAAW,SAAS,cAAc,QAAQ,EAC1CA,EAAS,QAAQC,CAAkB,EAAI,OACvCN,EAAa,YAAYK,CAAQ,EAEzC,CACKA,EAAS,MAAM,QAChBA,EAAS,MAAM,MAAQ,QAEtBA,EAAS,MAAM,SAChBA,EAAS,MAAM,OAAS,QAE5B,IAAMG,EAAU,IAAIC,GAAU,KAAMd,EAAIM,CAAc,EACtD,OAAIC,GAAY,EACZd,EAAI,OAAOc,EAAU,EAAGM,CAAO,EAG/BpB,EAAI,KAAKoB,CAAO,EAEpBA,EAAQ,OAAO,WAAWH,CAAQ,EAClC,MAAMG,EAAQ,MAAM,EACbA,CACX,CACJ,ECtRO,IAAME,GAAN,KAAsB,CACzB,aAAc,CACV,KAAK,IAAM,MACX,KAAK,aAAe,KACxB,CACA,YAAYC,EAAO,CACf,IAAMC,EAAaD,EAAM,MAAOE,EAAWD,EAAW,KAAOD,EAAM,MACnE,GAAIE,EAAS,IAAM,QAAaA,EAAS,IAAM,QAAaA,EAAS,IAAM,OACvE,OAAOC,EAASD,CAAQ,CAEhC,CACA,iBAAiBF,EAAO,CACpB,IAAMC,EAAaD,EAAM,MAAOE,EAAWD,EAAW,KAAOD,EAAM,MACnE,GAAIE,EAAS,IAAM,QAAaA,EAAS,IAAM,OAC3C,OAAOC,EAAS,CACZ,EAAGC,EAAcF,EAAS,CAAC,EAC3B,EAAGE,EAAcF,EAAS,CAAC,EAC3B,EAAGE,EAAcF,EAAS,CAAC,CAC/B,CAAC,CAET,CACA,YAAYG,EAAO,CACf,GAAI,CAACA,EAAM,WAAW,KAAK,EACvB,OAEJ,IAAMC,EAAQ,qEAAsEC,EAASD,EAAM,KAAKD,CAAK,EAC7G,OAAOE,EACDC,GAAW,CACT,EAAGD,EAAO,OAAS,EAAIE,GAAWF,EAAO,CAAC,CAAC,EAAI,EAC/C,EAAG,SAASA,EAAO,CAAC,EAAG,EAAE,EACzB,EAAG,SAASA,EAAO,CAAC,EAAG,EAAE,EACzB,EAAG,SAASA,EAAO,CAAC,EAAG,EAAE,CAC7B,CAAC,EACC,MACV,CACJ,ECpCO,IAAMG,GAAN,KAAsB,CACzB,aAAc,CACV,KAAK,IAAM,MACX,KAAK,aAAe,KACxB,CACA,YAAYC,EAAO,CACf,IAAMC,EAAaD,EAAM,MAAOE,EAAWD,EAAW,KAAOD,EAAM,MACnE,GAAIE,EAAS,IAAM,OACf,OAAOA,CAEf,CACA,iBAAiBF,EAAO,CACpB,IAAMC,EAAaD,EAAM,MAAOE,EAAWD,EAAW,KAAOD,EAAM,MACnE,GAAIE,EAAS,IAAM,OACf,MAAO,CACH,EAAGC,EAAcD,EAAS,CAAC,EAC3B,EAAGC,EAAcD,EAAS,CAAC,EAC3B,EAAGC,EAAcD,EAAS,CAAC,CAC/B,CAER,CACA,YAAYE,EAAO,CACf,GAAI,CAACA,EAAM,WAAW,KAAK,YAAY,EACnC,OAEJ,IAAMC,EAAQ,mEAAoEC,EAASD,EAAM,KAAKD,CAAK,EAC3G,OAAOE,EACD,CACE,EAAGA,EAAO,OAAS,EAAIC,GAAWD,EAAO,CAAC,CAAC,EAAI,EAC/C,EAAG,SAASA,EAAO,CAAC,EAAG,EAAE,EACzB,EAAG,SAASA,EAAO,CAAC,EAAG,EAAE,EACzB,EAAG,SAASA,EAAO,CAAC,EAAG,EAAE,CAC7B,EACE,MACV,CACJ,EChCO,SAASE,IAAO,CACnB,IAAMC,EAAkB,IAAIC,GAAmBC,EAAkB,IAAIC,GACrEC,GAAgBJ,CAAe,EAC/BI,GAAgBF,CAAe,EAC/B,IAAMG,EAAS,IAAIC,GACnB,OAAAD,EAAO,KAAK,EACLA,CACX,CCXO,IAAME,GAAN,KAA8B,CACjC,YAAYC,EAAW,CACnB,KAAK,UAAYA,EACjB,KAAK,KAAO,WAChB,CACJ,ECHA,IAAMC,GAAcC,GAAK,EACpBC,EAAM,IACP,OAAO,YAAcF,ICHlB,SAASG,GAAcC,EAAU,CACpC,IAAMC,EAAkBD,EAAS,gBAAiB,CAAE,GAAAE,EAAI,GAAAC,CAAG,EAAIC,EAAaH,EAAiBD,EAAS,QAAQ,EAAGK,EAAU,KAAK,IAAIH,CAAE,EAAGI,EAAU,KAAK,IAAIH,CAAE,EAAG,CAAE,YAAAI,CAAY,EAAIP,EAAS,OAAQQ,EAAYD,EAAY,WAAYE,EAAYF,EAAY,SAChQ,GAAI,GAACC,GAAa,CAACC,IAGnB,IAAMD,GAAaH,GAAWG,GAAeC,GAAaH,GAAWG,IAAe,CAACT,EAAS,UAC1FA,EAAS,UAAa,CAAC,CAACQ,GAAaH,EAAUG,GAAe,CAAC,CAACC,GAAaH,EAAUG,EACnFD,IACAR,EAAS,SAAS,EAAIA,EAAS,SAAS,EAAI,EAAIA,EAAS,SAAS,GAElES,IACAT,EAAS,SAAS,EAAIA,EAAS,SAAS,EAAI,EAAIA,EAAS,SAAS,YAGhE,CAACQ,GAAaH,EAAUG,KAAe,CAACC,GAAaH,EAAUG,IAAcT,EAAS,UAC5FA,EAAS,UAAY,WAEhBA,EAAS,UAAW,CACzB,IAAMU,EAAMV,EAAS,SAAUW,EAAMX,EAAS,SAC1CQ,IAAeE,EAAI,EAAIT,EAAgB,GAAKU,EAAI,EAAI,GAAOD,EAAI,EAAIT,EAAgB,GAAKU,EAAI,EAAI,KAChGA,EAAI,GAAK,CAACC,EAAU,GAEpBH,IAAeC,EAAI,EAAIT,EAAgB,GAAKU,EAAI,EAAI,GAAOD,EAAI,EAAIT,EAAgB,GAAKU,EAAI,EAAI,KAChGA,EAAI,GAAK,CAACC,EAAU,EAE5B,EACJ,CACO,SAASC,GAAKb,EAAUc,EAAaC,EAAWC,EAAUC,EAAWC,EAAO,CAC/EC,GAAUnB,EAAUkB,CAAK,EACzB,IAAME,EAAiBpB,EAAS,QAASqB,EAAgBD,GAAgB,QAAUA,EAAe,QAAU,GAAK,EAC7GH,GAAaF,IACbf,EAAS,SAAS,GAAMiB,EAAYC,EAAM,QAAW,GAAKH,IAE1DK,GAAgB,QAAUL,IAC1Bf,EAAS,SAAS,GAAMqB,GAAiBD,EAAe,aAAeF,EAAM,SAAY,GAAKH,IAElG,IAAMO,EAAQtB,EAAS,UACvBA,EAAS,SAAS,OAAOsB,CAAK,EAC9B,IAAMC,EAAWvB,EAAS,SAAS,KAAKe,CAAS,EAC7CK,GAAgB,QAChBJ,EAAW,IACT,CAACI,EAAe,SAAWG,EAAS,GAAK,GAAKA,EAAS,GAAKP,GACzDI,EAAe,SAAWG,EAAS,GAAK,GAAKA,EAAS,GAAK,CAACP,KACjEO,EAAS,EAAIF,EAAgBL,EACzBD,IACAf,EAAS,SAAS,EAAIuB,EAAS,EAAIR,IAG3C,IAAMS,EAAgBxB,EAAS,QAAQ,OAAQyB,GAAmB,EAAIzB,EAAS,eAAiBwB,EAAc,aAC9GD,EAAS,OAAOE,CAAe,EAC/B,GAAM,CAAE,SAAAC,CAAS,EAAI1B,EACrB0B,EAAS,MAAMH,CAAQ,EACnBT,EAAY,UACZY,EAAS,GAAK,KAAK,IAAIA,EAAS,EAAI,KAAK,IAAIA,EAAS,CAAC,CAAC,EACxDA,EAAS,GAAK,KAAK,IAAIA,EAAS,EAAI,KAAK,IAAIA,EAAS,CAAC,CAAC,EAEhE,CACO,SAASC,GAAK3B,EAAUe,EAAW,CACtC,IAAMa,EAAY5B,EAAS,UAC3B,GAAI,CAACA,EAAS,KACV,OAEJ,IAAM6B,EAAa,CACf,EAAG7B,EAAS,KAAK,YAAc,YAAc,KAAK,IAAM,KAAK,IAC7D,EAAGA,EAAS,KAAK,YAAc,YAAc,KAAK,IAAM,KAAK,GACjE,EACAA,EAAS,SAAS,EAAIA,EAAS,KAAK,OAAO,EAAIA,EAAS,KAAK,OAAS6B,EAAW,EAAE7B,EAAS,KAAK,KAAK,EACtGA,EAAS,SAAS,EAAIA,EAAS,KAAK,OAAO,EAAIA,EAAS,KAAK,OAAS6B,EAAW,EAAE7B,EAAS,KAAK,KAAK,EACtGA,EAAS,KAAK,QAAUA,EAAS,KAAK,aACtC,IAAM8B,EAAgB,KAAK,IAAIF,EAAU,OAAO,KAAK,MAAOA,EAAU,OAAO,KAAK,MAAM,EACpF5B,EAAS,KAAK,OAAS8B,EAAgB,GACvC9B,EAAS,KAAK,OAAS8B,EAAgB,EACvC9B,EAAS,KAAK,cAAgB,IAEzBA,EAAS,KAAK,OAAS,IAC5BA,EAAS,KAAK,OAAS,EACvBA,EAAS,KAAK,cAAgB,IAElCA,EAAS,KAAK,OAAUe,EAAY,KAAQ,EAAIf,EAAS,KAAK,OAAS8B,EAC3E,CACO,SAASX,GAAUnB,EAAUkB,EAAO,CACvC,IAAMa,EAAmB/B,EAAS,QAASgC,EAAcD,EAAiB,KAAK,KAC/E,GAAI,CAD+FC,EAAY,OAE3G,OAEJ,GAAIhC,EAAS,cAAgBA,EAAS,UAAW,CAC7CA,EAAS,cAAgBkB,EAAM,MAC/B,MACJ,CACA,IAAMe,EAAOjC,EAAS,eAAe,SAASA,EAAUkB,CAAK,EACzDe,GACAjC,EAAS,SAAS,MAAMiC,CAAI,EAE5BD,EAAY,QACZhC,EAAS,SAAS,EAAIkC,EAAMlC,EAAS,SAAS,EAAG,GAAI,CAAC,EACtDA,EAAS,SAAS,EAAIkC,EAAMlC,EAAS,SAAS,EAAG,GAAI,CAAC,GAE1DA,EAAS,cAAgBA,EAAS,SACtC,CACO,SAASmC,GAAwBnC,EAAU,CAC9C,OAAOA,EAAS,KAAK,QAAUA,EAAS,KAAK,OAAS,CAC1D,CCpGA,IAAMoC,GAAa,EACNC,GAAN,KAAgB,CACnB,aAAc,CACV,KAAK,UAAaC,GAAa,CAC3B,IAAMC,EAAYD,EAAS,UAAWE,EAAUF,EAAS,QAASG,EAAcD,EAAQ,KAAK,KAC7F,GAAI,CAACC,EAAY,OACb,OAEJ,IAAMC,EAAUD,EAAY,UAAY,CAAE,EAAG,GAAI,EAAG,EAAG,EAAGE,EAAa,CACnE,EAAID,EAAQ,EAAI,IAAOH,EAAU,OAAO,KAAK,MAC7C,EAAIG,EAAQ,EAAI,IAAOH,EAAU,OAAO,KAAK,MACjD,EAAGK,EAAMN,EAAS,YAAY,EAAGO,EAAWC,EAAYF,EAAKD,CAAU,EAAGI,EAAmBC,EAAcP,EAAY,YAAY,EACnIH,EAAS,OAAO,iBAAmBS,EAAmBR,EAAU,OAAO,WACvED,EAAS,KAAO,CACZ,OAAQK,EACR,UAAWL,EAAS,SAAS,GAAK,EAAI,YAAc,oBACpD,MAAOA,EAAS,SAAS,MACzB,OAAQO,EACR,aAAcP,EAAS,OAAO,gBAClC,CACJ,CACJ,CACA,KAAKA,EAAU,CACX,IAAME,EAAUF,EAAS,QAASW,EAAiBT,EAAQ,KAAK,QAChEF,EAAS,QAAU,CACf,OAAQW,EAAe,OACvB,aAAcD,EAAcC,EAAe,YAAY,EACvD,QAASA,EAAe,OAC5B,EACA,KAAK,UAAUX,CAAQ,CAC3B,CACA,UAAUA,EAAU,CAChB,MAAO,CAACA,EAAS,WAAaA,EAAS,QAAQ,KAAK,MACxD,CACA,KAAKA,EAAUY,EAAO,CAClB,IAAMC,EAAkBb,EAAS,QAASc,EAAcD,EAAgB,KACxE,GAAI,CAACC,EAAY,OACb,OAEJ,IAAMb,EAAYD,EAAS,UAAWe,EAAUd,EAAU,OAAO,WAAYe,EAAaC,GAAwBjB,CAAQ,EAAGkB,GAAalB,EAAS,OAAO,YAAcU,EAAcI,EAAY,KAAK,EAAIC,GACvMd,EAAU,OAAO,aAAckB,EAAanB,EAAS,OAAO,YAAcU,EAAcV,EAAS,QAAQ,KAAK,KAAK,EAAIe,EAAUK,EAAUC,EAAYR,EAAgB,KAAK,KAAK,EAAIE,EAASO,EAAaR,EAAY,KAAOd,EAAS,UAAU,EAAIoB,EAAU,EAAGG,EAAaL,EAAYI,EAAaN,GAAcJ,EAAM,QAAU,GAAMd,GAAY0B,EAAWxB,EAAS,OAAO,UAAYC,EAAU,OAAO,SAChZa,EAAY,KAAK,OACjBW,GAAKzB,EAAUuB,CAAS,EAGxBG,GAAK1B,EAAUc,EAAaS,EAAWC,EAAUL,EAAWP,CAAK,EAErEe,GAAc3B,CAAQ,CAC1B,CACJ,EClDA,eAAsB4B,GAAcC,EAAQC,EAAU,GAAM,CACxD,MAAMD,EAAO,SAAS,OAAQ,IAAM,IAAIE,GAAaD,CAAO,CAChE,CCFO,IAAME,GAAN,KAAmB,CACtB,KAAKC,EAASC,EAAUC,EAAQ,CACvBD,EAAS,cACVA,EAAS,YAAc,CAAE,IAAK,EAAG,IAAK,KAAK,GAAK,CAAE,GAEtD,IAAME,EAAcF,EAAS,YAC7BD,EAAQ,IAAI,EAAG,EAAGE,EAAQC,EAAY,IAAKA,EAAY,IAAK,EAAK,CACrE,CACA,eAAgB,CACZ,MAAO,GACX,CACA,aAAaC,EAAWH,EAAU,CAC9B,IAAMI,EAAYJ,EAAS,UAAWK,EAAQD,GAAW,OAAS,CAC9D,IAAK,IACL,IAAK,CACT,EACAJ,EAAS,YAAeM,EAASD,CAAK,EAKhC,CAAE,IAAMA,EAAM,IAAM,KAAK,GAAM,IAAK,IAAMA,EAAM,IAAM,KAAK,GAAM,GAAI,EAJrE,CACE,IAAK,EACL,IAAMA,EAAQ,KAAK,GAAM,GAC7B,CAER,CACJ,ECvBA,eAAsBE,GAAgBC,EAAQC,EAAU,GAAM,CAC1D,MAAMD,EAAO,SAAS,SAAU,IAAIE,GAAgBD,CAAO,CAC/D,CCFA,SAASE,GAAiBC,EAAOC,EAAYC,EAAgBC,EAAKC,EAAU,CAYxE,GAXI,CAACH,GACD,CAACC,EAAe,SACdD,EAAW,UAAY,GAAK,IAAMA,EAAW,OAAS,IAAMA,EAAW,UAAY,KAGpFA,EAAW,OACZA,EAAW,KAAO,IAEjBA,EAAW,WAAa,GAAK,GAAKA,EAAW,MAAQA,EAAW,WAAa,KAC9EA,EAAW,MAAQD,EAAM,QAExBC,EAAW,WAAa,GAAK,GAAKA,EAAW,MAAQA,EAAW,WAAa,IAC9E,OAEJ,IAAMI,EAASC,EAAcJ,EAAe,MAAM,EAAGK,GAAYN,EAAW,UAAY,GAAKD,EAAM,OAASK,EAAS,IAAKG,EAAQP,EAAW,OAAS,EAClJ,CAACG,GAAYH,EAAW,SAAW,cACnCA,EAAW,OAASM,EAChBN,EAAW,MAAQE,IACdF,EAAW,QACZA,EAAW,MAAQ,GAEvBA,EAAW,QACPG,IACAH,EAAW,OAAS,aACpBA,EAAW,OAASA,EAAW,MAAQE,MAK/CF,EAAW,OAASM,EAChBN,EAAW,MAAQ,IACdA,EAAW,QACZA,EAAW,MAAQ,GAEvBA,EAAW,QACXA,EAAW,OAAS,aACpBA,EAAW,OAASA,EAAW,QAGnCA,EAAW,UAAYO,IAAU,IACjCP,EAAW,UAAYO,GAEvBP,EAAW,MAAQE,IACnBF,EAAW,OAASE,EAE5B,CACO,SAASM,GAAYC,EAAUV,EAAO,CACzC,GAAM,CAAE,EAAGW,EAAY,EAAGC,EAAY,EAAGC,CAAW,EAAIH,EAAS,QAAQ,MAAM,UAAW,CAAE,MAAAI,CAAM,EAAIJ,EACtG,GAAI,CAACI,EACD,OAEJ,GAAM,CAAE,EAAAC,EAAG,EAAAC,EAAG,CAAE,EAAIF,EAChBC,GACAhB,GAAiBC,EAAOe,EAAGJ,EAAY,IAAK,EAAK,EAEjDK,GACAjB,GAAiBC,EAAOgB,EAAGJ,EAAY,IAAK,EAAI,EAEhD,GACAb,GAAiBC,EAAO,EAAGa,EAAY,IAAK,EAAI,CAExD,CC7DO,IAAMI,GAAN,KAAmB,CACtB,YAAYC,EAAW,CACnB,KAAK,UAAYA,CACrB,CACA,KAAKC,EAAU,CACX,IAAMC,EAAWC,GAAgBF,EAAS,QAAQ,MAAOA,EAAS,GAAIA,EAAS,QAAQ,gBAAgB,EACnGC,IACAD,EAAS,MAAQG,GAAuBF,EAAUD,EAAS,QAAQ,MAAM,UAAW,KAAK,UAAU,OAAO,YAAY,EAE9H,CACA,UAAUA,EAAU,CAChB,GAAM,CAAE,EAAGI,EAAY,EAAGC,EAAY,EAAGC,CAAW,EAAIN,EAAS,QAAQ,MAAM,UAAW,CAAE,MAAAO,CAAM,EAAIP,EACtG,MAAQ,CAACA,EAAS,WACd,CAACA,EAAS,WACRO,GAAO,EAAE,QAAU,QAAaH,EAAW,QACxCG,GAAO,EAAE,QAAU,QAAaF,EAAW,QAC3CE,GAAO,EAAE,QAAU,QAAaD,EAAW,OACxD,CACA,OAAON,EAAUQ,EAAO,CACpBC,GAAYT,EAAUQ,CAAK,CAC/B,CACJ,ECtBA,eAAsBE,GAAiBC,EAAQC,EAAU,GAAM,CAC3D,MAAMD,EAAO,mBAAmB,QAAUE,GAAc,IAAIC,GAAaD,CAAS,EAAGD,CAAO,CAChG,CCFA,SAASG,GAAaC,EAAUC,EAAOC,EAAUC,EAAU,CACvD,OAAQH,EAAS,QAAQ,QAAQ,UAAU,QAAS,CAChD,IAAK,MACGC,GAASE,GACTH,EAAS,QAAQ,EAErB,MACJ,IAAK,MACGC,GAASC,GACTF,EAAS,QAAQ,EAErB,KACR,CACJ,CACO,SAASI,GAAcJ,EAAUK,EAAO,CAC3C,IAAMC,EAAON,EAAS,QACtB,GAAIA,EAAS,WAAa,CAACM,GAAM,SAAYA,EAAK,UAAY,GAAK,IAAMA,EAAK,OAAS,IAAMA,EAAK,UAAY,GAC1G,OAEJ,IAAMJ,EAAWI,EAAK,IAAKH,EAAWG,EAAK,IAAKC,EAAQD,EAAK,OAAS,EAOtE,GANKA,EAAK,OACNA,EAAK,KAAO,IAEXA,EAAK,WAAa,GAAK,GAAKA,EAAK,MAAQA,EAAK,WAAa,KAC5DA,EAAK,MAAQD,EAAM,OAElB,GAAAC,EAAK,WAAa,GAAK,GAAKA,EAAK,MAAQA,EAAK,WAAa,IAGhE,QAAQA,EAAK,OAAQ,CACjB,IAAK,aACGA,EAAK,OAASH,GACdG,EAAK,OAAS,aACTA,EAAK,QACNA,EAAK,MAAQ,GAEjBA,EAAK,SAGLA,EAAK,QAAUA,EAAK,UAAY,GAAKD,EAAM,OAE/C,MACJ,IAAK,aACGC,EAAK,OAASJ,GACdI,EAAK,OAAS,aACTA,EAAK,QACNA,EAAK,MAAQ,GAEjBA,EAAK,SAGLA,EAAK,QAAUA,EAAK,UAAY,GAAKD,EAAM,OAE/C,KACR,CACIC,EAAK,UAAYA,EAAK,QAAU,IAChCA,EAAK,UAAYC,GAErBR,GAAaC,EAAUM,EAAK,MAAOJ,EAAUC,CAAQ,EAChDH,EAAS,YACVM,EAAK,MAAQE,EAAMF,EAAK,MAAOJ,EAAUC,CAAQ,GAEzD,CC7DO,IAAMM,GAAN,KAAqB,CACxB,YAAYC,EAAW,CACnB,KAAK,UAAYA,CACrB,CACA,KAAKC,EAAU,CACX,IAAMC,EAAiBD,EAAS,QAAQ,QACxCA,EAAS,QAAUE,GAAkCD,EAAgB,CAAC,EACtE,IAAME,EAAmBF,EAAe,UACpCE,EAAiB,SACjBH,EAAS,QAAQ,SACZI,EAAcD,EAAiB,KAAK,EAAI,IAAO,KAAK,UAAU,OAAO,aACrEA,EAAiB,OAClBH,EAAS,QAAQ,UAAYK,EAAU,GAGnD,CACA,UAAUL,EAAU,CAChB,MAAQ,CAACA,EAAS,WACd,CAACA,EAAS,UACV,CAAC,CAACA,EAAS,SACXA,EAAS,QAAQ,UACfA,EAAS,QAAQ,UAAY,IAAM,IAC/BA,EAAS,QAAQ,UAAY,GAAK,IAC/BA,EAAS,QAAQ,OAAS,IAAMA,EAAS,QAAQ,UAAY,GAC9E,CACA,MAAMA,EAAU,CACRA,EAAS,UACTA,EAAS,QAAQ,KAAO,EACxBA,EAAS,QAAQ,MAAQ,EAEjC,CACA,OAAOA,EAAUM,EAAO,CACf,KAAK,UAAUN,CAAQ,GAG5BO,GAAcP,EAAUM,CAAK,CACjC,CACJ,ECtCA,eAAsBE,GAAmBC,EAAQC,EAAU,GAAM,CAC7D,MAAMD,EAAO,mBAAmB,UAAYE,GAAc,IAAIC,GAAeD,CAAS,EAAGD,CAAO,CACpG,CCFO,SAASG,GAAiBC,EAAM,CACnC,GAAKA,EAAK,UAAY,UAClBA,EAAK,UAAY,qBACjBA,EAAK,UAAY,oBACjBA,EAAK,UAAY,SAChBA,EAAK,YAAc,QAAUA,EAAK,YAAc,QACjD,OAEAA,EAAK,OAAO,MAAQ,GAAKA,EAAK,YAAc,OAC5CA,EAAK,SAAS,SAAS,EAAIA,EAAK,KAAOA,EAAK,OAAO,EAE9CA,EAAK,OAAO,KAAOA,EAAK,WAAW,OAASA,EAAK,YAAc,UACpEA,EAAK,SAAS,SAAS,EAAIA,EAAK,WAAW,MAAQA,EAAK,KAAOA,EAAK,OAAO,GAE/E,IAAMC,EAAWD,EAAK,SAAS,SAAS,EACpCE,EAAU,GACd,GAAKF,EAAK,YAAc,SAAWA,EAAK,OAAO,OAASA,EAAK,WAAW,OAASC,EAAW,GACvFD,EAAK,YAAc,QAAUA,EAAK,OAAO,MAAQ,GAAKC,EAAW,EAAI,CACtE,IAAME,EAAcC,EAASJ,EAAK,SAAS,QAAQ,OAAO,UAAU,EACpEA,EAAK,SAAS,SAAS,GAAK,CAACG,EAC7BD,EAAU,EACd,CACA,GAAI,CAACA,EACD,OAEJ,IAAMG,EAASL,EAAK,OAAO,EAAIA,EAAK,KAChCA,EAAK,OAAO,OAASA,EAAK,WAAW,OAASA,EAAK,YAAc,QACjEA,EAAK,SAAS,SAAS,EAAIA,EAAK,WAAW,MAAQK,EAE9CL,EAAK,OAAO,MAAQ,GAAKA,EAAK,YAAc,SACjDA,EAAK,SAAS,SAAS,EAAIK,GAE3BL,EAAK,UAAY,SACjBA,EAAK,SAAS,QAAQ,CAE9B,CACO,SAASM,GAAeN,EAAM,CACjC,GAAKA,EAAK,UAAY,UAClBA,EAAK,UAAY,mBACjBA,EAAK,UAAY,kBACjBA,EAAK,UAAY,SAChBA,EAAK,YAAc,UAAYA,EAAK,YAAc,MACnD,OAEAA,EAAK,OAAO,OAAS,GAAKA,EAAK,YAAc,MAC7CA,EAAK,SAAS,SAAS,EAAIA,EAAK,KAAOA,EAAK,OAAO,EAE9CA,EAAK,OAAO,IAAMA,EAAK,WAAW,QAAUA,EAAK,YAAc,WACpEA,EAAK,SAAS,SAAS,EAAIA,EAAK,WAAW,OAASA,EAAK,KAAOA,EAAK,OAAO,GAEhF,IAAMC,EAAWD,EAAK,SAAS,SAAS,EACpCE,EAAU,GACd,GAAKF,EAAK,YAAc,UAAYA,EAAK,OAAO,QAAUA,EAAK,WAAW,QAAUC,EAAW,GAC1FD,EAAK,YAAc,OAASA,EAAK,OAAO,KAAO,GAAKC,EAAW,EAAI,CACpE,IAAME,EAAcC,EAASJ,EAAK,SAAS,QAAQ,OAAO,QAAQ,EAClEA,EAAK,SAAS,SAAS,GAAK,CAACG,EAC7BD,EAAU,EACd,CACA,GAAI,CAACA,EACD,OAEJ,IAAMG,EAASL,EAAK,OAAO,EAAIA,EAAK,KAChCA,EAAK,OAAO,QAAUA,EAAK,WAAW,QAAUA,EAAK,YAAc,SACnEA,EAAK,SAAS,SAAS,EAAIA,EAAK,WAAW,OAASK,EAE/CL,EAAK,OAAO,KAAO,GAAKA,EAAK,YAAc,QAChDA,EAAK,SAAS,SAAS,EAAIK,GAE3BL,EAAK,UAAY,SACjBA,EAAK,SAAS,QAAQ,CAE9B,CCtEO,IAAMO,GAAN,KAAoB,CACvB,YAAYC,EAAW,CACnB,KAAK,UAAYA,EACjB,KAAK,MAAQ,CACT,SACA,kBACA,oBACA,iBACA,mBACA,OACJ,CACJ,CACA,OAAOC,EAAUC,EAAWC,EAAOC,EAAS,CACxC,GAAI,CAAC,KAAK,MAAM,SAASA,CAAO,EAC5B,OAEJ,IAAMJ,EAAY,KAAK,UACnBK,EAAU,GACd,OAAW,CAAC,CAAEC,CAAM,IAAKN,EAAU,QAI/B,GAHIM,EAAO,iBAAmB,SAC1BD,EAAUC,EAAO,eAAeL,EAAUE,EAAOD,CAAS,GAE1DG,EACA,MAGR,GAAIA,EACA,OAEJ,IAAME,EAAMN,EAAS,YAAY,EAAGO,EAASP,EAAS,OAAQQ,EAAOR,EAAS,UAAU,EAAGS,EAASC,GAAgBJ,EAAKE,CAAI,EAAGG,EAAaZ,EAAU,OAAO,KAC9Ja,GAAiB,CAAE,SAAAZ,EAAU,QAAAG,EAAS,UAAAF,EAAW,OAAAQ,EAAQ,WAAAE,EAAY,OAAAJ,EAAQ,KAAAC,CAAK,CAAC,EACnFK,GAAe,CAAE,SAAAb,EAAU,QAAAG,EAAS,UAAAF,EAAW,OAAAQ,EAAQ,WAAAE,EAAY,OAAAJ,EAAQ,KAAAC,CAAK,CAAC,CACrF,CACJ,EClCO,IAAMM,GAAN,KAAqB,CACxB,YAAYC,EAAW,CACnB,KAAK,UAAYA,EACjB,KAAK,MAAQ,CAAC,SAAS,CAC3B,CACA,OAAOC,EAAUC,EAAWC,EAAQC,EAAS,CACzC,GAAI,CAAC,KAAK,MAAM,SAASA,CAAO,EAC5B,OAEJ,IAAMJ,EAAY,KAAK,UACvB,OAAQC,EAAS,QAAS,CACtB,IAAK,SACL,IAAK,UACD,GAAII,GAAcJ,EAAS,SAAUD,EAAU,OAAO,KAAMM,EAAO,OAAQL,EAAS,UAAU,EAAGC,CAAS,EACtG,OAEJ,MACJ,IAAK,SAAU,CACX,GAAM,CAAE,GAAAK,EAAI,GAAAC,CAAG,EAAIC,EAAaR,EAAS,SAAUA,EAAS,UAAU,EAChE,CAAE,EAAGS,EAAI,EAAGC,CAAG,EAAIV,EAAS,SAClC,GAAKS,EAAK,GAAKH,EAAKN,EAAS,WAAW,QACnCU,EAAK,GAAKH,EAAKP,EAAS,WAAW,QACnCS,GAAM,GAAKH,EAAK,CAACN,EAAS,WAAW,QACrCU,GAAM,GAAKH,EAAK,CAACP,EAAS,WAAW,OACtC,OAEJ,KACJ,CACJ,CACAD,EAAU,UAAU,OAAOC,EAAU,OAAW,EAAI,CACxD,CACJ,EC/BO,IAAMW,GAAN,KAAkB,CACrB,YAAYC,EAAW,CACnB,KAAK,UAAYA,EACjB,KAAK,MAAQ,CAAC,MAAM,CACxB,CACA,OAAOC,EAAUC,EAAWC,EAAOC,EAAS,CAIxC,GAHI,CAAC,KAAK,MAAM,SAASA,CAAO,GAG3BH,EAAS,QAAQ,KAAK,SAAS,aAC/BC,IAAc,QAAUA,IAAc,UACtCD,EAAS,QAAQ,KAAK,SAAS,WAC3BC,IAAc,OAASA,IAAc,UAC1C,OAEJ,IAAMG,EAAiBJ,EAAS,QAAQ,KAAK,QAASD,EAAY,KAAK,UACjEM,EAAaN,EAAU,OAAO,KAC9BO,EAAUN,EAAS,UAAU,EACnC,GAAKI,EAAe,OAWf,CACD,IAAMG,EAAWP,EAAS,UACrB,CAACI,EAAe,SACjBG,EAAS,EAAIF,EAAW,OAASC,GACjCL,IAAc,UACbG,EAAe,SAAWG,EAAS,EAAI,CAACD,GAAWL,IAAc,QAClEF,EAAU,UAAU,OAAOC,CAAQ,CAE3C,KAnB4B,CACxB,GAAKA,EAAS,SAAS,EAAI,GAAKA,EAAS,SAAS,GAAKK,EAAW,OAASC,GACtEN,EAAS,SAAS,EAAI,GAAKA,EAAS,SAAS,GAAK,CAACM,GACnDN,EAAS,SAAS,EAAI,GAAKA,EAAS,SAAS,GAAKK,EAAW,MAAQC,GACrEN,EAAS,SAAS,EAAI,GAAKA,EAAS,SAAS,GAAK,CAACM,EACpD,OAECE,GAAcR,EAAS,SAAUD,EAAU,OAAO,KAAMU,EAAO,OAAQH,EAASL,CAAS,GAC1FF,EAAU,UAAU,OAAOC,CAAQ,CAE3C,CAUJ,CACJ,ECvCO,IAAMU,GAAN,KAAiB,CACpB,YAAYC,EAAW,CACnB,KAAK,UAAYA,EACjB,KAAK,MAAQ,CAAC,KAAK,CACvB,CACA,OAAOC,EAAUC,EAAWC,EAAOC,EAAS,CACxC,GAAI,CAAC,KAAK,MAAM,SAASA,CAAO,EAC5B,OAEJ,IAAMJ,EAAY,KAAK,UACvB,OAAQC,EAAS,QAAS,CACtB,IAAK,SAAU,CACX,GAAM,CAAE,EAAGI,EAAI,EAAGC,CAAG,EAAIL,EAAS,SAC5BM,EAAUC,EAAO,OACvBD,EAAQ,OAASN,EAAS,WAAW,OACrCM,EAAQ,MAAQN,EAAS,SAAS,MAAQ,KAAK,GAC/CM,EAAQ,MAAMC,EAAO,OAAOP,EAAS,UAAU,CAAC,EAChD,GAAM,CAAE,GAAAQ,EAAI,GAAAC,CAAG,EAAIC,EAAaV,EAAS,SAAUM,CAAO,EAC1D,GAAKF,GAAM,GAAKI,GAAM,GAAOH,GAAM,GAAKI,GAAM,GAAOL,GAAM,GAAKI,GAAM,GAAOH,GAAM,GAAKI,GAAM,EAC1F,OAEJT,EAAS,SAAS,EAAI,KAAK,MAAMW,EAAc,CAC3C,IAAK,EACL,IAAKZ,EAAU,OAAO,KAAK,KAC/B,CAAC,CAAC,EACFC,EAAS,SAAS,EAAI,KAAK,MAAMW,EAAc,CAC3C,IAAK,EACL,IAAKZ,EAAU,OAAO,KAAK,MAC/B,CAAC,CAAC,EACF,GAAM,CAAE,GAAIa,EAAO,GAAIC,CAAM,EAAIH,EAAaV,EAAS,SAAUA,EAAS,UAAU,EACpFA,EAAS,UAAY,KAAK,MAAM,CAACa,EAAO,CAACD,CAAK,EAC9CZ,EAAS,SAAS,MAAQA,EAAS,UACnC,KACJ,CACA,QAAS,CACL,GAAIc,GAAcd,EAAS,SAAUD,EAAU,OAAO,KAAMQ,EAAO,OAAQP,EAAS,UAAU,EAAGC,CAAS,EACtG,OAEJ,OAAQD,EAAS,QAAS,CACtB,IAAK,UAAW,CACZA,EAAS,SAAS,EACd,KAAK,MAAMW,EAAc,CACrB,IAAK,CAACX,EAAS,WAAW,OAC1B,IAAKA,EAAS,WAAW,MAC7B,CAAC,CAAC,EAAIA,EAAS,WAAW,EAC9BA,EAAS,SAAS,EACd,KAAK,MAAMW,EAAc,CACrB,IAAK,CAACX,EAAS,WAAW,OAC1B,IAAKA,EAAS,WAAW,MAC7B,CAAC,CAAC,EAAIA,EAAS,WAAW,EAC9B,GAAM,CAAE,GAAAQ,EAAI,GAAAC,CAAG,EAAIC,EAAaV,EAAS,SAAUA,EAAS,UAAU,EAClEA,EAAS,WAAW,SACpBA,EAAS,UAAY,KAAK,MAAMS,EAAID,CAAE,EACtCR,EAAS,SAAS,MAAQA,EAAS,WAEvC,KACJ,CACA,IAAK,SAAU,CACX,IAAMe,EAAOf,EAAS,QAAQ,KAAK,KAAMgB,EAAajB,EAAU,OAAO,KAAMkB,EAAS,CAClF,OAAQD,EAAW,OAAShB,EAAS,UAAU,EAAIA,EAAS,OAAO,EACnE,KAAM,CAACA,EAAS,UAAU,EAAIA,EAAS,OAAO,EAC9C,MAAOgB,EAAW,MAAQhB,EAAS,UAAU,EAAIA,EAAS,OAAO,EACjE,IAAK,CAACA,EAAS,UAAU,EAAIA,EAAS,OAAO,CACjD,EAAGkB,EAAYlB,EAAS,UAAU,EAAGmB,EAAaC,GAAgBpB,EAAS,SAAUkB,CAAS,EAC1FjB,IAAc,SACdkB,EAAW,KAAOH,EAAW,MAAQhB,EAAS,OAAO,GACrDA,EAAS,SAAS,EAAIiB,EAAO,KAC7BjB,EAAS,gBAAgB,EAAIA,EAAS,SAAS,EAC1Ce,IACDf,EAAS,SAAS,EAAIqB,EAAU,EAAIL,EAAW,OAC/ChB,EAAS,gBAAgB,EAAIA,EAAS,SAAS,IAG9CC,IAAc,QAAUkB,EAAW,MAAQ,CAACnB,EAAS,OAAO,IACjEA,EAAS,SAAS,EAAIiB,EAAO,MAC7BjB,EAAS,gBAAgB,EAAIA,EAAS,SAAS,EAC1Ce,IACDf,EAAS,SAAS,EAAIqB,EAAU,EAAIL,EAAW,OAC/ChB,EAAS,gBAAgB,EAAIA,EAAS,SAAS,IAGnDC,IAAc,UACdkB,EAAW,IAAMH,EAAW,OAAShB,EAAS,OAAO,GAChDe,IACDf,EAAS,SAAS,EAAIqB,EAAU,EAAIL,EAAW,MAC/ChB,EAAS,gBAAgB,EAAIA,EAAS,SAAS,GAEnDA,EAAS,SAAS,EAAIiB,EAAO,IAC7BjB,EAAS,gBAAgB,EAAIA,EAAS,SAAS,GAE1CC,IAAc,OAASkB,EAAW,OAAS,CAACnB,EAAS,OAAO,IAC5De,IACDf,EAAS,SAAS,EAAIqB,EAAU,EAAIL,EAAW,MAC/ChB,EAAS,gBAAgB,EAAIA,EAAS,SAAS,GAEnDA,EAAS,SAAS,EAAIiB,EAAO,OAC7BjB,EAAS,gBAAgB,EAAIA,EAAS,SAAS,GAEnD,KACJ,CACJ,CACA,KACJ,CACJ,CACJ,CACJ,ECtGO,IAAMsB,GAAN,KAAyB,CAC5B,YAAYC,EAAW,CACnB,KAAK,UAAYA,EACjB,KAAK,eAAiB,CAACC,EAAUC,EAAOC,EAASC,IAAc,CAC3D,QAAWC,KAAW,KAAK,SACvBA,EAAQ,OAAOJ,EAAUG,EAAWF,EAAOC,CAAO,CAE1D,EACA,KAAK,SAAW,CACZ,IAAIG,GAAcN,CAAS,EAC3B,IAAIO,GAAeP,CAAS,EAC5B,IAAIQ,GAAWR,CAAS,EACxB,IAAIS,GAAYT,CAAS,CAC7B,CACJ,CACA,MAAO,CACP,CACA,UAAUC,EAAU,CAChB,MAAO,CAACA,EAAS,WAAa,CAACA,EAAS,QAC5C,CACA,OAAOA,EAAUC,EAAO,CACpB,IAAMQ,EAAWT,EAAS,QAAQ,KAAK,SACvC,KAAK,eAAeA,EAAUC,EAAOQ,EAAS,QAAUA,EAAS,QAAS,QAAQ,EAClF,KAAK,eAAeT,EAAUC,EAAOQ,EAAS,MAAQA,EAAS,QAAS,MAAM,EAC9E,KAAK,eAAeT,EAAUC,EAAOQ,EAAS,OAASA,EAAS,QAAS,OAAO,EAChF,KAAK,eAAeT,EAAUC,EAAOQ,EAAS,KAAOA,EAAS,QAAS,KAAK,CAChF,CACJ,EC9BA,eAAsBC,GAAoBC,EAAQC,EAAU,GAAM,CAC9D,MAAMD,EAAO,mBAAmB,WAAaE,GAAc,IAAIC,GAAmBD,CAAS,EAAGD,CAAO,CACzG,CCFA,SAASG,GAAaC,EAAUC,EAAOC,EAAUC,EAAU,CACvD,OAAQH,EAAS,QAAQ,KAAK,UAAU,QAAS,CAC7C,IAAK,MACGC,GAASE,GACTH,EAAS,QAAQ,EAErB,MACJ,IAAK,MACGC,GAASC,GACTF,EAAS,QAAQ,EAErB,KACR,CACJ,CACO,SAASI,GAAWJ,EAAUK,EAAO,CACxC,IAAMC,EAAON,EAAS,KACtB,GAAIA,EAAS,WACT,CAACM,GACD,CAACA,EAAK,SACJA,EAAK,UAAY,GAAK,IAAMA,EAAK,OAAS,IAAMA,EAAK,UAAY,GACnE,OAEJ,IAAMC,GAAgBD,EAAK,UAAY,GAAKD,EAAM,OAAQH,EAAWI,EAAK,IAAKH,EAAWG,EAAK,IAAKE,EAAQF,EAAK,OAAS,EAO1H,GANKA,EAAK,OACNA,EAAK,KAAO,IAEXA,EAAK,WAAa,GAAK,GAAKA,EAAK,MAAQA,EAAK,WAAa,KAC5DA,EAAK,MAAQD,EAAM,OAElB,GAAAC,EAAK,WAAa,GAAK,GAAKA,EAAK,MAAQA,EAAK,WAAa,IAGhE,QAAQA,EAAK,OAAQ,CACjB,IAAK,aACGA,EAAK,OAASH,GACdG,EAAK,OAAS,aACTA,EAAK,QACNA,EAAK,MAAQ,GAEjBA,EAAK,SAGLA,EAAK,OAASC,EAElB,MACJ,IAAK,aACGD,EAAK,OAASJ,GACdI,EAAK,OAAS,aACTA,EAAK,QACNA,EAAK,MAAQ,GAEjBA,EAAK,SAGLA,EAAK,OAASC,CAE1B,CACID,EAAK,UAAYE,IAAU,IAC3BF,EAAK,UAAYE,GAErBT,GAAaC,EAAUM,EAAK,MAAOJ,EAAUC,CAAQ,EAChDH,EAAS,YACVM,EAAK,MAAQG,EAAMH,EAAK,MAAOJ,EAAUC,CAAQ,GAEzD,CC/DO,IAAMO,GAAN,KAAkB,CACrB,KAAKC,EAAU,CACX,IAAMC,EAAYD,EAAS,UAAWE,EAAcF,EAAS,QAAQ,KAAMG,EAAgBD,EAAY,UACnGC,EAAc,SACdH,EAAS,KAAK,UACRA,EAAS,OAAO,oBAAsBC,EAAU,OAAO,oBAAsB,IAC3EA,EAAU,OAAO,aACpBE,EAAc,OACfH,EAAS,KAAK,UAAYI,EAAU,GAGhD,CACA,UAAUJ,EAAU,CAChB,MAAQ,CAACA,EAAS,WACd,CAACA,EAAS,UACVA,EAAS,KAAK,UACZA,EAAS,KAAK,UAAY,IAAM,IAC5BA,EAAS,KAAK,UAAY,GAAK,IAAMA,EAAS,KAAK,OAAS,IAAMA,EAAS,KAAK,UAAY,GAC1G,CACA,MAAMA,EAAU,CACZA,EAAS,KAAK,MAAQ,CAC1B,CACA,OAAOA,EAAUK,EAAO,CACf,KAAK,UAAUL,CAAQ,GAG5BM,GAAWN,EAAUK,CAAK,CAC9B,CACJ,EC7BA,eAAsBE,GAAgBC,EAAQC,EAAU,GAAM,CAC1D,MAAMD,EAAO,mBAAmB,OAAQ,IAAM,IAAIE,GAAeD,CAAO,CAC5E,CCGA,eAAsBE,GAAUC,EAAQC,EAAU,GAAM,CACpD,MAAMC,GAAcF,EAAQ,EAAK,EACjC,MAAMG,GAAgBH,EAAQ,EAAK,EACnC,MAAMI,GAAiBJ,EAAQ,EAAK,EACpC,MAAMK,GAAmBL,EAAQ,EAAK,EACtC,MAAMM,GAAoBN,EAAQ,EAAK,EACvC,MAAMO,GAAgBP,EAAQ,EAAK,EACnC,MAAMA,EAAO,QAAQC,CAAO,CAChC,CCbO,IAAMO,GAAN,cAAyBC,CAAO,CACnC,YAAYC,EAAGC,EAAGC,EAAQC,EAAY,CAClC,MAAMH,EAAGC,EAAGC,CAAM,EAClB,KAAK,WAAaC,EAClB,KAAK,WAAa,CAAE,GAAGA,CAAW,CACtC,CACA,SAASC,EAAO,CACZ,GAAM,CAAE,MAAAC,EAAO,OAAAC,CAAO,EAAI,KAAK,WACzB,CAAE,EAAAN,EAAG,EAAAC,CAAE,EAAIG,EACjB,OAAQ,MAAM,SAASA,CAAK,GACxB,MAAM,SAAS,CAAE,EAAGJ,EAAIK,EAAO,EAAAJ,CAAE,CAAC,GAClC,MAAM,SAAS,CAAE,EAAGD,EAAIK,EAAO,EAAGJ,EAAIK,CAAO,CAAC,GAC9C,MAAM,SAAS,CAAE,EAAAN,EAAG,EAAGC,EAAIK,CAAO,CAAC,CAC3C,CACA,WAAWC,EAAO,CACd,GAAI,MAAM,WAAWA,CAAK,EACtB,MAAO,GAEX,IAAMC,EAAOD,EAAOE,EAASF,EAAOG,EAAS,CACzC,EAAGH,EAAM,SAAS,EAAI,KAAK,WAAW,MACtC,EAAGA,EAAM,SAAS,EAAI,KAAK,WAAW,MAC1C,EACA,GAAIE,EAAO,SAAW,OAAW,CAC7B,IAAME,EAAe,IAAIZ,EAAOW,EAAO,EAAGA,EAAO,EAAGD,EAAO,OAAS,CAAC,EACrE,OAAO,MAAM,WAAWE,CAAY,CACxC,SACSH,EAAK,OAAS,OAAW,CAC9B,IAAMI,EAAS,IAAIC,EAAUH,EAAO,EAAGA,EAAO,EAAGF,EAAK,KAAK,MAAQ,EAAGA,EAAK,KAAK,OAAS,CAAC,EAC1F,OAAO,MAAM,WAAWI,CAAM,CAClC,CACA,MAAO,EACX,CACJ,EChCO,IAAME,GAAN,KAAkB,CACrB,aAAc,CACV,KAAK,KAAO,EACZ,KAAK,MAAQ,IAAIC,EACjB,KAAK,MAAM,MAAQ,OACnB,KAAK,OAAS,EAClB,CACA,KAAKC,EAAM,CACFA,IAGDA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAErB,KAAK,MAAQD,EAAa,OAAO,KAAK,MAAOC,EAAK,KAAK,EACnDA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAE3B,CACJ,ECnBO,IAAMC,GAAN,KAAoB,CACvB,aAAc,CACV,KAAK,OAAS,GACd,KAAK,UAAY,CACrB,CACA,KAAKC,EAAM,CACFA,IAGDA,EAAK,QAAU,SACf,KAAK,MAAQC,EAAa,OAAO,KAAK,MAAOD,EAAK,KAAK,GAEvDA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,YAAc,SACnB,KAAK,UAAYA,EAAK,WAEtBA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,SAE5B,CACJ,ECpBO,IAAME,GAAN,KAAY,CACf,aAAc,CACV,KAAK,MAAQ,GACb,KAAK,MAAQ,IAAIC,EACjB,KAAK,MAAM,MAAQ,OACnB,KAAK,QAAU,GACf,KAAK,SAAW,IAChB,KAAK,OAAS,GACd,KAAK,UAAY,EACjB,KAAK,QAAU,EACf,KAAK,OAAS,IAAIC,GAClB,KAAK,UAAY,IAAIC,GACrB,KAAK,MAAQ,EACb,KAAK,KAAO,EAChB,CACA,KAAKC,EAAM,CACFA,IAGDA,EAAK,KAAO,SACZ,KAAK,GAAKA,EAAK,IAEfA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAEtB,KAAK,MAAQH,EAAa,OAAO,KAAK,MAAOG,EAAK,KAAK,EACnDA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,SAEpBA,EAAK,WAAa,SAClB,KAAK,SAAWA,EAAK,UAErBA,EAAK,SAAW,SAChB,KAAK,OAASA,EAAK,QAEnBA,EAAK,YAAc,SACnB,KAAK,UAAYA,EAAK,WAEtBA,EAAK,UAAY,SACjB,KAAK,QAAUA,EAAK,SAExB,KAAK,OAAO,KAAKA,EAAK,MAAM,EAC5B,KAAK,UAAU,KAAKA,EAAK,SAAS,EAC9BA,EAAK,QAAU,SACf,KAAK,MAAQA,EAAK,OAElBA,EAAK,OAAS,SACd,KAAK,KAAOA,EAAK,MAEzB,CACJ,EClDA,SAASC,GAAgBC,EAAMC,EAAMC,EAAaC,EAAYC,EAAM,CAChE,GAAM,CAAE,GAAAC,EAAI,GAAAC,EAAI,SAAAC,CAAS,EAAIC,EAAaR,EAAMC,CAAI,EACpD,GAAI,CAACG,GAAQG,GAAYL,EACrB,OAAOK,EAEX,IAAME,EAAW,CACb,EAAG,KAAK,IAAIJ,CAAE,EACd,EAAG,KAAK,IAAIC,CAAE,CAClB,EAAGI,EAAgB,CACf,EAAG,KAAK,IAAID,EAAS,EAAGN,EAAW,MAAQM,EAAS,CAAC,EACrD,EAAG,KAAK,IAAIA,EAAS,EAAGN,EAAW,OAASM,EAAS,CAAC,CAC1D,EACA,OAAO,KAAK,KAAKC,EAAc,GAAK,EAAIA,EAAc,GAAK,CAAC,CAChE,CACO,IAAMC,GAAN,cAAqBC,EAAwB,CAChD,YAAYC,EAAW,CACnB,MAAMA,CAAS,EACf,KAAK,UAAaC,GAAO,CACrB,GAAI,CAACA,EAAG,QAAQ,MACZ,OAEJ,IAAMD,EAAY,KAAK,cAAeE,EAAeD,EAAG,QAAQ,MAC5DE,EAAYD,EAAa,KAAO,OAC9BF,EAAU,UAAU,WACpBA,EAAU,UAAU,YAAY,IAAIE,EAAa,EAAE,EACzD,GAAIC,EACA,OAEJ,IAAMC,EAAWF,EAAa,MAC9BC,EAAYE,GAAmBD,EAAUF,EAAa,MAAOA,EAAa,OAAO,EAC7EA,EAAa,KAAO,OACpBF,EAAU,UAAU,WAAaG,EAGjCH,EAAU,UAAU,YAAY,IAAIE,EAAa,GAAIC,CAAS,CAEtE,EACA,KAAK,cAAgBH,CACzB,CACA,OAAQ,CACR,CACA,MAAO,CACH,KAAK,cAAc,UAAU,WAAa,OAC1C,KAAK,cAAc,UAAU,YAAc,IAAI,GACnD,CACA,MAAM,SAASC,EAAI,CACf,GAAI,CAACA,EAAG,QAAQ,MACZ,OAEJA,EAAG,MAAQ,CAAC,EACZ,IAAMd,EAAOc,EAAG,YAAY,EAAGD,EAAY,KAAK,UAAWV,EAAaU,EAAU,OAAO,KACzF,GAAIb,EAAK,EAAI,GAAKA,EAAK,EAAI,GAAKA,EAAK,EAAIG,EAAW,OAASH,EAAK,EAAIG,EAAW,OAC7E,OAEJ,IAAMgB,EAAWL,EAAG,QAAQ,MAAOM,EAAaD,EAAS,QAASjB,EAAcY,EAAG,OAAO,eAAiB,EAAGV,EAAOe,EAAS,KAAME,EAAQjB,EACtI,IAAIkB,GAAWtB,EAAK,EAAGA,EAAK,EAAGE,EAAaC,CAAU,EACtD,IAAIoB,EAAOvB,EAAK,EAAGA,EAAK,EAAGE,CAAW,EAAGsB,EAAQX,EAAU,UAAU,SAAS,MAAMQ,CAAK,EAC/F,QAAWI,KAAMD,EAAO,CACpB,IAAME,EAAWD,EAAG,QAAQ,MAC5B,GAAIX,IAAOW,GACP,CAACC,GAAU,QACXP,EAAS,KAAOO,EAAS,IACzBD,EAAG,UACHA,EAAG,WACH,CAACA,EAAG,OACJX,EAAG,MAAM,KAAMa,GAAMA,EAAE,cAAgBF,CAAE,GACzCA,EAAG,MAAM,KAAME,GAAMA,EAAE,cAAgBb,CAAE,EACzC,SAEJ,IAAMb,EAAOwB,EAAG,YAAY,EAC5B,GAAIxB,EAAK,EAAI,GAAKA,EAAK,EAAI,GAAKA,EAAK,EAAIE,EAAW,OAASF,EAAK,EAAIE,EAAW,OAC7E,SAEJ,IAAMI,EAAWR,GAAgBC,EAAMC,EAAMC,EAAaC,EAAYC,GAAQsB,EAAS,IAAI,EAC3F,GAAInB,EAAWL,EACX,SAEJ,IAAM0B,GAAe,EAAIrB,EAAWL,GAAekB,EACnD,KAAK,UAAUN,CAAE,EACjBA,EAAG,MAAM,KAAK,CACV,YAAaW,EACb,QAASG,CACb,CAAC,CACL,CACJ,CACA,UAAUC,EAAU,CAChB,MAAO,CAAC,CAACA,EAAS,QAAQ,OAAO,MACrC,CACA,qBAAqBC,KAAYC,EAAS,CACjCD,EAAQ,QACTA,EAAQ,MAAQ,IAAIE,IAExB,QAAWC,KAAUF,EACjBD,EAAQ,MAAM,KAAKG,GAAQ,OAASA,GAAQ,YAAcA,GAAQ,WAAW,CAErF,CACA,OAAQ,CACR,CACJ,ECpGA,eAAsBC,GAAqBC,EAAQC,EAAU,GAAM,CAC/D,MAAMD,EAAO,cAAc,iBAAmBE,GAAc,IAAIC,GAAOD,CAAS,EAAGD,CAAO,CAC9F,CCFO,SAASG,GAAaC,EAAQ,CACjC,IAAIC,EAAQ,GACN,CAAE,MAAAC,EAAO,IAAAC,EAAK,YAAAC,EAAa,QAAAC,EAAS,WAAAC,EAAY,MAAAC,EAAO,eAAAC,EAAgB,UAAAC,EAAW,QAAAC,EAAS,MAAAC,CAAM,EAAIX,EAC3G,GAAIY,EAAYV,EAAOC,CAAG,GAAKC,EAC3BS,GAASR,EAASH,EAAOC,CAAG,EAC5BF,EAAQ,WAEHU,EAAM,KAAM,CACjB,IAAIG,EACAC,EACEC,EAAQ,CACV,EAAGb,EAAI,EAAIG,EAAW,MACtB,EAAGH,EAAI,CACX,EACMc,EAAKC,EAAahB,EAAOc,CAAK,EACpC,GAAIC,EAAG,UAAYb,EAAa,CAC5B,IAAMe,EAAKjB,EAAM,EAAKe,EAAG,GAAKA,EAAG,GAAMf,EAAM,EAC7CY,EAAM,CAAE,EAAG,EAAG,EAAGK,CAAG,EACpBJ,EAAM,CAAE,EAAGT,EAAW,MAAO,EAAGa,CAAG,CACvC,KACK,CACD,IAAMC,EAAQ,CACV,EAAGjB,EAAI,EACP,EAAGA,EAAI,EAAIG,EAAW,MAC1B,EACMe,EAAKH,EAAahB,EAAOkB,CAAK,EACpC,GAAIC,EAAG,UAAYjB,EAAa,CAE5B,IAAMkB,EAAK,EADApB,EAAM,EAAKmB,EAAG,GAAKA,EAAG,GAAMnB,EAAM,IAC3BmB,EAAG,GAAKA,EAAG,IAC7BP,EAAM,CAAE,EAAGQ,EAAI,EAAG,CAAE,EACpBP,EAAM,CAAE,EAAGO,EAAI,EAAGhB,EAAW,MAAO,CACxC,KACK,CACD,IAAMiB,EAAQ,CACV,EAAGpB,EAAI,EAAIG,EAAW,MACtB,EAAGH,EAAI,EAAIG,EAAW,MAC1B,EACMkB,EAAKN,EAAahB,EAAOqB,CAAK,EACpC,GAAIC,EAAG,UAAYpB,EAAa,CAC5B,IAAMe,GAAKjB,EAAM,EAAKsB,EAAG,GAAKA,EAAG,GAAMtB,EAAM,EAE7CY,EAAM,CAAE,EADG,CAACK,IAAMK,EAAG,GAAKA,EAAG,IACd,EAAGL,EAAG,EACrBJ,EAAM,CAAE,EAAGD,EAAI,EAAIR,EAAW,MAAO,EAAGQ,EAAI,EAAIR,EAAW,MAAO,CACtE,CACJ,CACJ,CACIQ,GAAOC,IACPF,GAASR,EAASH,EAAOY,CAAG,EAC5BD,GAASR,EAASF,EAAKY,CAAG,EAC1Bd,EAAQ,GAEhB,CACA,GAAI,CAACA,EACD,OAEJI,EAAQ,UAAYE,EAChBC,EAAe,SACfH,EAAQ,yBAA2BG,EAAe,WAEtDH,EAAQ,YAAcoB,EAAgBhB,EAAWC,CAAO,EACxD,GAAM,CAAE,OAAAgB,CAAO,EAAIf,EACnB,GAAIe,EAAO,OAAQ,CACf,IAAMC,EAAcC,EAAgBF,EAAO,KAAK,EAC5CC,IACAtB,EAAQ,WAAaqB,EAAO,KAC5BrB,EAAQ,YAAcoB,EAAgBE,CAAW,EAEzD,CACAtB,EAAQ,OAAO,CACnB,CACO,SAASwB,GAAiB7B,EAAQ,CACrC,GAAM,CAAE,QAAAK,EAAS,KAAAyB,EAAM,KAAAC,EAAM,KAAAC,EAAM,eAAAxB,EAAgB,cAAAyB,EAAe,gBAAAC,CAAgB,EAAIlC,EACtFmC,GAAa9B,EAASyB,EAAMC,EAAMC,CAAI,EAClCxB,EAAe,SACfH,EAAQ,yBAA2BG,EAAe,WAEtDH,EAAQ,UAAYoB,EAAgBQ,EAAeC,CAAe,EAClE7B,EAAQ,KAAK,CACjB,CACO,SAAS+B,GAAWC,EAAK,CAC5B,OAAAA,EAAI,KAAK,CAACC,EAAGC,IAAMD,EAAIC,CAAC,EACjBF,EAAI,KAAK,GAAG,CACvB,CACO,SAASG,GAAiBC,EAAWC,EAAY,CACpD,IAAMC,EAAMP,GAAWK,EAAU,IAAKG,GAAMA,EAAE,EAAE,CAAC,EAC7CC,EAAMH,EAAW,IAAIC,CAAG,EAC5B,OAAIE,IAAQ,SACRA,EAAMC,EAAU,EAChBJ,EAAW,IAAIC,EAAKE,CAAG,GAEpBA,CACX,CC1FO,IAAME,GAAN,KAAmB,CACtB,YAAYC,EAAW,CACnB,KAAK,UAAYA,EACjB,KAAK,cAAgB,CAACC,EAAIC,IAAS,CAC/B,IAAMC,EAAiBF,EAAG,QAAQ,MAClC,GAAI,CAACE,GAAgB,OACjB,OAEJ,IAAMH,EAAY,KAAK,UAAWI,EAAUJ,EAAU,cAAeK,EAAKH,EAAK,YAAaI,EAAOL,EAAG,YAAY,EAAGM,EAAOF,EAAG,YAAY,EACvIG,EAAUN,EAAK,QACnBF,EAAU,OAAO,KAAMS,GAAQ,CAC3B,IAAIC,EACEC,EAAUV,EAAG,QAAQ,SAAS,MACpC,GAAIU,GAAS,OAAQ,CACjB,IAAMC,EAAcD,EAAQ,UAAWE,EAAaC,EAAgBH,EAAQ,KAAK,EAAeI,EAAU,EAAIH,GAC7FC,IACbH,EAAYG,EACZL,EAAUQ,EAAcL,EAAQ,OAAO,EAE/C,CACA,GAAI,CAACD,EAAW,CACZ,IAAMO,EAAYd,EAAe,KAAO,OAClCH,EAAU,UAAU,YAAY,IAAIG,EAAe,EAAE,EACrDH,EAAU,UAAU,WAC1BU,EAAYQ,GAAajB,EAAII,EAAIY,CAAS,CAC9C,CACA,GAAI,CAACP,EACD,OAEJ,IAAMS,EAAQlB,EAAG,OAAO,YAAc,EAAGmB,EAAcnB,EAAG,OAAO,eAAiB,EAAG,CAAE,eAAAoB,CAAe,EAAIjB,EAC1GkB,GAAa,CACT,QAASb,EACT,MAAAU,EACA,MAAOb,EACP,IAAKC,EACL,YAAAa,EACA,WAAYpB,EAAU,OAAO,KAC7B,MAAOG,EACP,eAAgBkB,EAChB,UAAAX,EACA,QAAAF,CACJ,CAAC,CACL,CAAC,CACL,EACA,KAAK,kBAAoB,CAACP,EAAIsB,EAAOC,IAAU,CAC3C,IAAMC,EAAexB,EAAG,QAAQ,MAChC,GAAI,CAACwB,GAAc,OACf,OAEJ,IAAMC,EAAkBD,EAAa,UACrC,GAAI,CAACC,EAAgB,OACjB,OAEJ,IAAM1B,EAAY,KAAK,UAAWI,EAAUJ,EAAU,cAAeK,EAAKkB,EAAM,YAAaI,EAAKH,EAAM,YAAaI,EAAkBF,EAAgB,UAAYH,EAAM,QAAUC,EAAM,SAAW,EAChMI,GAAmB,GAGvB5B,EAAU,OAAO,KAAMS,GAAQ,CAC3B,IAAMH,EAAOL,EAAG,YAAY,EAAGM,EAAOF,EAAG,YAAY,EAAGwB,EAAOF,EAAG,YAAY,EAAGG,EAAgB7B,EAAG,OAAO,eAAiB,EAC5H,GAAI8B,EAAYzB,EAAMC,CAAI,EAAIuB,GAC1BC,EAAYF,EAAMtB,CAAI,EAAIuB,GAC1BC,EAAYF,EAAMvB,CAAI,EAAIwB,EAC1B,OAEJ,IAAIE,EAAgBlB,EAAgBY,EAAgB,KAAK,EACzD,GAAI,CAACM,EAAe,CAChB,IAAMf,EAAYQ,EAAa,KAAO,OAChCzB,EAAU,UAAU,YAAY,IAAIyB,EAAa,EAAE,EACnDzB,EAAU,UAAU,WAC1BgC,EAAgBd,GAAajB,EAAII,EAAIY,CAAS,CAClD,CACKe,GAGLC,GAAiB,CACb,QAASxB,EACT,KAAAH,EACA,KAAAC,EACA,KAAAsB,EACA,eAAgBzB,EAAQ,eACxB,cAAA4B,EACA,gBAAAJ,CACJ,CAAC,CACL,CAAC,CACL,EACA,KAAK,eAAiB,CAACxB,EAASH,EAAIC,EAAMgC,IAAY,CAClD,IAAM7B,EAAKH,EAAK,YAChB,GAAI,EAAEE,EAAQ,OAAO,UAAU,QAAUC,EAAG,QAAQ,OAAO,UAAU,QACjE,OAEJ,IAAM8B,EAAW9B,EAAG,OAAO,OAAQ+B,GAAM,CACrC,IAAMC,EAAW,KAAK,kBAAkBhC,EAAI+B,EAAE,WAAW,EACzD,OAAQ/B,EAAG,QAAQ,OACfgC,GAAYhC,EAAG,QAAQ,MAAM,WAC7B6B,EAAQ,UAAWI,GAAMA,EAAE,cAAgBF,EAAE,WAAW,GAAK,CACrE,CAAC,EACD,GAAKD,GAAU,OAGf,QAAWI,KAAUJ,EAAU,CAC3B,IAAMR,EAAKY,EAAO,YAA4B,KAAK,sBAAsBtC,EAAII,EAAIsB,CAAE,EAChEvB,EAAQ,MAAM,UAAU,WAG3C,KAAK,kBAAkBH,EAAIC,EAAMqC,CAAM,CAC3C,CACJ,EACA,KAAK,kBAAoB,CAACtC,EAAII,IACnBmC,GAAiB,CAACvC,EAAII,CAAE,EAAG,KAAK,OAAO,KAAK,EAEvD,KAAK,sBAAwB,CAACJ,EAAII,EAAIsB,IAC3Ba,GAAiB,CAACvC,EAAII,EAAIsB,CAAE,EAAG,KAAK,OAAO,SAAS,EAE/D,KAAK,OAAS,CACV,MAAO,IAAI,IACX,UAAW,IAAI,GACnB,CACJ,CACA,aAAac,EAASC,EAAU,CAC5B,GAAM,CAAE,MAAAC,EAAO,QAAAvC,CAAQ,EAAIsC,EAC3B,GAAI,CAACC,GAASA,EAAM,QAAU,EAC1B,OAEJ,IAAMT,EAAUS,EAAM,OAAQL,GAAMlC,EAAQ,OAAS,KAAK,kBAAkBsC,EAAUJ,EAAE,WAAW,GAAKlC,EAAQ,MAAM,SAAS,EAC/H,QAAWF,KAAQgC,EACf,KAAK,eAAe9B,EAASsC,EAAUxC,EAAMgC,CAAO,EAChDhC,EAAK,QAAU,IAAMwC,EAAS,OAAO,YAAc,GAAK,GACxD,KAAK,cAAcA,EAAUxC,CAAI,CAG7C,CACA,MAAM,MAAO,CACT,KAAK,OAAO,MAAQ,IAAI,IACxB,KAAK,OAAO,UAAY,IAAI,GAChC,CACA,gBAAgBwC,EAAU,CAEtB,GADAA,EAAS,MAAQ,CAAC,EACd,CAACA,EAAS,QAAQ,MAClB,OAEJ,IAAME,EAAQ,KAAK,UAAU,OAAO,WAAY,CAAE,OAAAC,CAAO,EAAIH,EAAU,CAAE,SAAAI,EAAU,MAAA3B,CAAM,EAAIuB,EAAS,QAAQ,MAC9GG,EAAO,cAAgBC,EAAWF,EAClCC,EAAO,WAAa1B,EAAQyB,CAChC,CACA,kBAAkBF,EAAU,CACxBA,EAAS,MAAQ,CAAC,CACtB,CACJ,ECpJA,IAAMK,GAAN,KAAkB,CACd,aAAc,CACV,KAAK,GAAK,OACd,CACA,UAAUC,EAAW,CACjB,OAAO,IAAIC,GAAaD,CAAS,CACrC,CACA,aAAc,CACd,CACA,aAAc,CACV,MAAO,EACX,CACJ,EACA,eAAsBE,GAAgBC,EAAQC,EAAU,GAAM,CAC1D,IAAMC,EAAS,IAAIN,GACnB,MAAMI,EAAO,UAAUE,EAAQD,CAAO,CAC1C,CCfA,eAAsBE,GAA8BC,EAAQC,EAAU,GAAM,CACxE,MAAMC,GAAqBF,EAAQC,CAAO,EAC1C,MAAME,GAAgBH,EAAQC,CAAO,CACzC,CCLO,IAAMG,GAAU,CACnB,WAAY,CACR,MAAO,SACX,EACA,UAAW,CACP,OAAQ,CACJ,MAAO,GACX,EACA,MAAO,CACH,SAAU,IACV,OAAQ,EACZ,EACA,KAAM,CACF,OAAQ,EACZ,EACA,KAAM,CACF,MAAO,CACX,EACA,MAAO,CACH,KAAM,QACV,CACJ,CACJ,ECnBA,eAAsBC,GAAgBC,EAAQC,EAAU,GAAM,CAC1D,MAAMC,GAAUF,EAAQ,EAAK,EAC7B,MAAMG,GAA8BH,EAAQ,EAAK,EACjD,MAAMA,EAAO,UAAU,QAASI,GAASH,CAAO,CACpD,CCJA,OAAO,iBAAiB,OAAQ,SAAY,CAC1C,MAAMI,GAAgBC,EAAW,EACjC,IAAMC,EAAY,MAAMD,GAAY,KAAK,YAAa,CACpD,OAAQ,QACR,WAAY,GACZ,OAAQ,CACN,CACE,KAAM,OACN,QAAS,CACP,UAAW,CACT,MAAO,CACL,MAAO,CAAC,UAAW,UAAW,SAAS,CACzC,EACA,YAAa,CACX,MAAO,SACT,CACF,CACF,CACF,EACA,CACE,KAAM,QACN,QAAS,CACP,UAAW,CACT,MAAO,CACL,MAAO,CAAC,UAAW,UAAW,SAAS,CACzC,EACA,YAAa,CACX,MAAO,SACT,CACF,CACF,CACF,CACF,EACA,WAAY,CACV,QAAS,CACX,EACA,UAAW,CACT,YAAa,CACX,QAAS,GACT,MAAO,CACT,EACA,OAAQ,CACN,MAAO,GACP,QAAS,CACP,OAAQ,GACR,OAAQ,IACR,MAAO,GACT,CACF,EACA,KAAM,CACJ,QAAS,CACP,OAAQ,GACR,OAAQ,CACN,EAAG,IACH,EAAG,IACL,CACF,EACA,UAAW,OACX,OAAQ,GACR,SAAU,MACV,OAAQ,GACR,MAAO,EACP,SAAU,EACZ,EACA,QAAS,CACP,MAAO,GACP,OAAQ,GACR,KAAM,CACJ,OAAQ,GACR,MAAO,EACP,YAAa,GACb,KAAM,EACR,CACF,EACA,KAAM,CACJ,UAAW,CACT,OAAQ,GACR,MAAO,EACP,KAAM,EACR,EACA,MAAO,CACL,IAAK,EACL,IAAK,CACP,CACF,CACF,CACF,CAAC,EAEKE,EAAYC,GAAwB,CACpCA,EAAO,UAAU,SAAS,MAAM,EAClCF,EAAU,UAAU,MAAM,EAE1BA,EAAU,UAAU,OAAO,CAE/B,EAEMG,EAAeC,GAAwC,CAC3DA,EACG,OAAQ,GAAM,EAAE,OAAS,cAAgB,EAAE,gBAAkB,OAAO,EACpE,IAAK,GAAM,EAAE,MAAqB,EAClC,QAAQH,CAAQ,CACrB,EACMI,EAAW,IAAI,iBAAiBF,CAAW,EAC3CD,EAAS,SAAS,cAAc,MAAM,EAC5CG,EAAS,QAAQH,EAAQ,CAAE,WAAY,EAAK,CAAC,EAE7CD,EAASC,CAAM,CACjB,CAAC","names":["generatedAttribute","mouseDownEvent","mouseUpEvent","mouseLeaveEvent","mouseOutEvent","mouseMoveEvent","touchStartEvent","touchEndEvent","touchMoveEvent","touchCancelEvent","resizeEvent","visibilityChangeEvent","errorPrefix","Vector3d","_Vector3d","xOrCoords","y","z","angle","length","isNumber","coords3d","errorPrefix","source","x","v","n","c","v3d","Vector","_Vector","Vector3d","xOrCoords","y","source","x","_random","getRandom","clamp","_random","num","min","max","mix","comp1","comp2","weight1","weight2","randomInRange","r","getRangeMax","getRangeMin","getRangeValue","value","isNumber","setRangeValue","source","getValue","options","random","enable","minimumValue","isBoolean","getDistances","pointA","pointB","dx","dy","getDistance","getParticleDirectionAngle","direction","position","center","getParticleBaseVelocity","baseVelocity","Vector","calcExactPositionOrRandomFromSize","data","getRandom","parseAlpha","input","_logger","getLogger","_logger","isSsr","hasMatchMedia","safeMatchMedia","query","safeMutationObserver","callback","isInArray","value","array","isArray","arrayRandomIndex","array","getRandom","itemFromArray","index","useIndex","isPointInside","point","size","offset","radius","direction","areBoundsInside","calculateBounds","bounds","inside","deepExtend","destination","sources","source","isObject","sourceIsArray","key","sourceDict","value","destDict","v","executeOnSingleOrMultiple","obj","callback","isArray","item","index","itemFromSingleOrMultiple","useIndex","itemFromArray","initParticleNumericAnimationValue","options","pxRatio","valueRange","animationOptions","res","getRangeValue","getRangeMax","getRangeMin","getRandom","autoStatus","randomInRange","getPositionOrSize","positionOrSize","canvasSize","_","rest","getPosition","position","isBoolean","arg","isString","isNumber","isFunction","isObject","isArray","randomColorValue","midColorValue","colorManagers","addColorManager","manager","hue2rgb","p","q","stringToRgba","input","shorthandRegex","hexFixed","_","g","b","a","regex","result","rangeColorToRgb","index","useIndex","color","isString","colorToRgb","isArray","itemFromArray","res","getRandomRgbColor","stringToRgb","rangeColorToHsl","color","index","useIndex","rgb","rangeColorToRgb","rgbToHsl","r1","g1","b1","max","min","res","stringToRgb","input","stringToRgba","hslToRgb","hsl","result","hslPercent","q","p","hue2rgb","hslaToRgba","hsla","rgbResult","getRandomRgbColor","min","fixedMin","randomInRange","setRangeValue","getStyleFromRgb","color","opacity","getStyleFromHsl","colorMix","color1","color2","size1","size2","rgb1","rgb2","mix","getLinkColor","p1","p2","linkColor","randomColorValue","midColorValue","sourceColor","destColor","hslColor","getLinkRandomColor","optColor","blink","consent","isString","rangeColorToRgb","getHslFromAnimation","animation","getHslAnimationFromHsl","animationOptions","reduceFactor","resColor","setColorAnimation","colorValue","colorAnimation","getRangeValue","getRandom","drawLine","context","begin","end","drawTriangle","p1","p2","p3","paintBase","dimension","baseColor","paintImage","image","opacity","clear","drawParticle","data","container","particle","delta","colorStyles","backgroundMask","composite","radius","shadow","transform","pos","angle","rotateData","transformData","shadowColor","getStyleFromRgb","strokeWidth","drawShape","drawShapeAfterEffect","drawer","drawPlugin","plugin","drawParticlePlugin","alterHsl","color","type","value","setTransformValue","factor","newFactor","key","newValue","Canvas","container","particle","updater","ctx","radius","zOpacity","colorStyles","transform","fill","stroke","updaterTransform","plugin","fColor","sColor","rangeColorToHsl","options","cover","color","coverRgb","rangeColorToRgb","coverColor","getStyleFromRgb","element","deepExtend","value","trail","trailFill","fillColor","resolve","reject","img","evt","baseColor","paintBase","image","opacity","paintImage","observer","originalStyle","style","callback","priority","clear","cb","delta","pfColor","psColor","zIndexOptions","zOpacityFactor","strokeOpacity","zStrokeOpacity","getStyleFromHsl","drawParticle","drawParticlePlugin","drawPlugin","obs","safeMutationObserver","records","record","getLogger","background","elementStyle","canvas","generatedAttribute","pxRatio","size","newSize","oldSize","needsRefresh","manageListener","element","event","handler","add","options","addOptions","isBoolean","removeOptions","EventListeners","container","e","mouseInteractivity","mousePos","onClick","executeOnSingleOrMultiple","mode","mediaEvent","defaultThemes","themeName","theme","canvas","mouseLeaveTmpEvent","handlers","interactivityEl","html","canvasEl","mouseMoveEvent","touchStartEvent","touchMoveEvent","touchEndEvent","mouseUpEvent","mouseDownEvent","touchCancelEvent","detectType","mouseLeaveEvent","mouseOutEvent","visibilityChangeEvent","mediaMatch","safeMatchMedia","resizeEvent","entries","interactivity","mouse","handled","mousePosition","plugin","pos","mouseEvent","clientRect","source","target","sourceRect","targetRect","canvasRect","touchEvent","lastTouch","pxRatio","evt","touches","touch","OptionsColor","_OptionsColor","source","data","color","isString","isArray","Background","OptionsColor","data","BackgroundMaskCover","OptionsColor","data","BackgroundMask","BackgroundMaskCover","data","cover","color","isString","FullScreen","data","ClickEvent","data","DivEvent","value","executeOnSingleOrMultiple","t","data","ids","Parallax","data","HoverEvent","Parallax","data","ResizeEvent","data","Events","ClickEvent","DivEvent","HoverEvent","ResizeEvent","value","data","onDiv","executeOnSingleOrMultiple","t","tmp","isBoolean","Modes","engine","container","data","interactors","interactor","Interactivity","engine","container","Events","Modes","value","data","detectsOn","ManualParticle","data","deepExtend","Responsive","data","deepExtend","ThemeDefault","data","Theme","ThemeDefault","data","deepExtend","ColorAnimation","data","setRangeValue","HslAnimation","ColorAnimation","data","AnimatableColor","_AnimatableColor","OptionsColor","HslAnimation","source","data","color","isString","isArray","colorAnimation","CollisionsAbsorb","data","CollisionsOverlap","data","AnimationOptions","data","setRangeValue","RangedAnimationOptions","Random","data","ValueWithRandom","Random","data","isBoolean","setRangeValue","ParticlesBounceFactor","ValueWithRandom","ParticlesBounce","ParticlesBounceFactor","data","Collisions","CollisionsAbsorb","ParticlesBounce","CollisionsOverlap","data","setRangeValue","MoveAngle","data","setRangeValue","MoveAttract","value","data","setRangeValue","rotateX","rotateY","MoveCenter","data","MoveGravity","data","setRangeValue","MovePath","ValueWithRandom","data","deepExtend","MoveTrailFill","data","OptionsColor","MoveTrail","MoveTrailFill","value","data","OutModes","data","Spin","data","setRangeValue","deepExtend","Move","MoveAngle","MoveAttract","MoveCenter","MoveGravity","MovePath","OutModes","Spin","MoveTrail","value","_","data","isNumber","setRangeValue","outModes","isObject","OpacityAnimation","RangedAnimationOptions","value","data","Opacity","ValueWithRandom","OpacityAnimation","value","data","animation","setRangeValue","ParticlesDensity","value","data","width","height","ParticlesNumber","ParticlesDensity","value","data","limit","Shadow","OptionsColor","data","charKey","charAltKey","imageKey","imageAltKey","polygonKey","polygonAltKey","Shape","item","mainKey","altKey","altOverride","itemIsArray","isArray","emptyValue","mainDifferentValues","altDifferentValues","deepExtend","value","_value","data","options","shape","SizeAnimation","RangedAnimationOptions","value","data","Size","ValueWithRandom","SizeAnimation","value","data","animation","setRangeValue","Stroke","data","AnimatableColor","setRangeValue","ZIndex","ValueWithRandom","data","ParticlesOptions","engine","container","ParticlesBounce","Collisions","AnimatableColor","Move","ParticlesNumber","Opacity","Shadow","Shape","Size","Stroke","ZIndex","data","group","item","deepExtend","collisions","strokeToLoad","executeOnSingleOrMultiple","t","tmp","updaters","updater","interactors","interactor","loadOptions","options","sourceOptionsArr","sourceOptions","loadParticlesOptions","engine","container","ParticlesOptions","Options","engine","container","mode","theme","preset","Background","BackgroundMask","FullScreen","Interactivity","loadParticlesOptions","value","data","executeOnSingleOrMultiple","setRangeValue","detectRetina","fpsLimit","fullScreen","isBoolean","t","tmp","ManualParticle","deepExtend","interactors","interactor","responsive","optResponsive","Responsive","a","b","existingTheme","optTheme","Theme","width","pxRatio","defaultOptions","responsiveOptions","name","chosenTheme","mediaMatch","safeMatchMedia","clientDarkMode","defaultTheme","InteractionManager","engine","container","delta","interactor","mode","particle","fixOutMode","data","isInArray","diameter","Particle","engine","id","container","position","overrideOptions","group","zIndex","tryCount","plugin","pluginPos","Vector3d","canvasSize","exactPosition","calcExactPositionOrRandomFromSize","pos","radius","outModes","fixHorizontal","outMode","value","fixVertical","baseVelocity","getParticleBaseVelocity","res","moveOptions","rad","getRangeValue","radOffset","range","randomInRange","setRangeValue","getRandom","collisionsOptions","overlapOptions","retries","errorPrefix","particle","getDistance","color","backFactor","backSum","alterHsl","zIndexValue","clamp","getPosition","getParticleDirectionAngle","Vector","shapeOptions","reduceDuplicates","shapeData","deepExtend","itemFromSingleOrMultiple","override","pathGenerator","updater","delta","getHslFromAnimation","pxRatio","mainOptions","particlesOptions","loadParticlesOptions","shapeType","overrideShapeType","shape","interactivity","Interactivity","pathOptions","getValue","initParticleNumericAnimationValue","particles","drawer","sideCountFunc","rangeColorToRgb","mover","Point","position","particle","Range","x","y","Rectangle","_Rectangle","Range","x","y","width","height","point","w","h","pos","range","Circle","pos1","pos2","size2","w2","h2","Circle","_Circle","Range","x","y","radius","point","getDistance","range","pos1","pos2","distPos","r","rSum","dist","Rectangle","width","height","QuadTree","_QuadTree","rectangle","capacity","x","y","width","height","i","Rectangle","point","sub","range","check","found","res","p","getDistance","position","radius","Circle","size","qTreeCapacity","qTreeRectangle","canvasSize","Rectangle","Particles","engine","container","options","manualCount","group","numberOptions","densityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","t","densityOptions","canvas","pxRatio","position","overrideOptions","initializer","particle","Particle","canAdd","e","getLogger","errorPrefix","index","override","zIdx","InteractionManager","QuadTree","getPosition","limit","countToRemove","delta","plugin","p","condition","mode","handled","pathGenerator","groupOptions","i","j","nb","mouse","quantity","deleted","groups","particlesToDelete","resizeFactor","mover","Point","checkDelete","updater","zArray","a","b","Retina","container","options","isSsr","ratio","element","particles","moveOptions","getRangeValue","particle","moveDistance","props","maxDistance","guardCheck","container","initDelta","value","fpsLimit","smooth","loadContainerOptions","engine","sourceOptionsArr","options","Options","loadOptions","defaultPathGeneratorKey","defaultPathGenerator","p","Container","id","sourceOptions","entries","entry","timestamp","delta","e","getLogger","errorPrefix","Retina","Canvas","Particles","EventListeners","callback","el","clickOrTouchHandler","pos","radius","pxRatio","posRetina","particles","clickHandler","mouseEvent","touchStartHandler","touched","touchMoved","touchMoveHandler","touchEndHandler","touchEvent","lastTouch","element","canvasRect","touchCancelHandler","key","generator","override","drawer","mainArr","idx","t","force","refreshTime","type","plugin","res","mode","shapes","availablePlugins","getRangeValue","name","needsUpdate","noiseOrGenerator","init","update","pathOrGenerator","pathGenerator","isFunction","oldGenerator","resolve","newMaxWidth","EventDispatcher","type","listener","arr","args","listeners","handler","length","idx","getItemsFromInitializer","container","map","initializers","force","res","t","Plugins","engine","name","initInteractor","initMover","initUpdater","type","pathGenerator","plugin","presetKey","options","override","types","drawer","executeOnSingleOrMultiple","preset","sourceOptions","updaters","updater","getDataFromUrl","data","url","itemFromSingleOrMultiple","response","getLogger","errorPrefix","isParamsEmpty","params","isParams","obj","Engine","EventDispatcher","Plugins","res","name","config","nameOrConfig","isString","type","listener","interactorInitializer","refresh","moverInitializer","updaterInitializer","generator","plugin","preset","options","override","shape","drawer","initOrRefresh","afterEffectOrRefresh","destroyOrRefresh","customDrawer","realRefresh","realInit","realAfterEffect","realDestroy","isBoolean","isFunction","args","index","dom","item","tagIdOrOptionsOrParams","optionsOrIndex","isNumber","tagId","pathConfigJson","id","element","callback","domItem","getRandom","domContainer","currentOptions","oldIndex","v","old","canvasEl","generatedAttribute","existingCanvases","newItem","Container","HslColorManager","color","colorValue","hslColor","hslToRgb","getRangeValue","input","regex","result","hslaToRgba","parseAlpha","RgbColorManager","color","colorValue","rgbColor","getRangeValue","input","regex","result","parseAlpha","init","rgbColorManager","RgbColorManager","hslColorManager","HslColorManager","addColorManager","engine","Engine","ParticlesInteractorBase","container","tsParticles","init","isSsr","applyDistance","particle","initialPosition","dx","dy","getDistances","dxFixed","dyFixed","maxDistance","hDistance","vDistance","pos","vel","getRandom","move","moveOptions","moveSpeed","maxSpeed","moveDrift","delta","applyPath","gravityOptions","gravityFactor","decay","velocity","zIndexOptions","zVelocityFactor","position","spin","container","updateFunc","maxCanvasSize","particlesOptions","pathOptions","path","clamp","getProximitySpeedFactor","diffFactor","BaseMover","particle","container","options","spinOptions","spinPos","spinCenter","pos","distance","getDistance","spinAcceleration","getRangeValue","gravityOptions","delta","particleOptions","moveOptions","pxRatio","slowFactor","getProximitySpeedFactor","baseSpeed","moveDrift","maxSize","getRangeMax","sizeFactor","moveSpeed","maxSpeed","spin","move","applyDistance","loadBaseMover","engine","refresh","BaseMover","CircleDrawer","context","particle","radius","circleRange","container","shapeData","angle","isObject","loadCircleShape","engine","refresh","CircleDrawer","updateColorValue","delta","colorValue","valueAnimation","max","decrease","offset","randomInRange","velocity","decay","updateColor","particle","hAnimation","sAnimation","lAnimation","color","h","s","ColorUpdater","container","particle","hslColor","rangeColorToHsl","getHslAnimationFromHsl","hAnimation","sAnimation","lAnimation","color","delta","updateColor","loadColorUpdater","engine","refresh","container","ColorUpdater","checkDestroy","particle","value","minValue","maxValue","updateOpacity","delta","data","decay","clamp","OpacityUpdater","container","particle","opacityOptions","initParticleNumericAnimationValue","opacityAnimation","getRangeValue","getRandom","delta","updateOpacity","loadOpacityUpdater","engine","refresh","container","OpacityUpdater","bounceHorizontal","data","velocity","bounced","newVelocity","getValue","minPos","bounceVertical","BounceOutMode","container","particle","direction","delta","outMode","handled","plugin","pos","offset","size","bounds","calculateBounds","canvasSize","bounceHorizontal","bounceVertical","DestroyOutMode","container","particle","direction","_delta","outMode","isPointInside","Vector","dx","dy","getDistances","vx","vy","NoneOutMode","container","particle","direction","delta","outMode","gravityOptions","canvasSize","pRadius","position","isPointInside","Vector","OutOutMode","container","particle","direction","delta","outMode","vx","vy","circVec","Vector","dx","dy","getDistances","randomInRange","newDx","newDy","isPointInside","wrap","canvasSize","newPos","sizeValue","nextBounds","calculateBounds","getRandom","OutOfCanvasUpdater","container","particle","delta","outMode","direction","updater","BounceOutMode","DestroyOutMode","OutOutMode","NoneOutMode","outModes","loadOutModesUpdater","engine","refresh","container","OutOfCanvasUpdater","checkDestroy","particle","value","minValue","maxValue","updateSize","delta","data","sizeVelocity","decay","clamp","SizeUpdater","particle","container","sizeOptions","sizeAnimation","getRandom","delta","updateSize","loadSizeUpdater","engine","refresh","SizeUpdater","loadBasic","engine","refresh","loadBaseMover","loadCircleShape","loadColorUpdater","loadOpacityUpdater","loadOutModesUpdater","loadSizeUpdater","CircleWarp","Circle","x","y","radius","canvasSize","point","width","height","range","rect","circle","newPos","biggerCircle","rectSW","Rectangle","LinksShadow","OptionsColor","data","LinksTriangle","data","OptionsColor","Links","OptionsColor","LinksShadow","LinksTriangle","data","getLinkDistance","pos1","pos2","optDistance","canvasSize","warp","dx","dy","distance","getDistances","absDiffs","warpDistances","Linker","ParticlesInteractorBase","container","p1","linksOptions","linkColor","optColor","getLinkRandomColor","linkOpt1","optOpacity","range","CircleWarp","Circle","query","p2","linkOpt2","t","opacityLine","particle","options","sources","Links","source","loadLinksInteraction","engine","refresh","container","Linker","drawLinkLine","params","drawn","begin","end","maxDistance","context","canvasSize","width","backgroundMask","colorLine","opacity","links","getDistance","drawLine","pi1","pi2","endNE","d1","getDistances","yi","endSW","d2","xi","endSE","d3","getStyleFromRgb","shadow","shadowColor","rangeColorToRgb","drawLinkTriangle","pos1","pos2","pos3","colorTriangle","opacityTriangle","drawTriangle","getLinkKey","ids","a","b","setLinkFrequency","particles","dictionary","key","t","res","getRandom","LinkInstance","container","p1","link","p1LinksOptions","options","p2","pos1","pos2","opacity","ctx","colorLine","twinkle","twinkleFreq","twinkleRgb","rangeColorToRgb","getRandom","getRangeValue","linkColor","getLinkColor","width","maxDistance","backgroundMask","drawLinkLine","link1","link2","linksOptions","triangleOptions","p3","opacityTriangle","pos3","linksDistance","getDistance","colorTriangle","drawLinkTriangle","p1Links","vertices","t","linkFreq","l","vertex","setLinkFrequency","context","particle","links","ratio","retina","distance","LinksPlugin","container","LinkInstance","loadLinksPlugin","engine","refresh","plugin","loadParticlesLinksInteraction","engine","refresh","loadLinksInteraction","loadLinksPlugin","options","loadLinksPreset","engine","refresh","loadBasic","loadParticlesLinksInteraction","options","loadLinksPreset","tsParticles","particles","setTheme","target","themeChange","mutationList","observer"]}